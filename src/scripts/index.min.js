"use strict";
function _defineProperty(obj, key, value) {
  return (
    key in obj
      ? Object.defineProperty(obj, key, {
          value: value,
          enumerable: !0,
          configurable: !0,
          writable: !0
        })
      : (obj[key] = value),
    obj
  );
}
function _possibleConstructorReturn(self, call) {
  if (!self)
    throw new ReferenceError(
      "this hasn't been initialised - super() hasn't been called"
    );
  return !call || ("object" != typeof call && "function" != typeof call)
    ? self
    : call;
}
function _inherits(subClass, superClass) {
  if ("function" != typeof superClass && null !== superClass)
    throw new TypeError(
      "Super expression must either be null or a function, not " +
        typeof superClass
    );
  (subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: !1,
      writable: !0,
      configurable: !0
    }
  })),
    superClass &&
      (Object.setPrototypeOf
        ? Object.setPrototypeOf(subClass, superClass)
        : (subClass.__proto__ = superClass));
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
var _get = function get(object, property, receiver) {
    null === object && (object = Function.prototype);
    var desc = Object.getOwnPropertyDescriptor(object, property);
    if (void 0 === desc) {
      var parent = Object.getPrototypeOf(object);
      return null === parent ? void 0 : get(parent, property, receiver);
    }
    if ("value" in desc) return desc.value;
    var getter = desc.get;
    if (void 0 !== getter) return getter.call(receiver);
  },
  _createClass = (function() {
    function defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        (descriptor.enumerable = descriptor.enumerable || !1),
          (descriptor.configurable = !0),
          "value" in descriptor && (descriptor.writable = !0),
          Object.defineProperty(target, descriptor.key, descriptor);
      }
    }
    return function(Constructor, protoProps, staticProps) {
      return (
        protoProps && defineProperties(Constructor.prototype, protoProps),
        staticProps && defineProperties(Constructor, staticProps),
        Constructor
      );
    };
  })(),
  mdc = (function(modules) {
    function __webpack_require__(moduleId) {
      if (installedModules[moduleId]) return installedModules[moduleId].exports;
      var module = (installedModules[moduleId] = {
        i: moduleId,
        l: !1,
        exports: {}
      });
      return (
        modules[moduleId].call(
          module.exports,
          module,
          module.exports,
          __webpack_require__
        ),
        (module.l = !0),
        module.exports
      );
    }
    var installedModules = {};
    return (
      (__webpack_require__.m = modules),
      (__webpack_require__.c = installedModules),
      (__webpack_require__.d = function(exports, name, getter) {
        __webpack_require__.o(exports, name) ||
          Object.defineProperty(exports, name, {
            configurable: !1,
            enumerable: !0,
            get: getter
          });
      }),
      (__webpack_require__.n = function(module) {
        var getter =
          module && module.__esModule
            ? function() {
                return module.default;
              }
            : function() {
                return module;
              };
        return __webpack_require__.d(getter, "a", getter), getter;
      }),
      (__webpack_require__.o = function(object, property) {
        return Object.prototype.hasOwnProperty.call(object, property);
      }),
      (__webpack_require__.p = ""),
      __webpack_require__((__webpack_require__.s = 38))
    );
  })([
    function(module, __webpack_exports__, __webpack_require__) {
      var MDCFoundation = (function() {
        function MDCFoundation() {
          var adapter =
            arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
          _classCallCheck(this, MDCFoundation), (this.adapter_ = adapter);
        }
        return (
          _createClass(MDCFoundation, null, [
            {
              key: "cssClasses",
              get: function() {
                return {};
              }
            },
            {
              key: "strings",
              get: function() {
                return {};
              }
            },
            {
              key: "numbers",
              get: function() {
                return {};
              }
            },
            {
              key: "defaultAdapter",
              get: function() {
                return {};
              }
            }
          ]),
          _createClass(MDCFoundation, [
            { key: "init", value: function() {} },
            { key: "destroy", value: function() {} }
          ]),
          MDCFoundation
        );
      })();
      __webpack_exports__.a = MDCFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0),
        MDCComponent = (function() {
          function MDCComponent(root) {
            var foundation =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : void 0;
            _classCallCheck(this, MDCComponent), (this.root_ = root);
            for (
              var _len = arguments.length,
                args = Array(_len > 2 ? _len - 2 : 0),
                _key = 2;
              _key < _len;
              _key++
            )
              args[_key - 2] = arguments[_key];
            this.initialize.apply(this, args),
              (this.foundation_ =
                void 0 === foundation
                  ? this.getDefaultFoundation()
                  : foundation),
              this.foundation_.init(),
              this.initialSyncWithDOM();
          }
          return (
            _createClass(MDCComponent, null, [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCComponent(
                    root,
                    new __WEBPACK_IMPORTED_MODULE_0__foundation__.a()
                  );
                }
              }
            ]),
            _createClass(MDCComponent, [
              { key: "initialize", value: function() {} },
              {
                key: "getDefaultFoundation",
                value: function() {
                  throw new Error(
                    "Subclasses must override getDefaultFoundation to return a properly configured foundation class"
                  );
                }
              },
              { key: "initialSyncWithDOM", value: function() {} },
              {
                key: "destroy",
                value: function() {
                  this.foundation_.destroy();
                }
              },
              {
                key: "listen",
                value: function(evtType, handler) {
                  this.root_.addEventListener(evtType, handler);
                }
              },
              {
                key: "unlisten",
                value: function(evtType, handler) {
                  this.root_.removeEventListener(evtType, handler);
                }
              },
              {
                key: "emit",
                value: function(evtType, evtData) {
                  var shouldBubble =
                      arguments.length > 2 &&
                      void 0 !== arguments[2] &&
                      arguments[2],
                    evt = void 0;
                  "function" == typeof CustomEvent
                    ? (evt = new CustomEvent(evtType, {
                        detail: evtData,
                        bubbles: shouldBubble
                      }))
                    : (evt = document.createEvent(
                        "CustomEvent"
                      )).initCustomEvent(evtType, shouldBubble, !1, evtData),
                    this.root_.dispatchEvent(evt);
                }
              }
            ]),
            MDCComponent
          );
        })();
      __webpack_exports__.a = MDCComponent;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__foundation__ = __webpack_require__(0),
        __WEBPACK_IMPORTED_MODULE_1__component__ = __webpack_require__(1);
      __webpack_require__.d(__webpack_exports__, "MDCFoundation", function() {
        return __WEBPACK_IMPORTED_MODULE_0__foundation__.a;
      }),
        __webpack_require__.d(__webpack_exports__, "MDCComponent", function() {
          return __WEBPACK_IMPORTED_MODULE_1__component__.a;
        });
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCRipple", function() {
          return MDCRipple;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          "RippleCapableSurface",
          function() {
            return RippleCapableSurface;
          }
        );
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(16),
        __webpack_require__(41)),
        __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(8);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCRippleFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      ),
        __webpack_require__.d(__webpack_exports__, "util", function() {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });
      var MDCRipple = (function(_WEBPACK_IMPORTED_MO) {
          function MDCRipple() {
            var _ref;
            _classCallCheck(this, MDCRipple);
            for (
              var _len2 = arguments.length, args = Array(_len2), _key2 = 0;
              _key2 < _len2;
              _key2++
            )
              args[_key2] = arguments[_key2];
            var _this = _possibleConstructorReturn(
              this,
              (_ref =
                MDCRipple.__proto__ ||
                Object.getPrototypeOf(MDCRipple)).call.apply(
                _ref,
                [this].concat(args)
              )
            );
            return (_this.disabled = !1), _this.unbounded_, _this;
          }
          return (
            _inherits(
              MDCRipple,
              __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
            ),
            _createClass(
              MDCRipple,
              [
                {
                  key: "setUnbounded_",
                  value: function() {
                    this.foundation_.setUnbounded(this.unbounded_);
                  }
                },
                {
                  key: "activate",
                  value: function() {
                    this.foundation_.activate();
                  }
                },
                {
                  key: "deactivate",
                  value: function() {
                    this.foundation_.deactivate();
                  }
                },
                {
                  key: "layout",
                  value: function() {
                    this.foundation_.layout();
                  }
                },
                {
                  key: "getDefaultFoundation",
                  value: function() {
                    return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a(
                      MDCRipple.createAdapter(this)
                    );
                  }
                },
                {
                  key: "initialSyncWithDOM",
                  value: function() {
                    this.unbounded =
                      "mdcRippleIsUnbounded" in this.root_.dataset;
                  }
                },
                {
                  key: "unbounded",
                  get: function() {
                    return this.unbounded_;
                  },
                  set: function(unbounded) {
                    (this.unbounded_ = Boolean(unbounded)),
                      this.setUnbounded_();
                  }
                }
              ],
              [
                {
                  key: "attachTo",
                  value: function(root) {
                    var _ref2$isUnbounded = (arguments.length > 1 &&
                      void 0 !== arguments[1]
                        ? arguments[1]
                        : {}
                      ).isUnbounded,
                      isUnbounded =
                        void 0 === _ref2$isUnbounded
                          ? void 0
                          : _ref2$isUnbounded,
                      ripple = new MDCRipple(root);
                    return (
                      void 0 !== isUnbounded &&
                        (ripple.unbounded = isUnbounded),
                      ripple
                    );
                  }
                },
                {
                  key: "createAdapter",
                  value: function(instance) {
                    var MATCHES = __WEBPACK_IMPORTED_MODULE_3__util__.getMatchesProperty(
                      HTMLElement.prototype
                    );
                    return {
                      browserSupportsCssVars: function() {
                        return __WEBPACK_IMPORTED_MODULE_3__util__.supportsCssVariables(
                          window
                        );
                      },
                      isUnbounded: function() {
                        return instance.unbounded;
                      },
                      isSurfaceActive: function() {
                        return instance.root_[MATCHES](":active");
                      },
                      isSurfaceDisabled: function() {
                        return instance.disabled;
                      },
                      addClass: function(className) {
                        return instance.root_.classList.add(className);
                      },
                      removeClass: function(className) {
                        return instance.root_.classList.remove(className);
                      },
                      containsEventTarget: function(target) {
                        return instance.root_.contains(target);
                      },
                      registerInteractionHandler: function(evtType, handler) {
                        return instance.root_.addEventListener(
                          evtType,
                          handler,
                          __WEBPACK_IMPORTED_MODULE_3__util__.applyPassive()
                        );
                      },
                      deregisterInteractionHandler: function(evtType, handler) {
                        return instance.root_.removeEventListener(
                          evtType,
                          handler,
                          __WEBPACK_IMPORTED_MODULE_3__util__.applyPassive()
                        );
                      },
                      registerDocumentInteractionHandler: function(
                        evtType,
                        handler
                      ) {
                        return document.documentElement.addEventListener(
                          evtType,
                          handler,
                          __WEBPACK_IMPORTED_MODULE_3__util__.applyPassive()
                        );
                      },
                      deregisterDocumentInteractionHandler: function(
                        evtType,
                        handler
                      ) {
                        return document.documentElement.removeEventListener(
                          evtType,
                          handler,
                          __WEBPACK_IMPORTED_MODULE_3__util__.applyPassive()
                        );
                      },
                      registerResizeHandler: function(handler) {
                        return window.addEventListener("resize", handler);
                      },
                      deregisterResizeHandler: function(handler) {
                        return window.removeEventListener("resize", handler);
                      },
                      updateCssVariable: function(varName, value) {
                        return instance.root_.style.setProperty(varName, value);
                      },
                      computeBoundingRect: function() {
                        return instance.root_.getBoundingClientRect();
                      },
                      getWindowPageOffset: function() {
                        return { x: window.pageXOffset, y: window.pageYOffset };
                      }
                    };
                  }
                }
              ]
            ),
            MDCRipple
          );
        })(),
        RippleCapableSurface = function RippleCapableSurface() {
          _classCallCheck(this, RippleCapableSurface);
        };
      RippleCapableSurface.prototype.root_,
        RippleCapableSurface.prototype.unbounded,
        RippleCapableSurface.prototype.disabled;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCSelectionControlState",
          function() {
            return MDCSelectionControlState;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCSelectionControl",
          function() {
            return MDCSelectionControl;
          }
        );
      __webpack_require__(3);
      var MDCSelectionControlState = void 0,
        MDCSelectionControl = (function() {
          function MDCSelectionControl() {
            _classCallCheck(this, MDCSelectionControl);
          }
          return (
            _createClass(MDCSelectionControl, [
              { key: "ripple", get: function() {} }
            ]),
            MDCSelectionControl
          );
        })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      function hasProperShape(windowObj) {
        return (
          void 0 !== windowObj.document &&
          "function" == typeof windowObj.document.createElement
        );
      }
      function eventFoundInMaps(eventType) {
        return eventType in eventTypeMap || eventType in cssPropertyMap;
      }
      function getJavaScriptEventName(eventType, map, el) {
        return map[eventType].styleProperty in el.style
          ? map[eventType].noPrefix
          : map[eventType].webkitPrefix;
      }
      function getAnimationName(windowObj, eventType) {
        if (!hasProperShape(windowObj) || !eventFoundInMaps(eventType))
          return eventType;
        var map = eventType in eventTypeMap ? eventTypeMap : cssPropertyMap,
          el = windowObj.document.createElement("div");
        return map === eventTypeMap
          ? getJavaScriptEventName(eventType, map, el)
          : map[eventType].noPrefix in el.style
            ? map[eventType].noPrefix
            : map[eventType].webkitPrefix;
      }
      function getCorrectEventName(windowObj, eventType) {
        return getAnimationName(windowObj, eventType);
      }
      function getCorrectPropertyName(windowObj, eventType) {
        return getAnimationName(windowObj, eventType);
      }
      __webpack_require__.d(__webpack_exports__, "c", function() {
        return transformStyleProperties;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return getCorrectEventName;
        }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return getCorrectPropertyName;
        });
      var eventTypeMap = {
          animationstart: {
            noPrefix: "animationstart",
            webkitPrefix: "webkitAnimationStart",
            styleProperty: "animation"
          },
          animationend: {
            noPrefix: "animationend",
            webkitPrefix: "webkitAnimationEnd",
            styleProperty: "animation"
          },
          animationiteration: {
            noPrefix: "animationiteration",
            webkitPrefix: "webkitAnimationIteration",
            styleProperty: "animation"
          },
          transitionend: {
            noPrefix: "transitionend",
            webkitPrefix: "webkitTransitionEnd",
            styleProperty: "transition"
          }
        },
        cssPropertyMap = {
          animation: {
            noPrefix: "animation",
            webkitPrefix: "-webkit-animation"
          },
          transform: {
            noPrefix: "transform",
            webkitPrefix: "-webkit-transform"
          },
          transition: {
            noPrefix: "transition",
            webkitPrefix: "-webkit-transition"
          }
        },
        transformStyleProperties = [
          "transform",
          "WebkitTransform",
          "MozTransform",
          "OTransform",
          "MSTransform"
        ];
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCTopAppBarAdapter() {
          _classCallCheck(this, MDCTopAppBarAdapter);
        }
        _createClass(MDCTopAppBarAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "hasClass", value: function(className) {} },
          { key: "setStyle", value: function(property, value) {} },
          { key: "getTopAppBarHeight", value: function() {} },
          {
            key: "registerNavigationIconInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterNavigationIconInteractionHandler",
            value: function(type, handler) {}
          },
          { key: "notifyNavigationIconClicked", value: function() {} },
          { key: "registerScrollHandler", value: function(handler) {} },
          { key: "deregisterScrollHandler", value: function(handler) {} },
          { key: "registerResizeHandler", value: function(handler) {} },
          { key: "deregisterResizeHandler", value: function(handler) {} },
          { key: "getViewportScrollY", value: function() {} },
          { key: "getTotalActionItems", value: function() {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "c", function() {
        return strings;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return cssClasses;
        }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return numbers;
        });
      var cssClasses = {
          FIXED_CLASS: "mdc-top-app-bar--fixed",
          FIXED_SCROLLED_CLASS: "mdc-top-app-bar--fixed-scrolled",
          SHORT_CLASS: "mdc-top-app-bar--short",
          SHORT_HAS_ACTION_ITEM_CLASS: "mdc-top-app-bar--short-has-action-item",
          SHORT_COLLAPSED_CLASS: "mdc-top-app-bar--short-collapsed"
        },
        numbers = {
          DEBOUNCE_THROTTLE_RESIZE_TIME_MS: 100,
          MAX_TOP_APP_BAR_HEIGHT: 128
        },
        strings = {
          ACTION_ITEM_SELECTOR: ".mdc-top-app-bar__action-item",
          NAVIGATION_EVENT: "MDCTopAppBar:nav",
          NAVIGATION_ICON_SELECTOR: ".mdc-top-app-bar__navigation-icon",
          ROOT_SELECTOR: ".mdc-top-app-bar",
          TITLE_SELECTOR: ".mdc-top-app-bar__title"
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      function detectEdgePseudoVarBug(windowObj) {
        var document = windowObj.document,
          node = document.createElement("div");
        (node.className = "mdc-ripple-surface--test-edge-var-bug"),
          document.body.appendChild(node);
        var computedStyle = windowObj.getComputedStyle(node),
          hasPseudoVarBug =
            null !== computedStyle && "solid" === computedStyle.borderTopStyle;
        return node.remove(), hasPseudoVarBug;
      }
      function supportsCssVariables(windowObj) {
        var forceRefresh =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
          supportsCssVariables = supportsCssVariables_;
        if ("boolean" == typeof supportsCssVariables_ && !forceRefresh)
          return supportsCssVariables;
        if (windowObj.CSS && "function" == typeof windowObj.CSS.supports) {
          var explicitlySupportsCssVars = windowObj.CSS.supports(
              "--css-vars",
              "yes"
            ),
            weAreFeatureDetectingSafari10plus =
              windowObj.CSS.supports("(--css-vars: yes)") &&
              windowObj.CSS.supports("color", "#00000000");
          return (
            (supportsCssVariables =
              !(
                !explicitlySupportsCssVars && !weAreFeatureDetectingSafari10plus
              ) && !detectEdgePseudoVarBug(windowObj)),
            forceRefresh || (supportsCssVariables_ = supportsCssVariables),
            supportsCssVariables
          );
        }
      }
      function applyPassive() {
        var globalObj =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : window,
          forceRefresh =
            arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        if (void 0 === supportsPassive_ || forceRefresh) {
          var isSupported = !1;
          try {
            globalObj.document.addEventListener("test", null, {
              get passive() {
                isSupported = !0;
              }
            });
          } catch (e) {}
          supportsPassive_ = isSupported;
        }
        return !!supportsPassive_ && { passive: !0 };
      }
      function getMatchesProperty(HTMLElementPrototype) {
        return ["webkitMatchesSelector", "msMatchesSelector", "matches"]
          .filter(function(p) {
            return p in HTMLElementPrototype;
          })
          .pop();
      }
      function getNormalizedEventCoords(ev, pageOffset, clientRect) {
        var x = pageOffset.x,
          y = pageOffset.y,
          documentX = x + clientRect.left,
          documentY = y + clientRect.top,
          normalizedX = void 0,
          normalizedY = void 0;
        return (
          "touchstart" === ev.type
            ? ((normalizedX = ev.changedTouches[0].pageX - documentX),
              (normalizedY = ev.changedTouches[0].pageY - documentY))
            : ((normalizedX = ev.pageX - documentX),
              (normalizedY = ev.pageY - documentY)),
          { x: normalizedX, y: normalizedY }
        );
      }
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(
          __webpack_exports__,
          "supportsCssVariables",
          function() {
            return supportsCssVariables;
          }
        ),
        __webpack_require__.d(__webpack_exports__, "applyPassive", function() {
          return applyPassive;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          "getMatchesProperty",
          function() {
            return getMatchesProperty;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "getNormalizedEventCoords",
          function() {
            return getNormalizedEventCoords;
          }
        );
      var supportsCssVariables_ = void 0,
        supportsPassive_ = void 0;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(59);
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return __WEBPACK_IMPORTED_MODULE_0__constants__.a;
      });
      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(60);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
      });
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(7),
        __WEBPACK_IMPORTED_MODULE_2__material_base_foundation__ = (__webpack_require__(
          6
        ),
        __webpack_require__(0)),
        MDCTopAppBarBaseFoundation = (function(_WEBPACK_IMPORTED_MO2) {
          function MDCTopAppBarBaseFoundation(adapter) {
            _classCallCheck(this, MDCTopAppBarBaseFoundation);
            var _this2 = _possibleConstructorReturn(
              this,
              (
                MDCTopAppBarBaseFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTopAppBarBaseFoundation)
              ).call(
                this,
                Object.assign(
                  MDCTopAppBarBaseFoundation.defaultAdapter,
                  adapter
                )
              )
            );
            return (
              (_this2.navClickHandler_ = function() {
                return _this2.adapter_.notifyNavigationIconClicked();
              }),
              _this2
            );
          }
          return (
            _inherits(
              MDCTopAppBarBaseFoundation,
              __WEBPACK_IMPORTED_MODULE_2__material_base_foundation__["a"]
            ),
            _createClass(MDCTopAppBarBaseFoundation, null, [
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_0__constants__.c;
                }
              },
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_0__constants__.a;
                }
              },
              {
                key: "numbers",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_0__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    hasClass: function() {},
                    addClass: function() {},
                    removeClass: function() {},
                    setStyle: function() {},
                    getTopAppBarHeight: function() {},
                    registerNavigationIconInteractionHandler: function() {},
                    deregisterNavigationIconInteractionHandler: function() {},
                    notifyNavigationIconClicked: function() {},
                    registerScrollHandler: function() {},
                    deregisterScrollHandler: function() {},
                    registerResizeHandler: function() {},
                    deregisterResizeHandler: function() {},
                    getViewportScrollY: function() {
                      return 0;
                    },
                    getTotalActionItems: function() {
                      return 0;
                    }
                  };
                }
              }
            ]),
            _createClass(MDCTopAppBarBaseFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerNavigationIconInteractionHandler(
                    "click",
                    this.navClickHandler_
                  );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterNavigationIconInteractionHandler(
                    "click",
                    this.navClickHandler_
                  );
                }
              }
            ]),
            MDCTopAppBarBaseFoundation
          );
        })();
      __webpack_exports__.a = MDCTopAppBarBaseFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        (__webpack_exports__.remapEvent = function(eventName) {
          if (
            !(
              "ontouchstart" in
              (arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : window
              ).document
            )
          )
            switch (eventName) {
              case "touchstart":
                return "pointerdown";
              case "touchmove":
                return "pointermove";
              case "touchend":
                return "pointerup";
              default:
                return eventName;
            }
          return eventName;
        }),
        (__webpack_exports__.getTransformPropertyName = function() {
          var globalObj =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : window,
            forceRefresh =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (void 0 === storedTransformPropertyName_ || forceRefresh) {
            var transformPropertyName =
              "transform" in globalObj.document.createElement("div").style
                ? "transform"
                : "-webkit-transform";
            storedTransformPropertyName_ = transformPropertyName;
          }
          return storedTransformPropertyName_;
        }),
        (__webpack_exports__.supportsCssCustomProperties = function() {
          var globalObj =
            arguments.length > 0 && void 0 !== arguments[0]
              ? arguments[0]
              : window;
          return "CSS" in globalObj && globalObj.CSS.supports("(--color: red)");
        }),
        (__webpack_exports__.applyPassive = function() {
          var globalObj =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : window,
            forceRefresh =
              arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
          if (void 0 === supportsPassive_ || forceRefresh) {
            var isSupported = !1;
            try {
              globalObj.document.addEventListener("test", null, {
                get passive() {
                  isSupported = !0;
                }
              });
            } catch (e) {}
            supportsPassive_ = isSupported;
          }
          return !!supportsPassive_ && { passive: !0 };
        }),
        (__webpack_exports__.saveElementTabState = function(el) {
          el.hasAttribute("tabindex") &&
            el.setAttribute(TAB_DATA, el.getAttribute("tabindex")),
            el.setAttribute(TAB_DATA_HANDLED, !0);
        }),
        (__webpack_exports__.restoreElementTabState = function(el) {
          el.hasAttribute(TAB_DATA_HANDLED) &&
            (el.hasAttribute(TAB_DATA)
              ? (el.setAttribute("tabindex", el.getAttribute(TAB_DATA)),
                el.removeAttribute(TAB_DATA))
              : el.removeAttribute("tabindex"),
            el.removeAttribute(TAB_DATA_HANDLED));
        });
      var TAB_DATA = "data-mdc-tabindex",
        TAB_DATA_HANDLED = "data-mdc-tabindex-handled",
        storedTransformPropertyName_ = void 0,
        supportsPassive_ = void 0;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCFloatingLabel",
          function() {
            return MDCFloatingLabel;
          }
        );
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(22),
        __webpack_require__(65));
      __webpack_require__.d(
        __webpack_exports__,
        "MDCFloatingLabelFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      );
      var MDCFloatingLabel = (function(_WEBPACK_IMPORTED_MO3) {
        function MDCFloatingLabel() {
          return (
            _classCallCheck(this, MDCFloatingLabel),
            _possibleConstructorReturn(
              this,
              (
                MDCFloatingLabel.__proto__ ||
                Object.getPrototypeOf(MDCFloatingLabel)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCFloatingLabel,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCFloatingLabel,
            [
              {
                key: "shake",
                value: function(shouldShake) {
                  this.foundation_.shake(shouldShake);
                }
              },
              {
                key: "float",
                value: function(shouldFloat) {
                  this.foundation_.float(shouldFloat);
                }
              },
              {
                key: "getWidth",
                value: function() {
                  return this.foundation_.getWidth();
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this4 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a({
                    addClass: function(className) {
                      return _this4.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this4.root_.classList.remove(className);
                    },
                    getWidth: function() {
                      return _this4.root_.offsetWidth;
                    },
                    registerInteractionHandler: function(evtType, handler) {
                      return _this4.root_.addEventListener(evtType, handler);
                    },
                    deregisterInteractionHandler: function(evtType, handler) {
                      return _this4.root_.removeEventListener(evtType, handler);
                    }
                  });
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCFloatingLabel(root);
                }
              }
            ]
          ),
          MDCFloatingLabel
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCLineRipple", function() {
          return MDCLineRipple;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(23),
        __webpack_require__(81));
      __webpack_require__.d(
        __webpack_exports__,
        "MDCLineRippleFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      );
      var MDCLineRipple = (function(_WEBPACK_IMPORTED_MO4) {
        function MDCLineRipple() {
          return (
            _classCallCheck(this, MDCLineRipple),
            _possibleConstructorReturn(
              this,
              (
                MDCLineRipple.__proto__ || Object.getPrototypeOf(MDCLineRipple)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCLineRipple,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCLineRipple,
            [
              {
                key: "activate",
                value: function() {
                  this.foundation_.activate();
                }
              },
              {
                key: "deactivate",
                value: function() {
                  this.foundation_.deactivate();
                }
              },
              {
                key: "setRippleCenter",
                value: function(xCoordinate) {
                  this.foundation_.setRippleCenter(xCoordinate);
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this6 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a(
                    Object.assign({
                      addClass: function(className) {
                        return _this6.root_.classList.add(className);
                      },
                      removeClass: function(className) {
                        return _this6.root_.classList.remove(className);
                      },
                      hasClass: function(className) {
                        return _this6.root_.classList.contains(className);
                      },
                      setStyle: function(propertyName, value) {
                        return (_this6.root_.style[propertyName] = value);
                      },
                      registerEventHandler: function(evtType, handler) {
                        return _this6.root_.addEventListener(evtType, handler);
                      },
                      deregisterEventHandler: function(evtType, handler) {
                        return _this6.root_.removeEventListener(
                          evtType,
                          handler
                        );
                      }
                    })
                  );
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCLineRipple(root);
                }
              }
            ]
          ),
          MDCLineRipple
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(36),
        __webpack_require__(107)),
        MDCTextFieldHelperTextFoundation = (function(_WEBPACK_IMPORTED_MO5) {
          function MDCTextFieldHelperTextFoundation(adapter) {
            return (
              _classCallCheck(this, MDCTextFieldHelperTextFoundation),
              _possibleConstructorReturn(
                this,
                (
                  MDCTextFieldHelperTextFoundation.__proto__ ||
                  Object.getPrototypeOf(MDCTextFieldHelperTextFoundation)
                ).call(
                  this,
                  Object.assign(
                    MDCTextFieldHelperTextFoundation.defaultAdapter,
                    adapter
                  )
                )
              )
            );
          }
          return (
            _inherits(
              MDCTextFieldHelperTextFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCTextFieldHelperTextFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    hasClass: function() {},
                    setAttr: function() {},
                    removeAttr: function() {},
                    setContent: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCTextFieldHelperTextFoundation, [
              {
                key: "setContent",
                value: function(content) {
                  this.adapter_.setContent(content);
                }
              },
              {
                key: "setPersistent",
                value: function(isPersistent) {
                  isPersistent
                    ? this.adapter_.addClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .HELPER_TEXT_PERSISTENT
                      )
                    : this.adapter_.removeClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .HELPER_TEXT_PERSISTENT
                      );
                }
              },
              {
                key: "setValidation",
                value: function(isValidation) {
                  isValidation
                    ? this.adapter_.addClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .HELPER_TEXT_VALIDATION_MSG
                      )
                    : this.adapter_.removeClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .HELPER_TEXT_VALIDATION_MSG
                      );
                }
              },
              {
                key: "showToScreenReader",
                value: function() {
                  this.adapter_.removeAttr(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.b.ARIA_HIDDEN
                  );
                }
              },
              {
                key: "setValidity",
                value: function(inputIsValid) {
                  var helperTextIsPersistent = this.adapter_.hasClass(
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a
                        .HELPER_TEXT_PERSISTENT
                    ),
                    validationMsgNeedsDisplay =
                      this.adapter_.hasClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .HELPER_TEXT_VALIDATION_MSG
                      ) && !inputIsValid;
                  validationMsgNeedsDisplay
                    ? this.adapter_.setAttr(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.ROLE,
                        "alert"
                      )
                    : this.adapter_.removeAttr(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.ROLE
                      ),
                    helperTextIsPersistent ||
                      validationMsgNeedsDisplay ||
                      this.hide_();
                }
              },
              {
                key: "hide_",
                value: function() {
                  this.adapter_.setAttr(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.b.ARIA_HIDDEN,
                    "true"
                  );
                }
              }
            ]),
            MDCTextFieldHelperTextFoundation
          );
        })();
      __webpack_exports__.a = MDCTextFieldHelperTextFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(37),
        __webpack_require__(108)),
        MDCTextFieldIconFoundation = (function(_WEBPACK_IMPORTED_MO6) {
          function MDCTextFieldIconFoundation(adapter) {
            _classCallCheck(this, MDCTextFieldIconFoundation);
            var _this8 = _possibleConstructorReturn(
              this,
              (
                MDCTextFieldIconFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTextFieldIconFoundation)
              ).call(
                this,
                Object.assign(
                  MDCTextFieldIconFoundation.defaultAdapter,
                  adapter
                )
              )
            );
            return (
              (_this8.savedTabIndex_ = null),
              (_this8.interactionHandler_ = function(evt) {
                return _this8.handleInteraction(evt);
              }),
              _this8
            );
          }
          return (
            _inherits(
              MDCTextFieldIconFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCTextFieldIconFoundation, null, [
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    getAttr: function() {},
                    setAttr: function() {},
                    removeAttr: function() {},
                    setContent: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    notifyIconAction: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCTextFieldIconFoundation, [
              {
                key: "init",
                value: function() {
                  var _this9 = this;
                  (this.savedTabIndex_ = this.adapter_.getAttr("tabindex")),
                    ["click", "keydown"].forEach(function(evtType) {
                      _this9.adapter_.registerInteractionHandler(
                        evtType,
                        _this9.interactionHandler_
                      );
                    });
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this10 = this;
                  ["click", "keydown"].forEach(function(evtType) {
                    _this10.adapter_.deregisterInteractionHandler(
                      evtType,
                      _this10.interactionHandler_
                    );
                  });
                }
              },
              {
                key: "setDisabled",
                value: function(disabled) {
                  this.savedTabIndex_ &&
                    (disabled
                      ? (this.adapter_.setAttr("tabindex", "-1"),
                        this.adapter_.removeAttr("role"))
                      : (this.adapter_.setAttr("tabindex", this.savedTabIndex_),
                        this.adapter_.setAttr(
                          "role",
                          __WEBPACK_IMPORTED_MODULE_2__constants__.a.ICON_ROLE
                        )));
                }
              },
              {
                key: "setAriaLabel",
                value: function(label) {
                  this.adapter_.setAttr("aria-label", label);
                }
              },
              {
                key: "setContent",
                value: function(content) {
                  this.adapter_.setContent(content);
                }
              },
              {
                key: "handleInteraction",
                value: function(evt) {
                  ("click" !== evt.type &&
                    "Enter" !== evt.key &&
                    13 !== evt.keyCode) ||
                    this.adapter_.notifyIconAction();
                }
              }
            ]),
            MDCTextFieldIconFoundation
          );
        })();
      __webpack_exports__.a = MDCTextFieldIconFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCRippleAdapter() {
          _classCallCheck(this, MDCRippleAdapter);
        }
        _createClass(MDCRippleAdapter, [
          { key: "browserSupportsCssVars", value: function() {} },
          { key: "isUnbounded", value: function() {} },
          { key: "isSurfaceActive", value: function() {} },
          { key: "isSurfaceDisabled", value: function() {} },
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "containsEventTarget", value: function(target) {} },
          {
            key: "registerInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "registerDocumentInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "deregisterDocumentInteractionHandler",
            value: function(evtType, handler) {}
          },
          { key: "registerResizeHandler", value: function(handler) {} },
          { key: "deregisterResizeHandler", value: function(handler) {} },
          { key: "updateCssVariable", value: function(varName, value) {} },
          { key: "computeBoundingRect", value: function() {} },
          { key: "getWindowPageOffset", value: function() {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return MDCChip;
      });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_3__foundation__ = (__webpack_require__(18),
        __webpack_require__(19)),
        __WEBPACK_IMPORTED_MODULE_4__constants__ = __webpack_require__(20);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_3__foundation__.a;
      });
      var MDCChip = (function(_WEBPACK_IMPORTED_MO7) {
        function MDCChip() {
          var _ref3;
          _classCallCheck(this, MDCChip);
          for (
            var _len3 = arguments.length, args = Array(_len3), _key3 = 0;
            _key3 < _len3;
            _key3++
          )
            args[_key3] = arguments[_key3];
          var _this11 = _possibleConstructorReturn(
            this,
            (_ref3 =
              MDCChip.__proto__ || Object.getPrototypeOf(MDCChip)).call.apply(
              _ref3,
              [this].concat(args)
            )
          );
          return _this11.leadingIcon_, _this11.ripple_, _this11;
        }
        return (
          _inherits(
            MDCChip,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCChip,
            [
              {
                key: "initialize",
                value: function() {
                  var _this12 = this;
                  this.leadingIcon_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_4__constants__.b
                      .LEADING_ICON_SELECTOR
                  );
                  var checkmarkEl = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_4__constants__.b
                      .CHECKMARK_SELECTOR
                  );
                  if (checkmarkEl && !this.leadingIcon_) {
                    var adapter = Object.assign(
                      __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple.createAdapter(
                        this
                      ),
                      {
                        computeBoundingRect: function() {
                          return {
                            height: _this12.root_.getBoundingClientRect()
                              .height,
                            width:
                              _this12.root_.getBoundingClientRect().width +
                              checkmarkEl.getBoundingClientRect().height
                          };
                        }
                      }
                    );
                    this.ripple_ = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple(
                      this.root_,
                      new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRippleFoundation(
                        adapter
                      )
                    );
                  } else
                    this.ripple_ = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple(
                      this.root_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.ripple_.destroy(),
                    _get(
                      MDCChip.prototype.__proto__ ||
                        Object.getPrototypeOf(MDCChip.prototype),
                      "destroy",
                      this
                    ).call(this);
                }
              },
              {
                key: "isSelected",
                value: function() {
                  return this.foundation_.isSelected();
                }
              },
              {
                key: "remove",
                value: function() {
                  this.root_.parentNode.removeChild(this.root_), this.destroy();
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this13 = this;
                  return new __WEBPACK_IMPORTED_MODULE_3__foundation__.a(
                    Object.assign({
                      addClass: function(className) {
                        return _this13.root_.classList.add(className);
                      },
                      removeClass: function(className) {
                        return _this13.root_.classList.remove(className);
                      },
                      hasClass: function(className) {
                        return _this13.root_.classList.contains(className);
                      },
                      addClassToLeadingIcon: function(className) {
                        _this13.leadingIcon_ &&
                          _this13.leadingIcon_.classList.add(className);
                      },
                      removeClassFromLeadingIcon: function(className) {
                        _this13.leadingIcon_ &&
                          _this13.leadingIcon_.classList.remove(className);
                      },
                      eventTargetHasClass: function(target, className) {
                        return target.classList.contains(className);
                      },
                      registerEventHandler: function(evtType, handler) {
                        return _this13.root_.addEventListener(evtType, handler);
                      },
                      deregisterEventHandler: function(evtType, handler) {
                        return _this13.root_.removeEventListener(
                          evtType,
                          handler
                        );
                      },
                      registerTrailingIconInteractionHandler: function(
                        evtType,
                        handler
                      ) {
                        var trailingIconEl = _this13.root_.querySelector(
                          __WEBPACK_IMPORTED_MODULE_4__constants__.b
                            .TRAILING_ICON_SELECTOR
                        );
                        trailingIconEl &&
                          trailingIconEl.addEventListener(evtType, handler);
                      },
                      deregisterTrailingIconInteractionHandler: function(
                        evtType,
                        handler
                      ) {
                        var trailingIconEl = _this13.root_.querySelector(
                          __WEBPACK_IMPORTED_MODULE_4__constants__.b
                            .TRAILING_ICON_SELECTOR
                        );
                        trailingIconEl &&
                          trailingIconEl.removeEventListener(evtType, handler);
                      },
                      notifyInteraction: function() {
                        return _this13.emit(
                          __WEBPACK_IMPORTED_MODULE_4__constants__.b
                            .INTERACTION_EVENT,
                          { chip: _this13 },
                          !0
                        );
                      },
                      notifyTrailingIconInteraction: function() {
                        return _this13.emit(
                          __WEBPACK_IMPORTED_MODULE_4__constants__.b
                            .TRAILING_ICON_INTERACTION_EVENT,
                          { chip: _this13 },
                          !0
                        );
                      },
                      notifyRemoval: function() {
                        return _this13.emit(
                          __WEBPACK_IMPORTED_MODULE_4__constants__.b
                            .REMOVAL_EVENT,
                          { chip: _this13 },
                          !0
                        );
                      },
                      getComputedStyleValue: function(propertyName) {
                        return window
                          .getComputedStyle(_this13.root_)
                          .getPropertyValue(propertyName);
                      },
                      setStyleProperty: function(propertyName, value) {
                        return _this13.root_.style.setProperty(
                          propertyName,
                          value
                        );
                      }
                    })
                  );
                }
              },
              {
                key: "foundation",
                get: function() {
                  return this.foundation_;
                }
              },
              {
                key: "ripple",
                get: function() {
                  return this.ripple_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCChip(root);
                }
              }
            ]
          ),
          MDCChip
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCChipAdapter() {
          _classCallCheck(this, MDCChipAdapter);
        }
        _createClass(MDCChipAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "hasClass", value: function(className) {} },
          { key: "addClassToLeadingIcon", value: function(className) {} },
          { key: "removeClassFromLeadingIcon", value: function(className) {} },
          { key: "eventTargetHasClass", value: function(target, className) {} },
          { key: "registerEventHandler", value: function(evtType, handler) {} },
          {
            key: "deregisterEventHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "registerTrailingIconInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "deregisterTrailingIconInteractionHandler",
            value: function(evtType, handler) {}
          },
          { key: "notifyInteraction", value: function() {} },
          { key: "notifyTrailingIconInteraction", value: function() {} },
          { key: "notifyRemoval", value: function() {} },
          { key: "getComputedStyleValue", value: function(propertyName) {} },
          { key: "setStyleProperty", value: function(propertyName, value) {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(18),
        __webpack_require__(20)),
        MDCChipFoundation = (function(_WEBPACK_IMPORTED_MO8) {
          function MDCChipFoundation(adapter) {
            _classCallCheck(this, MDCChipFoundation);
            var _this14 = _possibleConstructorReturn(
              this,
              (
                MDCChipFoundation.__proto__ ||
                Object.getPrototypeOf(MDCChipFoundation)
              ).call(
                this,
                Object.assign(MDCChipFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this14.interactionHandler_ = function(evt) {
                return _this14.handleInteraction_(evt);
              }),
              (_this14.transitionEndHandler_ = function(evt) {
                return _this14.handleTransitionEnd_(evt);
              }),
              (_this14.trailingIconInteractionHandler_ = function(evt) {
                return _this14.handleTrailingIconInteraction_(evt);
              }),
              _this14
            );
          }
          return (
            _inherits(
              MDCChipFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCChipFoundation, null, [
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    hasClass: function() {},
                    addClassToLeadingIcon: function() {},
                    removeClassFromLeadingIcon: function() {},
                    eventTargetHasClass: function() {},
                    registerEventHandler: function() {},
                    deregisterEventHandler: function() {},
                    registerTrailingIconInteractionHandler: function() {},
                    deregisterTrailingIconInteractionHandler: function() {},
                    notifyInteraction: function() {},
                    notifyTrailingIconInteraction: function() {},
                    notifyRemoval: function() {},
                    getComputedStyleValue: function() {},
                    setStyleProperty: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCChipFoundation, [
              {
                key: "init",
                value: function() {
                  var _this15 = this;
                  ["click", "keydown"].forEach(function(evtType) {
                    _this15.adapter_.registerEventHandler(
                      evtType,
                      _this15.interactionHandler_
                    );
                  }),
                    this.adapter_.registerEventHandler(
                      "transitionend",
                      this.transitionEndHandler_
                    ),
                    [
                      "click",
                      "keydown",
                      "touchstart",
                      "pointerdown",
                      "mousedown"
                    ].forEach(function(evtType) {
                      _this15.adapter_.registerTrailingIconInteractionHandler(
                        evtType,
                        _this15.trailingIconInteractionHandler_
                      );
                    });
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this16 = this;
                  ["click", "keydown"].forEach(function(evtType) {
                    _this16.adapter_.deregisterEventHandler(
                      evtType,
                      _this16.interactionHandler_
                    );
                  }),
                    this.adapter_.deregisterEventHandler(
                      "transitionend",
                      this.transitionEndHandler_
                    ),
                    [
                      "click",
                      "keydown",
                      "touchstart",
                      "pointerdown",
                      "mousedown"
                    ].forEach(function(evtType) {
                      _this16.adapter_.deregisterTrailingIconInteractionHandler(
                        evtType,
                        _this16.trailingIconInteractionHandler_
                      );
                    });
                }
              },
              {
                key: "isSelected",
                value: function() {
                  return this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a.SELECTED
                  );
                }
              },
              {
                key: "setSelected",
                value: function(selected) {
                  selected
                    ? this.adapter_.addClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a.SELECTED
                      )
                    : this.adapter_.removeClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a.SELECTED
                      );
                }
              },
              {
                key: "handleInteraction_",
                value: function(evt) {
                  ("click" !== evt.type &&
                    "Enter" !== evt.key &&
                    13 !== evt.keyCode) ||
                    this.adapter_.notifyInteraction();
                }
              },
              {
                key: "handleTransitionEnd_",
                value: function(evt) {
                  var _this17 = this;
                  if (
                    this.adapter_.eventTargetHasClass(
                      evt.target,
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a.CHIP_EXIT
                    )
                  ) {
                    if ("width" === evt.propertyName)
                      this.adapter_.notifyRemoval();
                    else if ("opacity" === evt.propertyName) {
                      var chipWidth = this.adapter_.getComputedStyleValue(
                        "width"
                      );
                      requestAnimationFrame(function() {
                        _this17.adapter_.setStyleProperty("width", chipWidth),
                          _this17.adapter_.setStyleProperty("padding", "0"),
                          _this17.adapter_.setStyleProperty("margin", "0"),
                          requestAnimationFrame(function() {
                            _this17.adapter_.setStyleProperty("width", "0");
                          });
                      });
                    }
                  } else
                    "opacity" === evt.propertyName &&
                      (this.adapter_.eventTargetHasClass(
                        evt.target,
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a.LEADING_ICON
                      ) &&
                      this.adapter_.hasClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a.SELECTED
                      )
                        ? this.adapter_.addClassToLeadingIcon(
                            __WEBPACK_IMPORTED_MODULE_2__constants__.a
                              .HIDDEN_LEADING_ICON
                          )
                        : this.adapter_.eventTargetHasClass(
                            evt.target,
                            __WEBPACK_IMPORTED_MODULE_2__constants__.a.CHECKMARK
                          ) &&
                          !this.adapter_.hasClass(
                            __WEBPACK_IMPORTED_MODULE_2__constants__.a.SELECTED
                          ) &&
                          this.adapter_.removeClassFromLeadingIcon(
                            __WEBPACK_IMPORTED_MODULE_2__constants__.a
                              .HIDDEN_LEADING_ICON
                          ));
                }
              },
              {
                key: "handleTrailingIconInteraction_",
                value: function(evt) {
                  evt.stopPropagation(),
                    ("click" !== evt.type &&
                      "Enter" !== evt.key &&
                      13 !== evt.keyCode) ||
                      (this.adapter_.notifyTrailingIconInteraction(),
                      this.adapter_.addClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a.CHIP_EXIT
                      ));
                }
              }
            ]),
            MDCChipFoundation
          );
        })();
      __webpack_exports__.a = MDCChipFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return strings;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return cssClasses;
        });
      var strings = {
          ENTRY_ANIMATION_NAME: "mdc-chip-entry",
          INTERACTION_EVENT: "MDCChip:interaction",
          TRAILING_ICON_INTERACTION_EVENT: "MDCChip:trailingIconInteraction",
          REMOVAL_EVENT: "MDCChip:removal",
          CHECKMARK_SELECTOR: ".mdc-chip__checkmark",
          LEADING_ICON_SELECTOR: ".mdc-chip__icon--leading",
          TRAILING_ICON_SELECTOR: ".mdc-chip__icon--trailing"
        },
        cssClasses = {
          CHECKMARK: "mdc-chip__checkmark",
          CHIP: "mdc-chip",
          CHIP_EXIT: "mdc-chip--exit",
          HIDDEN_LEADING_ICON: "mdc-chip__icon--leading-hidden",
          LEADING_ICON: "mdc-chip__icon--leading",
          TRAILING_ICON: "mdc-chip__icon--trailing",
          SELECTED: "mdc-chip--selected",
          TEXT: "mdc-chip__text"
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCChipSetAdapter() {
          _classCallCheck(this, MDCChipSetAdapter);
        }
        _createClass(MDCChipSetAdapter, [
          { key: "hasClass", value: function(className) {} },
          {
            key: "registerInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "appendChip",
            value: function(text, leadingIcon, trailingIcon) {}
          },
          { key: "removeChip", value: function(chip) {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCFloatingLabelAdapter() {
          _classCallCheck(this, MDCFloatingLabelAdapter);
        }
        _createClass(MDCFloatingLabelAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "getWidth", value: function() {} },
          {
            key: "registerInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(evtType, handler) {}
          }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCLineRippleAdapter() {
          _classCallCheck(this, MDCLineRippleAdapter);
        }
        _createClass(MDCLineRippleAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "hasClass", value: function(className) {} },
          { key: "setStyle", value: function(propertyName, value) {} },
          { key: "registerEventHandler", value: function(evtType, handler) {} },
          {
            key: "deregisterEventHandler",
            value: function(evtType, handler) {}
          }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "c", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "e", function() {
          return strings;
        }),
        __webpack_require__.d(__webpack_exports__, "d", function() {
          return numbers;
        }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return CornerBit;
        }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return Corner;
        });
      var cssClasses = {
          ROOT: "mdc-menu",
          OPEN: "mdc-menu--open",
          ANIMATING_OPEN: "mdc-menu--animating-open",
          ANIMATING_CLOSED: "mdc-menu--animating-closed",
          SELECTED_LIST_ITEM: "mdc-list-item--selected"
        },
        strings = {
          ITEMS_SELECTOR: ".mdc-menu__items",
          SELECTED_EVENT: "MDCMenu:selected",
          CANCEL_EVENT: "MDCMenu:cancel",
          ARIA_DISABLED_ATTR: "aria-disabled"
        },
        numbers = {
          SELECTED_TRIGGER_DELAY: 50,
          TRANSITION_OPEN_DURATION: 120,
          TRANSITION_CLOSE_DURATION: 75,
          MARGIN_TO_EDGE: 32,
          ANCHOR_TO_MENU_WIDTH_RATIO: 0.67,
          OFFSET_TO_MENU_HEIGHT_RATIO: 0.1
        },
        CornerBit = { BOTTOM: 1, CENTER: 2, RIGHT: 4, FLIP_RTL: 8 },
        Corner = {
          TOP_LEFT: 0,
          TOP_RIGHT: CornerBit.RIGHT,
          BOTTOM_LEFT: CornerBit.BOTTOM,
          BOTTOM_RIGHT: CornerBit.BOTTOM | CornerBit.RIGHT,
          TOP_START: CornerBit.FLIP_RTL,
          TOP_END: CornerBit.FLIP_RTL | CornerBit.RIGHT,
          BOTTOM_START: CornerBit.BOTTOM | CornerBit.FLIP_RTL,
          BOTTOM_END: CornerBit.BOTTOM | CornerBit.RIGHT | CornerBit.FLIP_RTL
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCNotchedOutline",
          function() {
            return MDCNotchedOutline;
          }
        );
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(26),
        __webpack_require__(87)),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(27);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCNotchedOutlineFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      );
      var MDCNotchedOutline = (function(_WEBPACK_IMPORTED_MO9) {
        function MDCNotchedOutline() {
          return (
            _classCallCheck(this, MDCNotchedOutline),
            _possibleConstructorReturn(
              this,
              (
                MDCNotchedOutline.__proto__ ||
                Object.getPrototypeOf(MDCNotchedOutline)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCNotchedOutline,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCNotchedOutline,
            [
              {
                key: "notch",
                value: function(notchWidth, isRtl) {
                  this.foundation_.notch(notchWidth, isRtl);
                }
              },
              {
                key: "closeNotch",
                value: function() {
                  this.foundation_.closeNotch();
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this19 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a({
                    getWidth: function() {
                      return _this19.root_.offsetWidth;
                    },
                    getHeight: function() {
                      return _this19.root_.offsetHeight;
                    },
                    addClass: function(className) {
                      return _this19.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this19.root_.classList.remove(className);
                    },
                    setOutlinePathAttr: function(value) {
                      _this19.root_
                        .querySelector(
                          __WEBPACK_IMPORTED_MODULE_3__constants__.b
                            .PATH_SELECTOR
                        )
                        .setAttribute("d", value);
                    },
                    getIdleOutlineStyleValue: function(propertyName) {
                      var idleOutlineElement = _this19.root_.parentNode.querySelector(
                        __WEBPACK_IMPORTED_MODULE_3__constants__.b
                          .IDLE_OUTLINE_SELECTOR
                      );
                      return window
                        .getComputedStyle(idleOutlineElement)
                        .getPropertyValue(propertyName);
                    }
                  });
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCNotchedOutline(root);
                }
              }
            ]
          ),
          MDCNotchedOutline
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCNotchedOutlineAdapter() {
          _classCallCheck(this, MDCNotchedOutlineAdapter);
        }
        _createClass(MDCNotchedOutlineAdapter, [
          { key: "getWidth", value: function() {} },
          { key: "getHeight", value: function() {} },
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "setOutlinePathAttr", value: function(value) {} },
          { key: "getIdleOutlineStyleValue", value: function(propertyName) {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return strings;
        });
      var strings = {
          PATH_SELECTOR: ".mdc-notched-outline__path",
          IDLE_OUTLINE_SELECTOR: ".mdc-notched-outline__idle"
        },
        cssClasses = { OUTLINE_NOTCHED: "mdc-notched-outline--notched" };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = {
        BOX: "mdc-select--box",
        DISABLED: "mdc-select--disabled",
        ROOT: "mdc-select"
      };
      __webpack_exports__.a = cssClasses;
      var strings = {
        CHANGE_EVENT: "MDCSelect:change",
        LINE_RIPPLE_SELECTOR: ".mdc-line-ripple",
        LABEL_SELECTOR: ".mdc-floating-label",
        NATIVE_CONTROL_SELECTOR: ".mdc-select__native-control"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "c", function() {
          return strings;
        }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return numbers;
        });
      var cssClasses = {
          ACTIVE: "mdc-slider--active",
          DISABLED: "mdc-slider--disabled",
          DISCRETE: "mdc-slider--discrete",
          FOCUS: "mdc-slider--focus",
          IN_TRANSIT: "mdc-slider--in-transit",
          IS_DISCRETE: "mdc-slider--discrete",
          HAS_TRACK_MARKER: "mdc-slider--display-markers"
        },
        strings = {
          TRACK_SELECTOR: ".mdc-slider__track",
          TRACK_MARKER_CONTAINER_SELECTOR:
            ".mdc-slider__track-marker-container",
          LAST_TRACK_MARKER_SELECTOR: ".mdc-slider__track-marker:last-child",
          THUMB_CONTAINER_SELECTOR: ".mdc-slider__thumb-container",
          PIN_VALUE_MARKER_SELECTOR: ".mdc-slider__pin-value-marker",
          ARIA_VALUEMIN: "aria-valuemin",
          ARIA_VALUEMAX: "aria-valuemax",
          ARIA_VALUENOW: "aria-valuenow",
          ARIA_DISABLED: "aria-disabled",
          STEP_DATA_ATTR: "data-step",
          CHANGE_EVENT: "MDCSlider:change",
          INPUT_EVENT: "MDCSlider:input"
        },
        numbers = { PAGE_FACTOR: 4 };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCSliderAdapter() {
          _classCallCheck(this, MDCSliderAdapter);
        }
        _createClass(MDCSliderAdapter, [
          { key: "hasClass", value: function(className) {} },
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "getAttribute", value: function(name) {} },
          { key: "setAttribute", value: function(name, value) {} },
          { key: "removeAttribute", value: function(name) {} },
          { key: "computeBoundingRect", value: function() {} },
          { key: "getTabIndex", value: function() {} },
          {
            key: "registerInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "registerThumbContainerInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterThumbContainerInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "registerBodyInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterBodyInteractionHandler",
            value: function(type, handler) {}
          },
          { key: "registerResizeHandler", value: function(handler) {} },
          { key: "deregisterResizeHandler", value: function(handler) {} },
          { key: "notifyInput", value: function() {} },
          { key: "notifyChange", value: function() {} },
          {
            key: "setThumbContainerStyleProperty",
            value: function(propertyName, value) {}
          },
          {
            key: "setTrackStyleProperty",
            value: function(propertyName, value) {}
          },
          { key: "setMarkerValue", value: function(value) {} },
          { key: "appendTrackMarkers", value: function(numMarkers) {} },
          { key: "removeTrackMarkers", value: function() {} },
          {
            key: "setLastTrackMarkersStyleProperty",
            value: function(propertyName, value) {}
          },
          { key: "isRTL", value: function() {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(32),
        __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(100);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_3__foundation__.a;
      });
      var MDCTab = (function(_WEBPACK_IMPORTED_MO10) {
        function MDCTab() {
          var _ref4;
          _classCallCheck(this, MDCTab);
          for (
            var _len4 = arguments.length, args = Array(_len4), _key4 = 0;
            _key4 < _len4;
            _key4++
          )
            args[_key4] = arguments[_key4];
          var _this20 = _possibleConstructorReturn(
            this,
            (_ref4 =
              MDCTab.__proto__ || Object.getPrototypeOf(MDCTab)).call.apply(
              _ref4,
              [this].concat(args)
            )
          );
          return (
            (_this20.ripple_ = __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple.attachTo(
              _this20.root_
            )),
            _this20
          );
        }
        return (
          _inherits(
            MDCTab,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCTab,
            [
              {
                key: "computedWidth",
                get: function() {
                  return this.foundation_.getComputedWidth();
                }
              },
              {
                key: "computedLeft",
                get: function() {
                  return this.foundation_.getComputedLeft();
                }
              },
              {
                key: "isActive",
                get: function() {
                  return this.foundation_.isActive();
                },
                set: function(isActive) {
                  this.foundation_.setActive(isActive);
                }
              },
              {
                key: "preventDefaultOnClick",
                get: function() {
                  return this.foundation_.preventsDefaultOnClick();
                },
                set: function(preventDefaultOnClick) {
                  this.foundation_.setPreventDefaultOnClick(
                    preventDefaultOnClick
                  );
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTab(root);
                }
              }
            ]
          ),
          _createClass(MDCTab, [
            {
              key: "destroy",
              value: function() {
                this.ripple_.destroy(),
                  _get(
                    MDCTab.prototype.__proto__ ||
                      Object.getPrototypeOf(MDCTab.prototype),
                    "destroy",
                    this
                  ).call(this);
              }
            },
            {
              key: "getDefaultFoundation",
              value: function() {
                var _this21 = this;
                return new __WEBPACK_IMPORTED_MODULE_3__foundation__.a({
                  addClass: function(className) {
                    return _this21.root_.classList.add(className);
                  },
                  removeClass: function(className) {
                    return _this21.root_.classList.remove(className);
                  },
                  registerInteractionHandler: function(type, handler) {
                    return _this21.root_.addEventListener(type, handler);
                  },
                  deregisterInteractionHandler: function(type, handler) {
                    return _this21.root_.removeEventListener(type, handler);
                  },
                  getOffsetWidth: function() {
                    return _this21.root_.offsetWidth;
                  },
                  getOffsetLeft: function() {
                    return _this21.root_.offsetLeft;
                  },
                  notifySelected: function() {
                    return _this21.emit(
                      __WEBPACK_IMPORTED_MODULE_3__foundation__.a.strings
                        .SELECTED_EVENT,
                      { tab: _this21 },
                      !0
                    );
                  }
                });
              }
            },
            {
              key: "initialSyncWithDOM",
              value: function() {
                this.isActive = this.root_.classList.contains(
                  __WEBPACK_IMPORTED_MODULE_2__constants__.a.ACTIVE
                );
              }
            },
            {
              key: "measureSelf",
              value: function() {
                this.foundation_.measureSelf();
              }
            }
          ]),
          MDCTab
        );
      })();
      __webpack_exports__.a = MDCTab;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = { ACTIVE: "mdc-tab--active" };
      __webpack_exports__.a = cssClasses;
      var strings = { SELECTED_EVENT: "MDCTab:selected" };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__tab_index__ = __webpack_require__(31),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(101);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
      });
      var MDCTabBar = (function(_WEBPACK_IMPORTED_MO11) {
        function MDCTabBar() {
          return (
            _classCallCheck(this, MDCTabBar),
            _possibleConstructorReturn(
              this,
              (MDCTabBar.__proto__ || Object.getPrototypeOf(MDCTabBar)).apply(
                this,
                arguments
              )
            )
          );
        }
        return (
          _inherits(
            MDCTabBar,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCTabBar,
            [
              {
                key: "initialize",
                value: function() {
                  var _this23 = this,
                    tabFactory =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_1__tab_index__.a(
                              el
                            );
                          };
                  (this.indicator_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                      .INDICATOR_SELECTOR
                  )),
                    (this.tabs_ = this.gatherTabs_(tabFactory)),
                    (this.tabSelectedHandler_ = function(_ref5) {
                      var tab = _ref5.detail.tab;
                      _this23.setActiveTab_(tab, !0);
                    });
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this24 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a({
                    addClass: function(className) {
                      return _this24.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this24.root_.classList.remove(className);
                    },
                    bindOnMDCTabSelectedEvent: function() {
                      return _this24.listen(
                        __WEBPACK_IMPORTED_MODULE_1__tab_index__.b.strings
                          .SELECTED_EVENT,
                        _this24.tabSelectedHandler_
                      );
                    },
                    unbindOnMDCTabSelectedEvent: function() {
                      return _this24.unlisten(
                        __WEBPACK_IMPORTED_MODULE_1__tab_index__.b.strings
                          .SELECTED_EVENT,
                        _this24.tabSelectedHandler_
                      );
                    },
                    registerResizeHandler: function(handler) {
                      return window.addEventListener("resize", handler);
                    },
                    deregisterResizeHandler: function(handler) {
                      return window.removeEventListener("resize", handler);
                    },
                    getOffsetWidth: function() {
                      return _this24.root_.offsetWidth;
                    },
                    setStyleForIndicator: function(propertyName, value) {
                      return _this24.indicator_.style.setProperty(
                        propertyName,
                        value
                      );
                    },
                    getOffsetWidthForIndicator: function() {
                      return _this24.indicator_.offsetWidth;
                    },
                    notifyChange: function(evtData) {
                      return _this24.emit(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                          .CHANGE_EVENT,
                        evtData
                      );
                    },
                    getNumberOfTabs: function() {
                      return _this24.tabs.length;
                    },
                    isTabActiveAtIndex: function(index) {
                      return _this24.tabs[index].isActive;
                    },
                    setTabActiveAtIndex: function(index, isActive) {
                      _this24.tabs[index].isActive = isActive;
                    },
                    isDefaultPreventedOnClickForTabAtIndex: function(index) {
                      return _this24.tabs[index].preventDefaultOnClick;
                    },
                    setPreventDefaultOnClickForTabAtIndex: function(
                      index,
                      preventDefaultOnClick
                    ) {
                      _this24.tabs[
                        index
                      ].preventDefaultOnClick = preventDefaultOnClick;
                    },
                    measureTabAtIndex: function(index) {
                      return _this24.tabs[index].measureSelf();
                    },
                    getComputedWidthForTabAtIndex: function(index) {
                      return _this24.tabs[index].computedWidth;
                    },
                    getComputedLeftForTabAtIndex: function(index) {
                      return _this24.tabs[index].computedLeft;
                    }
                  });
                }
              },
              {
                key: "gatherTabs_",
                value: function(tabFactory) {
                  return [].slice
                    .call(
                      this.root_.querySelectorAll(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                          .TAB_SELECTOR
                      )
                    )
                    .map(function(el) {
                      return tabFactory(el);
                    });
                }
              },
              {
                key: "setActiveTabIndex_",
                value: function(activeTabIndex, notifyChange) {
                  this.foundation_.switchToTabAtIndex(
                    activeTabIndex,
                    notifyChange
                  );
                }
              },
              {
                key: "layout",
                value: function() {
                  this.foundation_.layout();
                }
              },
              {
                key: "setActiveTab_",
                value: function(activeTab, notifyChange) {
                  var indexOfTab = this.tabs.indexOf(activeTab);
                  if (indexOfTab < 0)
                    throw new Error(
                      "Invalid tab component given as activeTab: Tab not found within this component's tab list"
                    );
                  this.setActiveTabIndex_(indexOfTab, notifyChange);
                }
              },
              {
                key: "tabs",
                get: function() {
                  return this.tabs_;
                }
              },
              {
                key: "activeTab",
                get: function() {
                  var activeIndex = this.foundation_.getActiveTabIndex();
                  return this.tabs[activeIndex];
                },
                set: function(tab) {
                  this.setActiveTab_(tab, !1);
                }
              },
              {
                key: "activeTabIndex",
                get: function() {
                  return this.foundation_.getActiveTabIndex();
                },
                set: function(index) {
                  this.setActiveTabIndex_(index, !1);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTabBar(root);
                }
              }
            ]
          ),
          MDCTabBar
        );
      })();
      __webpack_exports__.a = MDCTabBar;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "d", function() {
          return strings;
        }),
        __webpack_require__.d(__webpack_exports__, "c", function() {
          return numbers;
        }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return VALIDATION_ATTR_WHITELIST;
        });
      var strings = {
          ARIA_CONTROLS: "aria-controls",
          INPUT_SELECTOR: ".mdc-text-field__input",
          LABEL_SELECTOR: ".mdc-floating-label",
          ICON_SELECTOR: ".mdc-text-field__icon",
          OUTLINE_SELECTOR: ".mdc-notched-outline",
          LINE_RIPPLE_SELECTOR: ".mdc-line-ripple"
        },
        cssClasses = {
          ROOT: "mdc-text-field",
          UPGRADED: "mdc-text-field--upgraded",
          DISABLED: "mdc-text-field--disabled",
          DENSE: "mdc-text-field--dense",
          FOCUSED: "mdc-text-field--focused",
          INVALID: "mdc-text-field--invalid",
          BOX: "mdc-text-field--box",
          OUTLINED: "mdc-text-field--outlined"
        },
        numbers = { LABEL_SCALE: 0.75, DENSE_LABEL_SCALE: 0.923 },
        VALIDATION_ATTR_WHITELIST = [
          "pattern",
          "min",
          "max",
          "required",
          "step",
          "minlength",
          "maxlength"
        ];
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__(14),
        __webpack_require__(15),
        (function() {
          function MDCTextFieldAdapter() {
            _classCallCheck(this, MDCTextFieldAdapter);
          }
          _createClass(MDCTextFieldAdapter, [
            { key: "addClass", value: function(className) {} },
            { key: "removeClass", value: function(className) {} },
            { key: "hasClass", value: function(className) {} },
            {
              key: "registerTextFieldInteractionHandler",
              value: function(type, handler) {}
            },
            {
              key: "deregisterTextFieldInteractionHandler",
              value: function(type, handler) {}
            },
            {
              key: "registerInputInteractionHandler",
              value: function(evtType, handler) {}
            },
            {
              key: "deregisterInputInteractionHandler",
              value: function(evtType, handler) {}
            },
            {
              key: "registerValidationAttributeChangeHandler",
              value: function(handler) {}
            },
            {
              key: "deregisterValidationAttributeChangeHandler",
              value: function(observer) {}
            },
            { key: "getNativeInput", value: function() {} },
            { key: "isFocused", value: function() {} },
            { key: "isRtl", value: function() {} },
            { key: "activateLineRipple", value: function() {} },
            { key: "deactivateLineRipple", value: function() {} },
            {
              key: "setLineRippleTransformOrigin",
              value: function(normalizedX) {}
            },
            { key: "shakeLabel", value: function(shouldShake) {} },
            { key: "floatLabel", value: function(shouldFloat) {} },
            { key: "hasLabel", value: function() {} },
            { key: "getLabelWidth", value: function() {} },
            { key: "hasOutline", value: function() {} },
            { key: "notchOutline", value: function(labelWidth, isRtl) {} },
            { key: "closeOutline", value: function() {} }
          ]);
        })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCTextFieldHelperTextAdapter() {
          _classCallCheck(this, MDCTextFieldHelperTextAdapter);
        }
        _createClass(MDCTextFieldHelperTextAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "hasClass", value: function(className) {} },
          { key: "setAttr", value: function(attr, value) {} },
          { key: "removeAttr", value: function(attr) {} },
          { key: "setContent", value: function(content) {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCTextFieldIconAdapter() {
          _classCallCheck(this, MDCTextFieldIconAdapter);
        }
        _createClass(MDCTextFieldIconAdapter, [
          { key: "getAttr", value: function(attr) {} },
          { key: "setAttr", value: function(attr, value) {} },
          { key: "removeAttr", value: function(attr) {} },
          { key: "setContent", value: function(content) {} },
          {
            key: "registerInteractionHandler",
            value: function(evtType, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(evtType, handler) {}
          },
          { key: "notifyIconAction", value: function() {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__ = __webpack_require__(
          39
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_2__material_checkbox_index__ = __webpack_require__(
          40
        ),
        __WEBPACK_IMPORTED_MODULE_3__material_chips_index__ = __webpack_require__(
          46
        ),
        __WEBPACK_IMPORTED_MODULE_4__material_dialog_index__ = __webpack_require__(
          50
        ),
        __WEBPACK_IMPORTED_MODULE_5__material_drawer_index__ = __webpack_require__(
          56
        ),
        __WEBPACK_IMPORTED_MODULE_6__material_floating_label_index__ = __webpack_require__(
          12
        ),
        __WEBPACK_IMPORTED_MODULE_7__material_form_field_index__ = __webpack_require__(
          67
        ),
        __WEBPACK_IMPORTED_MODULE_8__material_grid_list_index__ = __webpack_require__(
          71
        ),
        __WEBPACK_IMPORTED_MODULE_9__material_icon_toggle_index__ = __webpack_require__(
          74
        ),
        __WEBPACK_IMPORTED_MODULE_10__material_linear_progress_index__ = __webpack_require__(
          78
        ),
        __WEBPACK_IMPORTED_MODULE_11__material_line_ripple_index__ = __webpack_require__(
          13
        ),
        __WEBPACK_IMPORTED_MODULE_12__material_menu_index__ = __webpack_require__(
          83
        ),
        __WEBPACK_IMPORTED_MODULE_13__material_notched_outline_index__ = __webpack_require__(
          25
        ),
        __WEBPACK_IMPORTED_MODULE_14__material_radio_index__ = __webpack_require__(
          88
        ),
        __WEBPACK_IMPORTED_MODULE_15__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_16__material_select_index__ = __webpack_require__(
          92
        ),
        __WEBPACK_IMPORTED_MODULE_17__material_selection_control_index__ = __webpack_require__(
          4
        ),
        __WEBPACK_IMPORTED_MODULE_18__material_slider_index__ = __webpack_require__(
          94
        ),
        __WEBPACK_IMPORTED_MODULE_19__material_snackbar_index__ = __webpack_require__(
          96
        ),
        __WEBPACK_IMPORTED_MODULE_20__material_tabs_index__ = __webpack_require__(
          99
        ),
        __WEBPACK_IMPORTED_MODULE_21__material_textfield_index__ = __webpack_require__(
          106
        ),
        __WEBPACK_IMPORTED_MODULE_22__material_toolbar_index__ = __webpack_require__(
          112
        ),
        __WEBPACK_IMPORTED_MODULE_23__material_top_app_bar_index__ = __webpack_require__(
          115
        );
      __webpack_require__.d(__webpack_exports__, "autoInit", function() {
        return __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a;
      }),
        __webpack_require__.d(__webpack_exports__, "base", function() {
          return __WEBPACK_IMPORTED_MODULE_1__material_base_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "checkbox", function() {
          return __WEBPACK_IMPORTED_MODULE_2__material_checkbox_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "chips", function() {
          return __WEBPACK_IMPORTED_MODULE_3__material_chips_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "dialog", function() {
          return __WEBPACK_IMPORTED_MODULE_4__material_dialog_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "drawer", function() {
          return __WEBPACK_IMPORTED_MODULE_5__material_drawer_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "floatingLabel", function() {
          return __WEBPACK_IMPORTED_MODULE_6__material_floating_label_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "formField", function() {
          return __WEBPACK_IMPORTED_MODULE_7__material_form_field_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "gridList", function() {
          return __WEBPACK_IMPORTED_MODULE_8__material_grid_list_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "iconToggle", function() {
          return __WEBPACK_IMPORTED_MODULE_9__material_icon_toggle_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "lineRipple", function() {
          return __WEBPACK_IMPORTED_MODULE_11__material_line_ripple_index__;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          "linearProgress",
          function() {
            return __WEBPACK_IMPORTED_MODULE_10__material_linear_progress_index__;
          }
        ),
        __webpack_require__.d(__webpack_exports__, "menu", function() {
          return __WEBPACK_IMPORTED_MODULE_12__material_menu_index__;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          "notchedOutline",
          function() {
            return __WEBPACK_IMPORTED_MODULE_13__material_notched_outline_index__;
          }
        ),
        __webpack_require__.d(__webpack_exports__, "radio", function() {
          return __WEBPACK_IMPORTED_MODULE_14__material_radio_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "ripple", function() {
          return __WEBPACK_IMPORTED_MODULE_15__material_ripple_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "select", function() {
          return __WEBPACK_IMPORTED_MODULE_16__material_select_index__;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          "selectionControl",
          function() {
            return __WEBPACK_IMPORTED_MODULE_17__material_selection_control_index__;
          }
        ),
        __webpack_require__.d(__webpack_exports__, "slider", function() {
          return __WEBPACK_IMPORTED_MODULE_18__material_slider_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "snackbar", function() {
          return __WEBPACK_IMPORTED_MODULE_19__material_snackbar_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "tabs", function() {
          return __WEBPACK_IMPORTED_MODULE_20__material_tabs_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "textField", function() {
          return __WEBPACK_IMPORTED_MODULE_21__material_textfield_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "toolbar", function() {
          return __WEBPACK_IMPORTED_MODULE_22__material_toolbar_index__;
        }),
        __webpack_require__.d(__webpack_exports__, "topAppBar", function() {
          return __WEBPACK_IMPORTED_MODULE_23__material_top_app_bar_index__;
        }),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCCheckbox",
          __WEBPACK_IMPORTED_MODULE_2__material_checkbox_index__.MDCCheckbox
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCChip",
          __WEBPACK_IMPORTED_MODULE_3__material_chips_index__.MDCChip
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCChipSet",
          __WEBPACK_IMPORTED_MODULE_3__material_chips_index__.MDCChipSet
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCDialog",
          __WEBPACK_IMPORTED_MODULE_4__material_dialog_index__.MDCDialog
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCPersistentDrawer",
          __WEBPACK_IMPORTED_MODULE_5__material_drawer_index__.MDCPersistentDrawer
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCTemporaryDrawer",
          __WEBPACK_IMPORTED_MODULE_5__material_drawer_index__.MDCTemporaryDrawer
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCFloatingLabel",
          __WEBPACK_IMPORTED_MODULE_6__material_floating_label_index__.MDCFloatingLabel
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCFormField",
          __WEBPACK_IMPORTED_MODULE_7__material_form_field_index__.MDCFormField
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCRipple",
          __WEBPACK_IMPORTED_MODULE_15__material_ripple_index__.MDCRipple
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCGridList",
          __WEBPACK_IMPORTED_MODULE_8__material_grid_list_index__.MDCGridList
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCIconToggle",
          __WEBPACK_IMPORTED_MODULE_9__material_icon_toggle_index__.MDCIconToggle
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCLineRipple",
          __WEBPACK_IMPORTED_MODULE_11__material_line_ripple_index__.MDCLineRipple
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCLinearProgress",
          __WEBPACK_IMPORTED_MODULE_10__material_linear_progress_index__.MDCLinearProgress
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCNotchedOutline",
          __WEBPACK_IMPORTED_MODULE_13__material_notched_outline_index__.MDCNotchedOutline
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCRadio",
          __WEBPACK_IMPORTED_MODULE_14__material_radio_index__.MDCRadio
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCSnackbar",
          __WEBPACK_IMPORTED_MODULE_19__material_snackbar_index__.MDCSnackbar
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCTab",
          __WEBPACK_IMPORTED_MODULE_20__material_tabs_index__.MDCTab
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCTabBar",
          __WEBPACK_IMPORTED_MODULE_20__material_tabs_index__.MDCTabBar
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCTextField",
          __WEBPACK_IMPORTED_MODULE_21__material_textfield_index__.MDCTextField
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCMenu",
          __WEBPACK_IMPORTED_MODULE_12__material_menu_index__.MDCMenu
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCSelect",
          __WEBPACK_IMPORTED_MODULE_16__material_select_index__.MDCSelect
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCSlider",
          __WEBPACK_IMPORTED_MODULE_18__material_slider_index__.MDCSlider
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCToolbar",
          __WEBPACK_IMPORTED_MODULE_22__material_toolbar_index__.MDCToolbar
        ),
        __WEBPACK_IMPORTED_MODULE_0__material_auto_init_index__.a.register(
          "MDCTopAppBar",
          __WEBPACK_IMPORTED_MODULE_23__material_top_app_bar_index__.MDCTopAppBar
        );
    },
    function(module, __webpack_exports__, __webpack_require__) {
      function _emit(evtType, evtData) {
        var shouldBubble =
            arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
          evt = void 0;
        "function" == typeof CustomEvent
          ? (evt = new CustomEvent(evtType, {
              detail: evtData,
              bubbles: shouldBubble
            }))
          : (evt = document.createEvent("CustomEvent")).initCustomEvent(
              evtType,
              shouldBubble,
              !1,
              evtData
            ),
          document.dispatchEvent(evt);
      }
      function mdcAutoInit() {
        for (
          var node,
            root =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : document,
            warn =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : CONSOLE_WARN,
            nodes = root.querySelectorAll("[data-mdc-auto-init]"),
            i = 0;
          (node = nodes[i]);
          i++
        ) {
          var ctorName = node.dataset.mdcAutoInit;
          if (!ctorName)
            throw new Error("(mdc-auto-init) Constructor name must be given.");
          var Ctor = registry[ctorName];
          if ("function" != typeof Ctor)
            throw new Error(
              "(mdc-auto-init) Could not find constructor in registry for " +
                ctorName
            );
          if (node[ctorName])
            warn(
              "(mdc-auto-init) Component already initialized for " +
                node +
                ". Skipping..."
            );
          else {
            var component = Ctor.attachTo(node);
            Object.defineProperty(node, ctorName, {
              value: component,
              writable: !1,
              enumerable: !1,
              configurable: !0
            });
          }
        }
        _emit("MDCAutoInit:End", {});
      }
      __webpack_exports__.a = mdcAutoInit;
      var registry = Object.create(null),
        CONSOLE_WARN = void 0;
      (mdcAutoInit.register = function(componentName, Ctor) {
        var warn =
          arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : CONSOLE_WARN;
        if ("function" != typeof Ctor)
          throw new Error(
            "(mdc-auto-init) Invalid Ctor value " + Ctor + ". Expected function"
          );
        registry[componentName] &&
          warn(
            "(mdc-auto-init) Overriding registration for " +
              componentName +
              " with " +
              Ctor +
              ". Was: " +
              registry[componentName]
          ),
          (registry[componentName] = Ctor);
      }),
        (mdcAutoInit.deregister = function(componentName) {
          delete registry[componentName];
        }),
        (mdcAutoInit.deregisterAll = function() {
          Object.keys(registry).forEach(this.deregister, this);
        });
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCCheckbox", function() {
          return MDCCheckbox;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_animation_index__ = __webpack_require__(
          5
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_3__foundation__ = (__webpack_require__(4),
        __webpack_require__(43)),
        __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_5__material_ripple_util__ = __webpack_require__(
          8
        );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCCheckboxFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_3__foundation__.a;
        }
      );
      var MDCCheckbox = (function(_WEBPACK_IMPORTED_MO12) {
        function MDCCheckbox() {
          var _ref6;
          _classCallCheck(this, MDCCheckbox);
          for (
            var _len5 = arguments.length, args = Array(_len5), _key5 = 0;
            _key5 < _len5;
            _key5++
          )
            args[_key5] = arguments[_key5];
          var _this25 = _possibleConstructorReturn(
            this,
            (_ref6 =
              MDCCheckbox.__proto__ ||
              Object.getPrototypeOf(MDCCheckbox)).call.apply(
              _ref6,
              [this].concat(args)
            )
          );
          return (_this25.ripple_ = _this25.initRipple_()), _this25;
        }
        return (
          _inherits(
            MDCCheckbox,
            __WEBPACK_IMPORTED_MODULE_1__material_base_component__["a"]
          ),
          _createClass(
            MDCCheckbox,
            [
              {
                key: "nativeCb_",
                get: function() {
                  var NATIVE_CONTROL_SELECTOR =
                    __WEBPACK_IMPORTED_MODULE_3__foundation__.a.strings
                      .NATIVE_CONTROL_SELECTOR;
                  return this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCCheckbox(root);
                }
              }
            ]
          ),
          _createClass(MDCCheckbox, [
            {
              key: "initRipple_",
              value: function() {
                var _this26 = this,
                  MATCHES = Object(
                    __WEBPACK_IMPORTED_MODULE_5__material_ripple_util__.getMatchesProperty
                  )(HTMLElement.prototype),
                  adapter = Object.assign(
                    __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__.MDCRipple.createAdapter(
                      this
                    ),
                    {
                      isUnbounded: function() {
                        return !0;
                      },
                      isSurfaceActive: function() {
                        return _this26.nativeCb_[MATCHES](":active");
                      },
                      registerInteractionHandler: function(type, handler) {
                        return _this26.nativeCb_.addEventListener(
                          type,
                          handler
                        );
                      },
                      deregisterInteractionHandler: function(type, handler) {
                        return _this26.nativeCb_.removeEventListener(
                          type,
                          handler
                        );
                      }
                    }
                  ),
                  foundation = new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__.MDCRippleFoundation(
                    adapter
                  );
                return new __WEBPACK_IMPORTED_MODULE_4__material_ripple_index__.MDCRipple(
                  this.root_,
                  foundation
                );
              }
            },
            {
              key: "getDefaultFoundation",
              value: function() {
                var _this27 = this;
                return new __WEBPACK_IMPORTED_MODULE_3__foundation__.a({
                  addClass: function(className) {
                    return _this27.root_.classList.add(className);
                  },
                  removeClass: function(className) {
                    return _this27.root_.classList.remove(className);
                  },
                  setNativeControlAttr: function(attr, value) {
                    return _this27.nativeCb_.setAttribute(attr, value);
                  },
                  removeNativeControlAttr: function(attr) {
                    return _this27.nativeCb_.removeAttribute(attr);
                  },
                  registerAnimationEndHandler: function(handler) {
                    return _this27.root_.addEventListener(
                      Object(
                        __WEBPACK_IMPORTED_MODULE_0__material_animation_index__.a
                      )(window, "animationend"),
                      handler
                    );
                  },
                  deregisterAnimationEndHandler: function(handler) {
                    return _this27.root_.removeEventListener(
                      Object(
                        __WEBPACK_IMPORTED_MODULE_0__material_animation_index__.a
                      )(window, "animationend"),
                      handler
                    );
                  },
                  registerChangeHandler: function(handler) {
                    return _this27.nativeCb_.addEventListener(
                      "change",
                      handler
                    );
                  },
                  deregisterChangeHandler: function(handler) {
                    return _this27.nativeCb_.removeEventListener(
                      "change",
                      handler
                    );
                  },
                  getNativeControl: function() {
                    return _this27.nativeCb_;
                  },
                  forceLayout: function() {
                    return _this27.root_.offsetWidth;
                  },
                  isAttachedToDOM: function() {
                    return Boolean(_this27.root_.parentNode);
                  }
                });
              }
            },
            {
              key: "destroy",
              value: function() {
                this.ripple_.destroy(),
                  _get(
                    MDCCheckbox.prototype.__proto__ ||
                      Object.getPrototypeOf(MDCCheckbox.prototype),
                    "destroy",
                    this
                  ).call(this);
              }
            },
            {
              key: "ripple",
              get: function() {
                return this.ripple_;
              }
            },
            {
              key: "checked",
              get: function() {
                return this.foundation_.isChecked();
              },
              set: function(checked) {
                this.foundation_.setChecked(checked);
              }
            },
            {
              key: "indeterminate",
              get: function() {
                return this.foundation_.isIndeterminate();
              },
              set: function(indeterminate) {
                this.foundation_.setIndeterminate(indeterminate);
              }
            },
            {
              key: "disabled",
              get: function() {
                return this.foundation_.isDisabled();
              },
              set: function(disabled) {
                this.foundation_.setDisabled(disabled);
              }
            },
            {
              key: "value",
              get: function() {
                return this.foundation_.getValue();
              },
              set: function(value) {
                this.foundation_.setValue(value);
              }
            }
          ]),
          MDCCheckbox
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(16),
        __webpack_require__(42)),
        __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(8),
        ACTIVATION_EVENT_TYPES = [
          "touchstart",
          "pointerdown",
          "mousedown",
          "keydown"
        ],
        POINTER_DEACTIVATION_EVENT_TYPES = ["touchend", "pointerup", "mouseup"],
        activatedTargets = [],
        MDCRippleFoundation = (function(_WEBPACK_IMPORTED_MO13) {
          function MDCRippleFoundation(adapter) {
            _classCallCheck(this, MDCRippleFoundation);
            var _this28 = _possibleConstructorReturn(
              this,
              (
                MDCRippleFoundation.__proto__ ||
                Object.getPrototypeOf(MDCRippleFoundation)
              ).call(
                this,
                Object.assign(MDCRippleFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this28.layoutFrame_ = 0),
              (_this28.frame_ = { width: 0, height: 0 }),
              (_this28.activationState_ = _this28.defaultActivationState_()),
              (_this28.initialSize_ = 0),
              (_this28.maxRadius_ = 0),
              (_this28.activateHandler_ = function(e) {
                return _this28.activate_(e);
              }),
              (_this28.deactivateHandler_ = function(e) {
                return _this28.deactivate_(e);
              }),
              (_this28.focusHandler_ = function() {
                return requestAnimationFrame(function() {
                  return _this28.adapter_.addClass(
                    MDCRippleFoundation.cssClasses.BG_FOCUSED
                  );
                });
              }),
              (_this28.blurHandler_ = function() {
                return requestAnimationFrame(function() {
                  return _this28.adapter_.removeClass(
                    MDCRippleFoundation.cssClasses.BG_FOCUSED
                  );
                });
              }),
              (_this28.resizeHandler_ = function() {
                return _this28.layout();
              }),
              (_this28.unboundedCoords_ = { left: 0, top: 0 }),
              (_this28.fgScale_ = 0),
              (_this28.activationTimer_ = 0),
              (_this28.fgDeactivationRemovalTimer_ = 0),
              (_this28.activationAnimationHasEnded_ = !1),
              (_this28.activationTimerCallback_ = function() {
                (_this28.activationAnimationHasEnded_ = !0),
                  _this28.runDeactivationUXLogicIfReady_();
              }),
              (_this28.previousActivationEvent_ = null),
              _this28
            );
          }
          return (
            _inherits(
              MDCRippleFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCRippleFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.c;
                }
              },
              {
                key: "numbers",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    browserSupportsCssVars: function() {},
                    isUnbounded: function() {},
                    isSurfaceActive: function() {},
                    isSurfaceDisabled: function() {},
                    addClass: function() {},
                    removeClass: function() {},
                    containsEventTarget: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    registerDocumentInteractionHandler: function() {},
                    deregisterDocumentInteractionHandler: function() {},
                    registerResizeHandler: function() {},
                    deregisterResizeHandler: function() {},
                    updateCssVariable: function() {},
                    computeBoundingRect: function() {},
                    getWindowPageOffset: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCRippleFoundation, [
              {
                key: "isSupported_",
                value: function() {
                  return this.adapter_.browserSupportsCssVars();
                }
              },
              {
                key: "defaultActivationState_",
                value: function() {
                  return {
                    isActivated: !1,
                    hasDeactivationUXRun: !1,
                    wasActivatedByPointer: !1,
                    wasElementMadeActive: !1,
                    activationEvent: null,
                    isProgrammatic: !1
                  };
                }
              },
              {
                key: "init",
                value: function() {
                  var _this29 = this;
                  if (this.isSupported_()) {
                    this.registerRootHandlers_();
                    var _MDCRippleFoundation$ = MDCRippleFoundation.cssClasses,
                      ROOT = _MDCRippleFoundation$.ROOT,
                      UNBOUNDED = _MDCRippleFoundation$.UNBOUNDED;
                    requestAnimationFrame(function() {
                      _this29.adapter_.addClass(ROOT),
                        _this29.adapter_.isUnbounded() &&
                          (_this29.adapter_.addClass(UNBOUNDED),
                          _this29.layoutInternal_());
                    });
                  }
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this30 = this;
                  if (this.isSupported_()) {
                    if (this.activationTimer_) {
                      clearTimeout(this.activationTimer_),
                        (this.activationTimer_ = 0);
                      var FG_ACTIVATION =
                        MDCRippleFoundation.cssClasses.FG_ACTIVATION;
                      this.adapter_.removeClass(FG_ACTIVATION);
                    }
                    this.deregisterRootHandlers_(),
                      this.deregisterDeactivationHandlers_();
                    var _MDCRippleFoundation$2 = MDCRippleFoundation.cssClasses,
                      ROOT = _MDCRippleFoundation$2.ROOT,
                      UNBOUNDED = _MDCRippleFoundation$2.UNBOUNDED;
                    requestAnimationFrame(function() {
                      _this30.adapter_.removeClass(ROOT),
                        _this30.adapter_.removeClass(UNBOUNDED),
                        _this30.removeCssVars_();
                    });
                  }
                }
              },
              {
                key: "registerRootHandlers_",
                value: function() {
                  var _this31 = this;
                  ACTIVATION_EVENT_TYPES.forEach(function(type) {
                    _this31.adapter_.registerInteractionHandler(
                      type,
                      _this31.activateHandler_
                    );
                  }),
                    this.adapter_.registerInteractionHandler(
                      "focus",
                      this.focusHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "blur",
                      this.blurHandler_
                    ),
                    this.adapter_.isUnbounded() &&
                      this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              },
              {
                key: "registerDeactivationHandlers_",
                value: function(e) {
                  var _this32 = this;
                  "keydown" === e.type
                    ? this.adapter_.registerInteractionHandler(
                        "keyup",
                        this.deactivateHandler_
                      )
                    : POINTER_DEACTIVATION_EVENT_TYPES.forEach(function(type) {
                        _this32.adapter_.registerDocumentInteractionHandler(
                          type,
                          _this32.deactivateHandler_
                        );
                      });
                }
              },
              {
                key: "deregisterRootHandlers_",
                value: function() {
                  var _this33 = this;
                  ACTIVATION_EVENT_TYPES.forEach(function(type) {
                    _this33.adapter_.deregisterInteractionHandler(
                      type,
                      _this33.activateHandler_
                    );
                  }),
                    this.adapter_.deregisterInteractionHandler(
                      "focus",
                      this.focusHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "blur",
                      this.blurHandler_
                    ),
                    this.adapter_.isUnbounded() &&
                      this.adapter_.deregisterResizeHandler(
                        this.resizeHandler_
                      );
                }
              },
              {
                key: "deregisterDeactivationHandlers_",
                value: function() {
                  var _this34 = this;
                  this.adapter_.deregisterInteractionHandler(
                    "keyup",
                    this.deactivateHandler_
                  ),
                    POINTER_DEACTIVATION_EVENT_TYPES.forEach(function(type) {
                      _this34.adapter_.deregisterDocumentInteractionHandler(
                        type,
                        _this34.deactivateHandler_
                      );
                    });
                }
              },
              {
                key: "removeCssVars_",
                value: function() {
                  var _this35 = this,
                    strings = MDCRippleFoundation.strings;
                  Object.keys(strings).forEach(function(k) {
                    0 === k.indexOf("VAR_") &&
                      _this35.adapter_.updateCssVariable(strings[k], null);
                  });
                }
              },
              {
                key: "activate_",
                value: function(e) {
                  var _this36 = this;
                  if (!this.adapter_.isSurfaceDisabled()) {
                    var activationState = this.activationState_;
                    if (!activationState.isActivated) {
                      var previousActivationEvent = this
                        .previousActivationEvent_;
                      (previousActivationEvent &&
                        e &&
                        previousActivationEvent.type !== e.type) ||
                        ((activationState.isActivated = !0),
                        (activationState.isProgrammatic = null === e),
                        (activationState.activationEvent = e),
                        (activationState.wasActivatedByPointer =
                          !activationState.isProgrammatic &&
                          ("mousedown" === e.type ||
                            "touchstart" === e.type ||
                            "pointerdown" === e.type)),
                        e &&
                        activatedTargets.length > 0 &&
                        activatedTargets.some(function(target) {
                          return _this36.adapter_.containsEventTarget(target);
                        })
                          ? this.resetActivationState_()
                          : (e &&
                              (activatedTargets.push(e.target),
                              this.registerDeactivationHandlers_(e)),
                            (activationState.wasElementMadeActive = this.checkElementMadeActive_(
                              e
                            )),
                            activationState.wasElementMadeActive &&
                              this.animateActivation_(),
                            requestAnimationFrame(function() {
                              (activatedTargets = []),
                                activationState.wasElementMadeActive ||
                                  (" " !== e.key && 32 !== e.keyCode) ||
                                  ((activationState.wasElementMadeActive = _this36.checkElementMadeActive_(
                                    e
                                  )),
                                  activationState.wasElementMadeActive &&
                                    _this36.animateActivation_()),
                                activationState.wasElementMadeActive ||
                                  (_this36.activationState_ = _this36.defaultActivationState_());
                            })));
                    }
                  }
                }
              },
              {
                key: "checkElementMadeActive_",
                value: function(e) {
                  return (
                    !e ||
                    "keydown" !== e.type ||
                    this.adapter_.isSurfaceActive()
                  );
                }
              },
              {
                key: "activate",
                value: function() {
                  var event =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  this.activate_(event);
                }
              },
              {
                key: "animateActivation_",
                value: function() {
                  var _this37 = this,
                    _MDCRippleFoundation$3 = MDCRippleFoundation.strings,
                    VAR_FG_TRANSLATE_START =
                      _MDCRippleFoundation$3.VAR_FG_TRANSLATE_START,
                    VAR_FG_TRANSLATE_END =
                      _MDCRippleFoundation$3.VAR_FG_TRANSLATE_END,
                    _MDCRippleFoundation$4 = MDCRippleFoundation.cssClasses,
                    FG_DEACTIVATION = _MDCRippleFoundation$4.FG_DEACTIVATION,
                    FG_ACTIVATION = _MDCRippleFoundation$4.FG_ACTIVATION,
                    DEACTIVATION_TIMEOUT_MS =
                      MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;
                  this.layoutInternal_();
                  var translateStart = "",
                    translateEnd = "";
                  if (!this.adapter_.isUnbounded()) {
                    var _getFgTranslationCoor = this.getFgTranslationCoordinates_(),
                      startPoint = _getFgTranslationCoor.startPoint,
                      endPoint = _getFgTranslationCoor.endPoint;
                    (translateStart =
                      startPoint.x + "px, " + startPoint.y + "px"),
                      (translateEnd = endPoint.x + "px, " + endPoint.y + "px");
                  }
                  this.adapter_.updateCssVariable(
                    VAR_FG_TRANSLATE_START,
                    translateStart
                  ),
                    this.adapter_.updateCssVariable(
                      VAR_FG_TRANSLATE_END,
                      translateEnd
                    ),
                    clearTimeout(this.activationTimer_),
                    clearTimeout(this.fgDeactivationRemovalTimer_),
                    this.rmBoundedActivationClasses_(),
                    this.adapter_.removeClass(FG_DEACTIVATION),
                    this.adapter_.computeBoundingRect(),
                    this.adapter_.addClass(FG_ACTIVATION),
                    (this.activationTimer_ = setTimeout(function() {
                      return _this37.activationTimerCallback_();
                    }, DEACTIVATION_TIMEOUT_MS));
                }
              },
              {
                key: "getFgTranslationCoordinates_",
                value: function() {
                  var _activationState_ = this.activationState_,
                    activationEvent = _activationState_.activationEvent,
                    startPoint = void 0;
                  return {
                    startPoint: (startPoint = {
                      x:
                        (startPoint = _activationState_.wasActivatedByPointer
                          ? Object(
                              __WEBPACK_IMPORTED_MODULE_3__util__.getNormalizedEventCoords
                            )(
                              activationEvent,
                              this.adapter_.getWindowPageOffset(),
                              this.adapter_.computeBoundingRect()
                            )
                          : {
                              x: this.frame_.width / 2,
                              y: this.frame_.height / 2
                            }).x -
                        this.initialSize_ / 2,
                      y: startPoint.y - this.initialSize_ / 2
                    }),
                    endPoint: {
                      x: this.frame_.width / 2 - this.initialSize_ / 2,
                      y: this.frame_.height / 2 - this.initialSize_ / 2
                    }
                  };
                }
              },
              {
                key: "runDeactivationUXLogicIfReady_",
                value: function() {
                  var _this38 = this,
                    FG_DEACTIVATION =
                      MDCRippleFoundation.cssClasses.FG_DEACTIVATION,
                    _activationState_2 = this.activationState_,
                    hasDeactivationUXRun =
                      _activationState_2.hasDeactivationUXRun,
                    isActivated = _activationState_2.isActivated;
                  (hasDeactivationUXRun || !isActivated) &&
                    this.activationAnimationHasEnded_ &&
                    (this.rmBoundedActivationClasses_(),
                    this.adapter_.addClass(FG_DEACTIVATION),
                    (this.fgDeactivationRemovalTimer_ = setTimeout(function() {
                      _this38.adapter_.removeClass(FG_DEACTIVATION);
                    }, __WEBPACK_IMPORTED_MODULE_2__constants__
                      .b.FG_DEACTIVATION_MS)));
                }
              },
              {
                key: "rmBoundedActivationClasses_",
                value: function() {
                  var FG_ACTIVATION =
                    MDCRippleFoundation.cssClasses.FG_ACTIVATION;
                  this.adapter_.removeClass(FG_ACTIVATION),
                    (this.activationAnimationHasEnded_ = !1),
                    this.adapter_.computeBoundingRect();
                }
              },
              {
                key: "resetActivationState_",
                value: function() {
                  var _this39 = this;
                  (this.previousActivationEvent_ = this.activationState_.activationEvent),
                    (this.activationState_ = this.defaultActivationState_()),
                    setTimeout(function() {
                      return (_this39.previousActivationEvent_ = null);
                    }, MDCRippleFoundation.numbers.TAP_DELAY_MS);
                }
              },
              {
                key: "deactivate_",
                value: function(e) {
                  var _this40 = this,
                    activationState = this.activationState_;
                  if (activationState.isActivated) {
                    var state = Object.assign({}, activationState);
                    if (activationState.isProgrammatic) {
                      requestAnimationFrame(function() {
                        return _this40.animateDeactivation_(null, state);
                      }),
                        this.resetActivationState_();
                    } else
                      this.deregisterDeactivationHandlers_(),
                        requestAnimationFrame(function() {
                          (_this40.activationState_.hasDeactivationUXRun = !0),
                            _this40.animateDeactivation_(e, state),
                            _this40.resetActivationState_();
                        });
                  }
                }
              },
              {
                key: "deactivate",
                value: function() {
                  var event =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  this.deactivate_(event);
                }
              },
              {
                key: "animateDeactivation_",
                value: function(e, _ref7) {
                  var wasActivatedByPointer = _ref7.wasActivatedByPointer,
                    wasElementMadeActive = _ref7.wasElementMadeActive;
                  (wasActivatedByPointer || wasElementMadeActive) &&
                    this.runDeactivationUXLogicIfReady_();
                }
              },
              {
                key: "layout",
                value: function() {
                  var _this41 = this;
                  this.layoutFrame_ && cancelAnimationFrame(this.layoutFrame_),
                    (this.layoutFrame_ = requestAnimationFrame(function() {
                      _this41.layoutInternal_(), (_this41.layoutFrame_ = 0);
                    }));
                }
              },
              {
                key: "layoutInternal_",
                value: function() {
                  var _this42 = this;
                  this.frame_ = this.adapter_.computeBoundingRect();
                  var maxDim = Math.max(this.frame_.height, this.frame_.width);
                  (this.maxRadius_ = this.adapter_.isUnbounded()
                    ? maxDim
                    : Math.sqrt(
                        Math.pow(_this42.frame_.width, 2) +
                          Math.pow(_this42.frame_.height, 2)
                      ) + MDCRippleFoundation.numbers.PADDING),
                    (this.initialSize_ =
                      maxDim *
                      MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE),
                    (this.fgScale_ = this.maxRadius_ / this.initialSize_),
                    this.updateLayoutCssVars_();
                }
              },
              {
                key: "updateLayoutCssVars_",
                value: function() {
                  var _MDCRippleFoundation$5 = MDCRippleFoundation.strings,
                    VAR_FG_SIZE = _MDCRippleFoundation$5.VAR_FG_SIZE,
                    VAR_LEFT = _MDCRippleFoundation$5.VAR_LEFT,
                    VAR_TOP = _MDCRippleFoundation$5.VAR_TOP,
                    VAR_FG_SCALE = _MDCRippleFoundation$5.VAR_FG_SCALE;
                  this.adapter_.updateCssVariable(
                    VAR_FG_SIZE,
                    this.initialSize_ + "px"
                  ),
                    this.adapter_.updateCssVariable(
                      VAR_FG_SCALE,
                      this.fgScale_
                    ),
                    this.adapter_.isUnbounded() &&
                      ((this.unboundedCoords_ = {
                        left: Math.round(
                          this.frame_.width / 2 - this.initialSize_ / 2
                        ),
                        top: Math.round(
                          this.frame_.height / 2 - this.initialSize_ / 2
                        )
                      }),
                      this.adapter_.updateCssVariable(
                        VAR_LEFT,
                        this.unboundedCoords_.left + "px"
                      ),
                      this.adapter_.updateCssVariable(
                        VAR_TOP,
                        this.unboundedCoords_.top + "px"
                      ));
                }
              },
              {
                key: "setUnbounded",
                value: function(unbounded) {
                  var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;
                  unbounded
                    ? this.adapter_.addClass(UNBOUNDED)
                    : this.adapter_.removeClass(UNBOUNDED);
                }
              }
            ]),
            MDCRippleFoundation
          );
        })();
      __webpack_exports__.a = MDCRippleFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "c", function() {
          return strings;
        }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return numbers;
        });
      var cssClasses = {
          ROOT: "mdc-ripple-upgraded",
          UNBOUNDED: "mdc-ripple-upgraded--unbounded",
          BG_FOCUSED: "mdc-ripple-upgraded--background-focused",
          FG_ACTIVATION: "mdc-ripple-upgraded--foreground-activation",
          FG_DEACTIVATION: "mdc-ripple-upgraded--foreground-deactivation"
        },
        strings = {
          VAR_LEFT: "--mdc-ripple-left",
          VAR_TOP: "--mdc-ripple-top",
          VAR_FG_SIZE: "--mdc-ripple-fg-size",
          VAR_FG_SCALE: "--mdc-ripple-fg-scale",
          VAR_FG_TRANSLATE_START: "--mdc-ripple-fg-translate-start",
          VAR_FG_TRANSLATE_END: "--mdc-ripple-fg-translate-end"
        },
        numbers = {
          PADDING: 10,
          INITIAL_ORIGIN_SCALE: 0.6,
          DEACTIVATION_TIMEOUT_MS: 225,
          FG_DEACTIVATION_MS: 150,
          TAP_DELAY_MS: 300
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      function validDescriptor(inputPropDesc) {
        return !!inputPropDesc && "function" == typeof inputPropDesc.set;
      }
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = (__webpack_require__(4),
        __webpack_require__(44),
        __webpack_require__(45)),
        CB_PROTO_PROPS = ["checked", "indeterminate"],
        MDCCheckboxFoundation = (function(_WEBPACK_IMPORTED_MO14) {
          function MDCCheckboxFoundation(adapter) {
            _classCallCheck(this, MDCCheckboxFoundation);
            var _this43 = _possibleConstructorReturn(
              this,
              (
                MDCCheckboxFoundation.__proto__ ||
                Object.getPrototypeOf(MDCCheckboxFoundation)
              ).call(
                this,
                Object.assign(MDCCheckboxFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this43.currentCheckState_ =
                __WEBPACK_IMPORTED_MODULE_3__constants__.c.TRANSITION_STATE_INIT),
              (_this43.currentAnimationClass_ = ""),
              (_this43.animEndLatchTimer_ = 0),
              (_this43.animEndHandler_ = function() {
                return _this43.handleAnimationEnd();
              }),
              (_this43.changeHandler_ = function() {
                return _this43.handleChange();
              }),
              _this43
            );
          }
          return (
            _inherits(
              MDCCheckboxFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCCheckboxFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_3__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_3__constants__.c;
                }
              },
              {
                key: "numbers",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_3__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    setNativeControlAttr: function() {},
                    removeNativeControlAttr: function() {},
                    registerAnimationEndHandler: function() {},
                    deregisterAnimationEndHandler: function() {},
                    registerChangeHandler: function() {},
                    deregisterChangeHandler: function() {},
                    getNativeControl: function() {},
                    forceLayout: function() {},
                    isAttachedToDOM: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCCheckboxFoundation, [
              {
                key: "init",
                value: function() {
                  (this.currentCheckState_ = this.determineCheckState_(
                    this.getNativeControl_()
                  )),
                    this.updateAriaChecked_(),
                    this.adapter_.addClass(
                      __WEBPACK_IMPORTED_MODULE_3__constants__.a.UPGRADED
                    ),
                    this.adapter_.registerChangeHandler(this.changeHandler_),
                    this.installPropertyChangeHooks_();
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterChangeHandler(this.changeHandler_),
                    this.uninstallPropertyChangeHooks_();
                }
              },
              {
                key: "isChecked",
                value: function() {
                  return this.getNativeControl_().checked;
                }
              },
              {
                key: "setChecked",
                value: function(checked) {
                  this.getNativeControl_().checked = checked;
                }
              },
              {
                key: "isIndeterminate",
                value: function() {
                  return this.getNativeControl_().indeterminate;
                }
              },
              {
                key: "setIndeterminate",
                value: function(indeterminate) {
                  this.getNativeControl_().indeterminate = indeterminate;
                }
              },
              {
                key: "isDisabled",
                value: function() {
                  return this.getNativeControl_().disabled;
                }
              },
              {
                key: "setDisabled",
                value: function(disabled) {
                  (this.getNativeControl_().disabled = disabled),
                    disabled
                      ? this.adapter_.addClass(
                          __WEBPACK_IMPORTED_MODULE_3__constants__.a.DISABLED
                        )
                      : this.adapter_.removeClass(
                          __WEBPACK_IMPORTED_MODULE_3__constants__.a.DISABLED
                        );
                }
              },
              {
                key: "getValue",
                value: function() {
                  return this.getNativeControl_().value;
                }
              },
              {
                key: "setValue",
                value: function(value) {
                  this.getNativeControl_().value = value;
                }
              },
              {
                key: "handleAnimationEnd",
                value: function() {
                  var _this44 = this;
                  clearTimeout(this.animEndLatchTimer_),
                    (this.animEndLatchTimer_ = setTimeout(function() {
                      _this44.adapter_.removeClass(
                        _this44.currentAnimationClass_
                      ),
                        _this44.adapter_.deregisterAnimationEndHandler(
                          _this44.animEndHandler_
                        );
                    }, __WEBPACK_IMPORTED_MODULE_3__constants__
                      .b.ANIM_END_LATCH_MS));
                }
              },
              {
                key: "handleChange",
                value: function() {
                  this.transitionCheckState_();
                }
              },
              {
                key: "installPropertyChangeHooks_",
                value: function() {
                  var _this45 = this,
                    nativeCb = this.getNativeControl_(),
                    cbProto = Object.getPrototypeOf(nativeCb);
                  CB_PROTO_PROPS.forEach(function(controlState) {
                    var desc = Object.getOwnPropertyDescriptor(
                      cbProto,
                      controlState
                    );
                    if (validDescriptor(desc)) {
                      var nativeCbDesc = {
                        get: desc.get,
                        set: function(state) {
                          desc.set.call(nativeCb, state),
                            _this45.transitionCheckState_();
                        },
                        configurable: desc.configurable,
                        enumerable: desc.enumerable
                      };
                      Object.defineProperty(
                        nativeCb,
                        controlState,
                        nativeCbDesc
                      );
                    }
                  });
                }
              },
              {
                key: "uninstallPropertyChangeHooks_",
                value: function() {
                  var nativeCb = this.getNativeControl_(),
                    cbProto = Object.getPrototypeOf(nativeCb);
                  CB_PROTO_PROPS.forEach(function(controlState) {
                    var desc = Object.getOwnPropertyDescriptor(
                      cbProto,
                      controlState
                    );
                    validDescriptor(desc) &&
                      Object.defineProperty(nativeCb, controlState, desc);
                  });
                }
              },
              {
                key: "transitionCheckState_",
                value: function() {
                  var nativeCb = this.adapter_.getNativeControl();
                  if (nativeCb) {
                    var oldState = this.currentCheckState_,
                      newState = this.determineCheckState_(nativeCb);
                    oldState !== newState &&
                      (this.updateAriaChecked_(),
                      this.currentAnimationClass_.length > 0 &&
                        (clearTimeout(this.animEndLatchTimer_),
                        this.adapter_.forceLayout(),
                        this.adapter_.removeClass(this.currentAnimationClass_)),
                      (this.currentAnimationClass_ = this.getTransitionAnimationClass_(
                        oldState,
                        newState
                      )),
                      (this.currentCheckState_ = newState),
                      this.adapter_.isAttachedToDOM() &&
                        this.currentAnimationClass_.length > 0 &&
                        (this.adapter_.addClass(this.currentAnimationClass_),
                        this.adapter_.registerAnimationEndHandler(
                          this.animEndHandler_
                        )));
                  }
                }
              },
              {
                key: "determineCheckState_",
                value: function(nativeCb) {
                  var _WEBPACK_IMPORTED_MO15 =
                      __WEBPACK_IMPORTED_MODULE_3__constants__.c,
                    TRANSITION_STATE_INDETERMINATE =
                      _WEBPACK_IMPORTED_MO15.TRANSITION_STATE_INDETERMINATE,
                    TRANSITION_STATE_CHECKED =
                      _WEBPACK_IMPORTED_MO15.TRANSITION_STATE_CHECKED,
                    TRANSITION_STATE_UNCHECKED =
                      _WEBPACK_IMPORTED_MO15.TRANSITION_STATE_UNCHECKED;
                  return nativeCb.indeterminate
                    ? TRANSITION_STATE_INDETERMINATE
                    : nativeCb.checked
                      ? TRANSITION_STATE_CHECKED
                      : TRANSITION_STATE_UNCHECKED;
                }
              },
              {
                key: "getTransitionAnimationClass_",
                value: function(oldState, newState) {
                  var _WEBPACK_IMPORTED_MO16 =
                      __WEBPACK_IMPORTED_MODULE_3__constants__.c,
                    TRANSITION_STATE_INIT =
                      _WEBPACK_IMPORTED_MO16.TRANSITION_STATE_INIT,
                    TRANSITION_STATE_CHECKED =
                      _WEBPACK_IMPORTED_MO16.TRANSITION_STATE_CHECKED,
                    TRANSITION_STATE_UNCHECKED =
                      _WEBPACK_IMPORTED_MO16.TRANSITION_STATE_UNCHECKED,
                    _MDCCheckboxFoundatio = MDCCheckboxFoundation.cssClasses,
                    ANIM_UNCHECKED_CHECKED =
                      _MDCCheckboxFoundatio.ANIM_UNCHECKED_CHECKED,
                    ANIM_UNCHECKED_INDETERMINATE =
                      _MDCCheckboxFoundatio.ANIM_UNCHECKED_INDETERMINATE,
                    ANIM_CHECKED_UNCHECKED =
                      _MDCCheckboxFoundatio.ANIM_CHECKED_UNCHECKED,
                    ANIM_CHECKED_INDETERMINATE =
                      _MDCCheckboxFoundatio.ANIM_CHECKED_INDETERMINATE,
                    ANIM_INDETERMINATE_CHECKED =
                      _MDCCheckboxFoundatio.ANIM_INDETERMINATE_CHECKED,
                    ANIM_INDETERMINATE_UNCHECKED =
                      _MDCCheckboxFoundatio.ANIM_INDETERMINATE_UNCHECKED;
                  switch (oldState) {
                    case TRANSITION_STATE_INIT:
                      if (newState === TRANSITION_STATE_UNCHECKED) return "";
                    case TRANSITION_STATE_UNCHECKED:
                      return newState === TRANSITION_STATE_CHECKED
                        ? ANIM_UNCHECKED_CHECKED
                        : ANIM_UNCHECKED_INDETERMINATE;
                    case TRANSITION_STATE_CHECKED:
                      return newState === TRANSITION_STATE_UNCHECKED
                        ? ANIM_CHECKED_UNCHECKED
                        : ANIM_CHECKED_INDETERMINATE;
                    default:
                      return newState === TRANSITION_STATE_CHECKED
                        ? ANIM_INDETERMINATE_CHECKED
                        : ANIM_INDETERMINATE_UNCHECKED;
                  }
                }
              },
              {
                key: "updateAriaChecked_",
                value: function() {
                  this.isIndeterminate()
                    ? this.adapter_.setNativeControlAttr(
                        __WEBPACK_IMPORTED_MODULE_3__constants__.c
                          .ARIA_CHECKED_ATTR,
                        __WEBPACK_IMPORTED_MODULE_3__constants__.c
                          .ARIA_CHECKED_INDETERMINATE_VALUE
                      )
                    : this.adapter_.removeNativeControlAttr(
                        __WEBPACK_IMPORTED_MODULE_3__constants__.c
                          .ARIA_CHECKED_ATTR
                      );
                }
              },
              {
                key: "getNativeControl_",
                value: function() {
                  return (
                    this.adapter_.getNativeControl() || {
                      checked: !1,
                      indeterminate: !1,
                      disabled: !1,
                      value: null
                    }
                  );
                }
              }
            ]),
            MDCCheckboxFoundation
          );
        })();
      __webpack_exports__.a = MDCCheckboxFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__(4),
        (function() {
          function MDCCheckboxAdapter() {
            _classCallCheck(this, MDCCheckboxAdapter);
          }
          _createClass(MDCCheckboxAdapter, [
            { key: "addClass", value: function(className) {} },
            { key: "removeClass", value: function(className) {} },
            { key: "setNativeControlAttr", value: function(attr, value) {} },
            { key: "removeNativeControlAttr", value: function(attr) {} },
            { key: "registerAnimationEndHandler", value: function(handler) {} },
            {
              key: "deregisterAnimationEndHandler",
              value: function(handler) {}
            },
            { key: "registerChangeHandler", value: function(handler) {} },
            { key: "deregisterChangeHandler", value: function(handler) {} },
            { key: "getNativeControl", value: function() {} },
            { key: "forceLayout", value: function() {} },
            { key: "isAttachedToDOM", value: function() {} }
          ]);
        })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "c", function() {
          return strings;
        }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return numbers;
        });
      var cssClasses = {
          UPGRADED: "mdc-checkbox--upgraded",
          CHECKED: "mdc-checkbox--checked",
          INDETERMINATE: "mdc-checkbox--indeterminate",
          DISABLED: "mdc-checkbox--disabled",
          ANIM_UNCHECKED_CHECKED: "mdc-checkbox--anim-unchecked-checked",
          ANIM_UNCHECKED_INDETERMINATE:
            "mdc-checkbox--anim-unchecked-indeterminate",
          ANIM_CHECKED_UNCHECKED: "mdc-checkbox--anim-checked-unchecked",
          ANIM_CHECKED_INDETERMINATE:
            "mdc-checkbox--anim-checked-indeterminate",
          ANIM_INDETERMINATE_CHECKED:
            "mdc-checkbox--anim-indeterminate-checked",
          ANIM_INDETERMINATE_UNCHECKED:
            "mdc-checkbox--anim-indeterminate-unchecked"
        },
        strings = {
          NATIVE_CONTROL_SELECTOR: ".mdc-checkbox__native-control",
          TRANSITION_STATE_INIT: "init",
          TRANSITION_STATE_CHECKED: "checked",
          TRANSITION_STATE_UNCHECKED: "unchecked",
          TRANSITION_STATE_INDETERMINATE: "indeterminate",
          ARIA_CHECKED_ATTR: "aria-checked",
          ARIA_CHECKED_INDETERMINATE_VALUE: "mixed"
        },
        numbers = { ANIM_END_LATCH_MS: 250 };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__chip_index__ = __webpack_require__(17),
        __WEBPACK_IMPORTED_MODULE_1__chip_set_index__ = __webpack_require__(47);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCChipFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_0__chip_index__.b;
        }
      ),
        __webpack_require__.d(__webpack_exports__, "MDCChip", function() {
          return __WEBPACK_IMPORTED_MODULE_0__chip_index__.a;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCChipSetFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_1__chip_set_index__.b;
          }
        ),
        __webpack_require__.d(__webpack_exports__, "MDCChipSet", function() {
          return __WEBPACK_IMPORTED_MODULE_1__chip_set_index__.a;
        });
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return MDCChipSet;
      });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(21),
        __webpack_require__(48)),
        __WEBPACK_IMPORTED_MODULE_3__chip_index__ = __webpack_require__(17);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
      });
      var MDCChipSet = (function(_WEBPACK_IMPORTED_MO17) {
        function MDCChipSet() {
          var _ref8;
          _classCallCheck(this, MDCChipSet);
          for (
            var _len6 = arguments.length, args = Array(_len6), _key6 = 0;
            _key6 < _len6;
            _key6++
          )
            args[_key6] = arguments[_key6];
          var _this46 = _possibleConstructorReturn(
            this,
            (_ref8 =
              MDCChipSet.__proto__ ||
              Object.getPrototypeOf(MDCChipSet)).call.apply(
              _ref8,
              [this].concat(args)
            )
          );
          return _this46.chips, _this46.chipFactory_, _this46;
        }
        return (
          _inherits(
            MDCChipSet,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCChipSet,
            [
              {
                key: "initialize",
                value: function() {
                  var chipFactory =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : function(el) {
                          return new __WEBPACK_IMPORTED_MODULE_3__chip_index__.a(
                            el
                          );
                        };
                  (this.chipFactory_ = chipFactory),
                    (this.chips = this.instantiateChips_(this.chipFactory_));
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.chips.forEach(function(chip) {
                    chip.destroy();
                  });
                }
              },
              {
                key: "initialSyncWithDOM",
                value: function() {
                  var _this47 = this;
                  this.chips.forEach(function(chip) {
                    chip.isSelected() &&
                      _this47.foundation_.select(chip.foundation);
                  });
                }
              },
              {
                key: "addChip",
                value: function(text, leadingIcon, trailingIcon) {
                  var chipEl = this.foundation_.addChip(
                    text,
                    leadingIcon,
                    trailingIcon
                  );
                  this.chips.push(this.chipFactory_(chipEl));
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this48 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a(
                    Object.assign({
                      hasClass: function(className) {
                        return _this48.root_.classList.contains(className);
                      },
                      registerInteractionHandler: function(evtType, handler) {
                        return _this48.root_.addEventListener(evtType, handler);
                      },
                      deregisterInteractionHandler: function(evtType, handler) {
                        return _this48.root_.removeEventListener(
                          evtType,
                          handler
                        );
                      },
                      appendChip: function(text, leadingIcon, trailingIcon) {
                        var chipTextEl = document.createElement("div");
                        chipTextEl.classList.add(
                          __WEBPACK_IMPORTED_MODULE_3__chip_index__.b.cssClasses
                            .TEXT
                        ),
                          chipTextEl.appendChild(document.createTextNode(text));
                        var chipEl = document.createElement("div");
                        return (
                          chipEl.classList.add(
                            __WEBPACK_IMPORTED_MODULE_3__chip_index__.b
                              .cssClasses.CHIP
                          ),
                          leadingIcon && chipEl.appendChild(leadingIcon),
                          chipEl.appendChild(chipTextEl),
                          trailingIcon && chipEl.appendChild(trailingIcon),
                          _this48.root_.appendChild(chipEl),
                          chipEl
                        );
                      },
                      removeChip: function(chip) {
                        var index = _this48.chips.indexOf(chip);
                        _this48.chips.splice(index, 1), chip.remove();
                      }
                    })
                  );
                }
              },
              {
                key: "instantiateChips_",
                value: function(chipFactory) {
                  return [].slice
                    .call(
                      this.root_.querySelectorAll(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                          .CHIP_SELECTOR
                      )
                    )
                    .map(function(el) {
                      return chipFactory(el);
                    });
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCChipSet(root);
                }
              }
            ]
          ),
          MDCChipSet
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__chip_foundation__ = (__webpack_require__(
          21
        ),
        __webpack_require__(19)),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(49),
        MDCChipSetFoundation = (function(_WEBPACK_IMPORTED_MO18) {
          function MDCChipSetFoundation(adapter) {
            _classCallCheck(this, MDCChipSetFoundation);
            var _this49 = _possibleConstructorReturn(
              this,
              (
                MDCChipSetFoundation.__proto__ ||
                Object.getPrototypeOf(MDCChipSetFoundation)
              ).call(
                this,
                Object.assign(MDCChipSetFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this49.selectedChips_ = []),
              (_this49.chipInteractionHandler_ = function(evt) {
                return _this49.handleChipInteraction_(evt);
              }),
              (_this49.chipRemovalHandler_ = function(evt) {
                return _this49.handleChipRemoval_(evt);
              }),
              _this49
            );
          }
          return (
            _inherits(
              MDCChipSetFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCChipSetFoundation, null, [
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_3__constants__.b;
                }
              },
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_3__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    hasClass: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    appendChip: function() {},
                    removeChip: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCChipSetFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerInteractionHandler(
                    __WEBPACK_IMPORTED_MODULE_2__chip_foundation__.a.strings
                      .INTERACTION_EVENT,
                    this.chipInteractionHandler_
                  ),
                    this.adapter_.registerInteractionHandler(
                      __WEBPACK_IMPORTED_MODULE_2__chip_foundation__.a.strings
                        .REMOVAL_EVENT,
                      this.chipRemovalHandler_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterInteractionHandler(
                    __WEBPACK_IMPORTED_MODULE_2__chip_foundation__.a.strings
                      .INTERACTION_EVENT,
                    this.chipInteractionHandler_
                  ),
                    this.adapter_.deregisterInteractionHandler(
                      __WEBPACK_IMPORTED_MODULE_2__chip_foundation__.a.strings
                        .REMOVAL_EVENT,
                      this.chipRemovalHandler_
                    );
                }
              },
              {
                key: "addChip",
                value: function(text, leadingIcon, trailingIcon) {
                  return this.adapter_.appendChip(
                    text,
                    leadingIcon,
                    trailingIcon
                  );
                }
              },
              {
                key: "select",
                value: function(chipFoundation) {
                  this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.a.CHOICE
                  ) && this.deselectAll_(),
                    chipFoundation.setSelected(!0),
                    this.selectedChips_.push(chipFoundation);
                }
              },
              {
                key: "deselect",
                value: function(chipFoundation) {
                  var index = this.selectedChips_.indexOf(chipFoundation);
                  index >= 0 && this.selectedChips_.splice(index, 1),
                    chipFoundation.setSelected(!1);
                }
              },
              {
                key: "deselectAll_",
                value: function() {
                  this.selectedChips_.forEach(function(chipFoundation) {
                    chipFoundation.setSelected(!1);
                  }),
                    (this.selectedChips_.length = 0);
                }
              },
              {
                key: "handleChipInteraction_",
                value: function(evt) {
                  var chipFoundation = evt.detail.chip.foundation;
                  (this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.a.CHOICE
                  ) ||
                    this.adapter_.hasClass(
                      __WEBPACK_IMPORTED_MODULE_3__constants__.a.FILTER
                    )) &&
                    (chipFoundation.isSelected()
                      ? this.deselect(chipFoundation)
                      : this.select(chipFoundation));
                }
              },
              {
                key: "handleChipRemoval_",
                value: function(evt) {
                  var chip = evt.detail.chip;
                  this.deselect(chip.foundation),
                    this.adapter_.removeChip(chip);
                }
              }
            ]),
            MDCChipSetFoundation
          );
        })();
      __webpack_exports__.a = MDCChipSetFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return strings;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return cssClasses;
        });
      var strings = { CHIP_SELECTOR: ".mdc-chip" },
        cssClasses = {
          CHOICE: "mdc-chip-set--choice",
          FILTER: "mdc-chip-set--filter"
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(51),
        __WEBPACK_IMPORTED_MODULE_3__util__ = __webpack_require__(53);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCDialogFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      ),
        __webpack_require__.d(__webpack_exports__, "util", function() {
          return __WEBPACK_IMPORTED_MODULE_3__util__;
        });
      var MDCDialog = (function(_WEBPACK_IMPORTED_MO19) {
        function MDCDialog() {
          return (
            _classCallCheck(this, MDCDialog),
            _possibleConstructorReturn(
              this,
              (MDCDialog.__proto__ || Object.getPrototypeOf(MDCDialog)).apply(
                this,
                arguments
              )
            )
          );
        }
        return (
          _inherits(
            MDCDialog,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCDialog,
            [
              {
                key: "initialize",
                value: function() {
                  (this.focusTrap_ = __WEBPACK_IMPORTED_MODULE_3__util__.createFocusTrapInstance(
                    this.dialogSurface_,
                    this.acceptButton_
                  )),
                    (this.footerBtnRipples_ = []);
                  for (
                    var footerBtn,
                      footerBtns = this.root_.querySelectorAll(
                        ".mdc-dialog__footer__button"
                      ),
                      i = 0;
                    (footerBtn = footerBtns[i]);
                    i++
                  )
                    this.footerBtnRipples_.push(
                      new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple(
                        footerBtn
                      )
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.footerBtnRipples_.forEach(function(ripple) {
                    return ripple.destroy();
                  }),
                    _get(
                      MDCDialog.prototype.__proto__ ||
                        Object.getPrototypeOf(MDCDialog.prototype),
                      "destroy",
                      this
                    ).call(this);
                }
              },
              {
                key: "show",
                value: function() {
                  this.foundation_.open();
                }
              },
              {
                key: "close",
                value: function() {
                  this.foundation_.close();
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this51 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a({
                    addClass: function(className) {
                      return _this51.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this51.root_.classList.remove(className);
                    },
                    addBodyClass: function(className) {
                      return document.body.classList.add(className);
                    },
                    removeBodyClass: function(className) {
                      return document.body.classList.remove(className);
                    },
                    eventTargetHasClass: function(target, className) {
                      return target.classList.contains(className);
                    },
                    registerInteractionHandler: function(evt, handler) {
                      return _this51.root_.addEventListener(evt, handler);
                    },
                    deregisterInteractionHandler: function(evt, handler) {
                      return _this51.root_.removeEventListener(evt, handler);
                    },
                    registerSurfaceInteractionHandler: function(evt, handler) {
                      return _this51.dialogSurface_.addEventListener(
                        evt,
                        handler
                      );
                    },
                    deregisterSurfaceInteractionHandler: function(
                      evt,
                      handler
                    ) {
                      return _this51.dialogSurface_.removeEventListener(
                        evt,
                        handler
                      );
                    },
                    registerDocumentKeydownHandler: function(handler) {
                      return document.addEventListener("keydown", handler);
                    },
                    deregisterDocumentKeydownHandler: function(handler) {
                      return document.removeEventListener("keydown", handler);
                    },
                    registerTransitionEndHandler: function(handler) {
                      return _this51.dialogSurface_.addEventListener(
                        "transitionend",
                        handler
                      );
                    },
                    deregisterTransitionEndHandler: function(handler) {
                      return _this51.dialogSurface_.removeEventListener(
                        "transitionend",
                        handler
                      );
                    },
                    notifyAccept: function() {
                      return _this51.emit(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                          .ACCEPT_EVENT
                      );
                    },
                    notifyCancel: function() {
                      return _this51.emit(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                          .CANCEL_EVENT
                      );
                    },
                    trapFocusOnSurface: function() {
                      return _this51.focusTrap_.activate();
                    },
                    untrapFocusOnSurface: function() {
                      return _this51.focusTrap_.deactivate();
                    },
                    isDialog: function(el) {
                      return el === _this51.dialogSurface_;
                    }
                  });
                }
              },
              {
                key: "open",
                get: function() {
                  return this.foundation_.isOpen();
                }
              },
              {
                key: "acceptButton_",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                      .ACCEPT_SELECTOR
                  );
                }
              },
              {
                key: "dialogSurface_",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                      .DIALOG_SURFACE_SELECTOR
                  );
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCDialog(root);
                }
              }
            ]
          ),
          MDCDialog
        );
      })();
      __webpack_exports__.MDCDialog = MDCDialog;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(52),
        MDCDialogFoundation = (function(_WEBPACK_IMPORTED_MO20) {
          function MDCDialogFoundation(adapter) {
            _classCallCheck(this, MDCDialogFoundation);
            var _this52 = _possibleConstructorReturn(
              this,
              (
                MDCDialogFoundation.__proto__ ||
                Object.getPrototypeOf(MDCDialogFoundation)
              ).call(
                this,
                Object.assign(MDCDialogFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this52.isOpen_ = !1),
              (_this52.componentClickHandler_ = function(evt) {
                _this52.adapter_.eventTargetHasClass(
                  evt.target,
                  __WEBPACK_IMPORTED_MODULE_1__constants__.a.BACKDROP
                ) && _this52.cancel(!0);
              }),
              (_this52.dialogClickHandler_ = function(evt) {
                return _this52.handleDialogClick_(evt);
              }),
              (_this52.documentKeydownHandler_ = function(evt) {
                ((evt.key && "Escape" === evt.key) || 27 === evt.keyCode) &&
                  _this52.cancel(!0);
              }),
              (_this52.transitionEndHandler_ = function(evt) {
                return _this52.handleTransitionEnd_(evt);
              }),
              _this52
            );
          }
          return (
            _inherits(
              MDCDialogFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_index__[
                "MDCFoundation"
              ]
            ),
            _createClass(MDCDialogFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    addBodyClass: function() {},
                    removeBodyClass: function() {},
                    eventTargetHasClass: function() {
                      return !1;
                    },
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    registerSurfaceInteractionHandler: function() {},
                    deregisterSurfaceInteractionHandler: function() {},
                    registerDocumentKeydownHandler: function() {},
                    deregisterDocumentKeydownHandler: function() {},
                    registerTransitionEndHandler: function() {},
                    deregisterTransitionEndHandler: function() {},
                    notifyAccept: function() {},
                    notifyCancel: function() {},
                    trapFocusOnSurface: function() {},
                    untrapFocusOnSurface: function() {},
                    isDialog: function() {
                      return !1;
                    }
                  };
                }
              }
            ]),
            _createClass(MDCDialogFoundation, [
              {
                key: "destroy",
                value: function() {
                  this.isOpen_ &&
                    (this.adapter_.deregisterSurfaceInteractionHandler(
                      "click",
                      this.dialogClickHandler_
                    ),
                    this.adapter_.deregisterDocumentKeydownHandler(
                      this.documentKeydownHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "click",
                      this.componentClickHandler_
                    ),
                    this.adapter_.untrapFocusOnSurface(),
                    this.adapter_.deregisterTransitionEndHandler(
                      this.transitionEndHandler_
                    ),
                    this.adapter_.removeClass(
                      MDCDialogFoundation.cssClasses.ANIMATING
                    ),
                    this.adapter_.removeClass(
                      MDCDialogFoundation.cssClasses.OPEN
                    ),
                    this.enableScroll_());
                }
              },
              {
                key: "open",
                value: function() {
                  (this.isOpen_ = !0),
                    this.disableScroll_(),
                    this.adapter_.registerDocumentKeydownHandler(
                      this.documentKeydownHandler_
                    ),
                    this.adapter_.registerSurfaceInteractionHandler(
                      "click",
                      this.dialogClickHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "click",
                      this.componentClickHandler_
                    ),
                    this.adapter_.registerTransitionEndHandler(
                      this.transitionEndHandler_
                    ),
                    this.adapter_.addClass(
                      MDCDialogFoundation.cssClasses.ANIMATING
                    ),
                    this.adapter_.addClass(MDCDialogFoundation.cssClasses.OPEN);
                }
              },
              {
                key: "close",
                value: function() {
                  (this.isOpen_ = !1),
                    this.enableScroll_(),
                    this.adapter_.deregisterSurfaceInteractionHandler(
                      "click",
                      this.dialogClickHandler_
                    ),
                    this.adapter_.deregisterDocumentKeydownHandler(
                      this.documentKeydownHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "click",
                      this.componentClickHandler_
                    ),
                    this.adapter_.untrapFocusOnSurface(),
                    this.adapter_.registerTransitionEndHandler(
                      this.transitionEndHandler_
                    ),
                    this.adapter_.addClass(
                      MDCDialogFoundation.cssClasses.ANIMATING
                    ),
                    this.adapter_.removeClass(
                      MDCDialogFoundation.cssClasses.OPEN
                    );
                }
              },
              {
                key: "isOpen",
                value: function() {
                  return this.isOpen_;
                }
              },
              {
                key: "accept",
                value: function(shouldNotify) {
                  shouldNotify && this.adapter_.notifyAccept(), this.close();
                }
              },
              {
                key: "cancel",
                value: function(shouldNotify) {
                  shouldNotify && this.adapter_.notifyCancel(), this.close();
                }
              },
              {
                key: "handleDialogClick_",
                value: function(evt) {
                  var target = evt.target;
                  this.adapter_.eventTargetHasClass(
                    target,
                    __WEBPACK_IMPORTED_MODULE_1__constants__.a.ACCEPT_BTN
                  )
                    ? this.accept(!0)
                    : this.adapter_.eventTargetHasClass(
                        target,
                        __WEBPACK_IMPORTED_MODULE_1__constants__.a.CANCEL_BTN
                      ) && this.cancel(!0);
                }
              },
              {
                key: "handleTransitionEnd_",
                value: function(evt) {
                  this.adapter_.isDialog(evt.target) &&
                    (this.adapter_.deregisterTransitionEndHandler(
                      this.transitionEndHandler_
                    ),
                    this.adapter_.removeClass(
                      MDCDialogFoundation.cssClasses.ANIMATING
                    ),
                    this.isOpen_ && this.adapter_.trapFocusOnSurface());
                }
              },
              {
                key: "disableScroll_",
                value: function() {
                  this.adapter_.addBodyClass(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.a.SCROLL_LOCK
                  );
                }
              },
              {
                key: "enableScroll_",
                value: function() {
                  this.adapter_.removeBodyClass(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.a.SCROLL_LOCK
                  );
                }
              }
            ]),
            MDCDialogFoundation
          );
        })();
      __webpack_exports__.a = MDCDialogFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = {
        ROOT: "mdc-dialog",
        OPEN: "mdc-dialog--open",
        ANIMATING: "mdc-dialog--animating",
        BACKDROP: "mdc-dialog__backdrop",
        SCROLL_LOCK: "mdc-dialog-scroll-lock",
        ACCEPT_BTN: "mdc-dialog__footer__button--accept",
        CANCEL_BTN: "mdc-dialog__footer__button--cancel"
      };
      __webpack_exports__.a = cssClasses;
      var strings = {
        OPEN_DIALOG_SELECTOR: ".mdc-dialog--open",
        DIALOG_SURFACE_SELECTOR: ".mdc-dialog__surface",
        ACCEPT_SELECTOR: ".mdc-dialog__footer__button--accept",
        ACCEPT_EVENT: "MDCDialog:accept",
        CANCEL_EVENT: "MDCDialog:cancel"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        (__webpack_exports__.createFocusTrapInstance = function(
          surfaceEl,
          acceptButtonEl
        ) {
          return (arguments.length > 2 && void 0 !== arguments[2]
            ? arguments[2]
            : __WEBPACK_IMPORTED_MODULE_0_focus_trap___default.a)(surfaceEl, {
            initialFocus: acceptButtonEl,
            clickOutsideDeactivates: !0
          });
        });
      var __WEBPACK_IMPORTED_MODULE_0_focus_trap__ = __webpack_require__(54),
        __WEBPACK_IMPORTED_MODULE_0_focus_trap___default = __webpack_require__.n(
          __WEBPACK_IMPORTED_MODULE_0_focus_trap__
        );
    },
    function(module, exports, __webpack_require__) {
      function isEscapeEvent(e) {
        return "Escape" === e.key || "Esc" === e.key || 27 === e.keyCode;
      }
      function tryFocus(node) {
        node &&
          node.focus &&
          node !== document.activeElement &&
          (node.focus(),
          "input" === node.tagName.toLowerCase() && node.select());
      }
      var tabbable = __webpack_require__(55),
        listeningFocusTrap = null;
      module.exports = function(element, userOptions) {
        function deactivate(deactivateOptions) {
          if (active) {
            var defaultedDeactivateOptions = {
              returnFocus:
                deactivateOptions && void 0 !== deactivateOptions.returnFocus
                  ? deactivateOptions.returnFocus
                  : config.returnFocusOnDeactivate,
              onDeactivate:
                deactivateOptions && void 0 !== deactivateOptions.onDeactivate
                  ? deactivateOptions.onDeactivate
                  : config.onDeactivate
            };
            return (
              removeListeners(),
              defaultedDeactivateOptions.onDeactivate &&
                defaultedDeactivateOptions.onDeactivate(),
              defaultedDeactivateOptions.returnFocus &&
                setTimeout(function() {
                  tryFocus(nodeFocusedBeforeActivation);
                }, 0),
              (active = !1),
              (paused = !1),
              this
            );
          }
        }
        function addListeners() {
          if (active)
            return (
              listeningFocusTrap && listeningFocusTrap.pause(),
              (listeningFocusTrap = trap),
              updateTabbableNodes(),
              tryFocus(firstFocusNode()),
              document.addEventListener("focus", checkFocus, !0),
              document.addEventListener("click", checkClick, !0),
              document.addEventListener("mousedown", checkPointerDown, !0),
              document.addEventListener("touchstart", checkPointerDown, !0),
              document.addEventListener("keydown", checkKey, !0),
              trap
            );
        }
        function removeListeners() {
          if (active && listeningFocusTrap === trap)
            return (
              document.removeEventListener("focus", checkFocus, !0),
              document.removeEventListener("click", checkClick, !0),
              document.removeEventListener("mousedown", checkPointerDown, !0),
              document.removeEventListener("touchstart", checkPointerDown, !0),
              document.removeEventListener("keydown", checkKey, !0),
              (listeningFocusTrap = null),
              trap
            );
        }
        function getNodeForOption(optionName) {
          var optionValue = config[optionName],
            node = optionValue;
          if (!optionValue) return null;
          if (
            "string" == typeof optionValue &&
            !(node = document.querySelector(optionValue))
          )
            throw new Error("`" + optionName + "` refers to no known node");
          if ("function" == typeof optionValue && !(node = optionValue()))
            throw new Error("`" + optionName + "` did not return a node");
          return node;
        }
        function firstFocusNode() {
          var node;
          if (
            !(node =
              null !== getNodeForOption("initialFocus")
                ? getNodeForOption("initialFocus")
                : container.contains(document.activeElement)
                  ? document.activeElement
                  : tabbableNodes[0] || getNodeForOption("fallbackFocus"))
          )
            throw new Error(
              "You can't have a focus-trap without at least one focusable element"
            );
          return node;
        }
        function checkPointerDown(e) {
          config.clickOutsideDeactivates &&
            !container.contains(e.target) &&
            deactivate({ returnFocus: !1 });
        }
        function checkClick(e) {
          config.clickOutsideDeactivates ||
            container.contains(e.target) ||
            (e.preventDefault(), e.stopImmediatePropagation());
        }
        function checkFocus(e) {
          container.contains(e.target) ||
            (e.preventDefault(),
            e.stopImmediatePropagation(),
            "function" == typeof e.target.blur && e.target.blur(),
            tabEvent && readjustFocus(tabEvent));
        }
        function checkKey(e) {
          ("Tab" !== e.key && 9 !== e.keyCode) || handleTab(e),
            !1 !== config.escapeDeactivates && isEscapeEvent(e) && deactivate();
        }
        function handleTab(e) {
          if (
            (updateTabbableNodes(),
            e.target.hasAttribute("tabindex") &&
              Number(e.target.getAttribute("tabindex")) < 0)
          )
            return (tabEvent = e);
          e.preventDefault();
          var currentFocusIndex = tabbableNodes.indexOf(e.target);
          return e.shiftKey
            ? tryFocus(
                e.target === firstTabbableNode ||
                -1 === tabbableNodes.indexOf(e.target)
                  ? lastTabbableNode
                  : tabbableNodes[currentFocusIndex - 1]
              )
            : e.target === lastTabbableNode
              ? tryFocus(firstTabbableNode)
              : void tryFocus(tabbableNodes[currentFocusIndex + 1]);
        }
        function updateTabbableNodes() {
          (tabbableNodes = tabbable(container)),
            (firstTabbableNode = tabbableNodes[0]),
            (lastTabbableNode = tabbableNodes[tabbableNodes.length - 1]);
        }
        function readjustFocus(e) {
          if (e.shiftKey) return tryFocus(lastTabbableNode);
          tryFocus(firstTabbableNode);
        }
        var tabbableNodes = [],
          firstTabbableNode = null,
          lastTabbableNode = null,
          nodeFocusedBeforeActivation = null,
          active = !1,
          paused = !1,
          tabEvent = null,
          container =
            "string" == typeof element
              ? document.querySelector(element)
              : element,
          config = userOptions || {};
        (config.returnFocusOnDeactivate =
          !userOptions ||
          void 0 === userOptions.returnFocusOnDeactivate ||
          userOptions.returnFocusOnDeactivate),
          (config.escapeDeactivates =
            !userOptions ||
            void 0 === userOptions.escapeDeactivates ||
            userOptions.escapeDeactivates);
        var trap = {
          activate: function(activateOptions) {
            if (!active) {
              var defaultedActivateOptions = {
                onActivate:
                  activateOptions && void 0 !== activateOptions.onActivate
                    ? activateOptions.onActivate
                    : config.onActivate
              };
              return (
                (active = !0),
                (paused = !1),
                (nodeFocusedBeforeActivation = document.activeElement),
                defaultedActivateOptions.onActivate &&
                  defaultedActivateOptions.onActivate(),
                addListeners(),
                trap
              );
            }
          },
          deactivate: deactivate,
          pause: function() {
            !paused && active && ((paused = !0), removeListeners());
          },
          unpause: function() {
            paused && active && ((paused = !1), addListeners());
          }
        };
        return trap;
      };
    },
    function(module, exports) {
      function createIsUnavailable(elementDocument) {
        function isOff(node, nodeComputedStyle) {
          if (node === elementDocument.documentElement) return !1;
          for (var i = 0, length = isOffCache.length; i < length; i++)
            if (isOffCache[i][0] === node) return isOffCache[i][1];
          var result = !1;
          return (
            "none" ===
            (nodeComputedStyle =
              nodeComputedStyle ||
              elementDocument.defaultView.getComputedStyle(node)).display
              ? (result = !0)
              : node.parentNode && (result = isOff(node.parentNode)),
            isOffCache.push([node, result]),
            result
          );
        }
        var isOffCache = [];
        return function(node) {
          if (node === elementDocument.documentElement) return !1;
          var computedStyle = elementDocument.defaultView.getComputedStyle(
            node
          );
          return (
            !!isOff(node, computedStyle) ||
            "hidden" === computedStyle.visibility
          );
        };
      }
      module.exports = function(el, options) {
        options = options || {};
        var elementDocument = el.ownerDocument || el,
          basicTabbables = [],
          orderedTabbables = [],
          isUnavailable = createIsUnavailable(elementDocument),
          candidateSelectors = [
            "input",
            "select",
            "a[href]",
            "textarea",
            "button",
            "[tabindex]"
          ],
          candidates = el.querySelectorAll(candidateSelectors.join(","));
        if (options.includeContainer) {
          var matches =
            Element.prototype.matches ||
            Element.prototype.msMatchesSelector ||
            Element.prototype.webkitMatchesSelector;
          candidateSelectors.some(function(candidateSelector) {
            return matches.call(el, candidateSelector);
          }) &&
            (candidates = Array.prototype.slice.apply(candidates)).unshift(el);
        }
        for (
          var candidate,
            candidateIndexAttr,
            candidateIndex,
            i = 0,
            l = candidates.length;
          i < l;
          i++
        )
          (candidate = candidates[i]),
            (candidateIndexAttr = parseInt(
              candidate.getAttribute("tabindex"),
              10
            )),
            (candidateIndex = isNaN(candidateIndexAttr)
              ? candidate.tabIndex
              : candidateIndexAttr) < 0 ||
              ("INPUT" === candidate.tagName && "hidden" === candidate.type) ||
              candidate.disabled ||
              isUnavailable(candidate, elementDocument) ||
              (0 === candidateIndex
                ? basicTabbables.push(candidate)
                : orderedTabbables.push({
                    index: i,
                    tabIndex: candidateIndex,
                    node: candidate
                  }));
        var tabbableNodes = orderedTabbables
          .sort(function(a, b) {
            return a.tabIndex === b.tabIndex
              ? a.index - b.index
              : a.tabIndex - b.tabIndex;
          })
          .map(function(a) {
            return a.node;
          });
        return (
          Array.prototype.push.apply(tabbableNodes, basicTabbables),
          tabbableNodes
        );
      };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__util__ = __webpack_require__(11),
        __WEBPACK_IMPORTED_MODULE_1__temporary__ = __webpack_require__(57);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCTemporaryDrawer",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__temporary__.a;
        }
      ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTemporaryDrawerFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_1__temporary__.b;
          }
        );
      var __WEBPACK_IMPORTED_MODULE_2__persistent__ = __webpack_require__(62);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCPersistentDrawer",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__persistent__.a;
        }
      ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCPersistentDrawerFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_2__persistent__.b;
          }
        ),
        __webpack_require__.d(__webpack_exports__, "util", function() {
          return __WEBPACK_IMPORTED_MODULE_0__util__;
        });
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(58),
        __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(11);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
      });
      var MDCTemporaryDrawer = (function(_WEBPACK_IMPORTED_MO21) {
        function MDCTemporaryDrawer() {
          return (
            _classCallCheck(this, MDCTemporaryDrawer),
            _possibleConstructorReturn(
              this,
              (
                MDCTemporaryDrawer.__proto__ ||
                Object.getPrototypeOf(MDCTemporaryDrawer)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCTemporaryDrawer,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCTemporaryDrawer,
            [
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this54 = this,
                    _WEBPACK_IMPORTED_MO22 =
                      __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings,
                    FOCUSABLE_ELEMENTS =
                      _WEBPACK_IMPORTED_MO22.FOCUSABLE_ELEMENTS,
                    OPACITY_VAR_NAME = _WEBPACK_IMPORTED_MO22.OPACITY_VAR_NAME;
                  return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                    addClass: function(className) {
                      return _this54.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this54.root_.classList.remove(className);
                    },
                    hasClass: function(className) {
                      return _this54.root_.classList.contains(className);
                    },
                    addBodyClass: function(className) {
                      return document.body.classList.add(className);
                    },
                    removeBodyClass: function(className) {
                      return document.body.classList.remove(className);
                    },
                    eventTargetHasClass: function(target, className) {
                      return target.classList.contains(className);
                    },
                    hasNecessaryDom: function() {
                      return Boolean(_this54.drawer);
                    },
                    registerInteractionHandler: function(evt, handler) {
                      return _this54.root_.addEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler,
                        __WEBPACK_IMPORTED_MODULE_2__util__.applyPassive()
                      );
                    },
                    deregisterInteractionHandler: function(evt, handler) {
                      return _this54.root_.removeEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler,
                        __WEBPACK_IMPORTED_MODULE_2__util__.applyPassive()
                      );
                    },
                    registerDrawerInteractionHandler: function(evt, handler) {
                      return _this54.drawer.addEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler
                      );
                    },
                    deregisterDrawerInteractionHandler: function(evt, handler) {
                      return _this54.drawer.removeEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler
                      );
                    },
                    registerTransitionEndHandler: function(handler) {
                      return _this54.drawer.addEventListener(
                        "transitionend",
                        handler
                      );
                    },
                    deregisterTransitionEndHandler: function(handler) {
                      return _this54.drawer.removeEventListener(
                        "transitionend",
                        handler
                      );
                    },
                    registerDocumentKeydownHandler: function(handler) {
                      return document.addEventListener("keydown", handler);
                    },
                    deregisterDocumentKeydownHandler: function(handler) {
                      return document.removeEventListener("keydown", handler);
                    },
                    getDrawerWidth: function() {
                      return _this54.drawer.offsetWidth;
                    },
                    setTranslateX: function(value) {
                      return _this54.drawer.style.setProperty(
                        __WEBPACK_IMPORTED_MODULE_2__util__.getTransformPropertyName(),
                        null === value ? null : "translateX(" + value + "px)"
                      );
                    },
                    updateCssVariable: function(value) {
                      __WEBPACK_IMPORTED_MODULE_2__util__.supportsCssCustomProperties() &&
                        _this54.root_.style.setProperty(
                          OPACITY_VAR_NAME,
                          value
                        );
                    },
                    getFocusableElements: function() {
                      return _this54.drawer.querySelectorAll(
                        FOCUSABLE_ELEMENTS
                      );
                    },
                    saveElementTabState: function(el) {
                      return __WEBPACK_IMPORTED_MODULE_2__util__.saveElementTabState(
                        el
                      );
                    },
                    restoreElementTabState: function(el) {
                      return __WEBPACK_IMPORTED_MODULE_2__util__.restoreElementTabState(
                        el
                      );
                    },
                    makeElementUntabbable: function(el) {
                      return el.setAttribute("tabindex", -1);
                    },
                    notifyOpen: function() {
                      return _this54.emit(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .OPEN_EVENT
                      );
                    },
                    notifyClose: function() {
                      return _this54.emit(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .CLOSE_EVENT
                      );
                    },
                    isRtl: function() {
                      return (
                        "rtl" ===
                        getComputedStyle(_this54.root_).getPropertyValue(
                          "direction"
                        )
                      );
                    },
                    isDrawer: function(el) {
                      return el === _this54.drawer;
                    }
                  });
                }
              },
              {
                key: "open",
                get: function() {
                  return this.foundation_.isOpen();
                },
                set: function(value) {
                  value ? this.foundation_.open() : this.foundation_.close();
                }
              },
              {
                key: "drawer",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                      .DRAWER_SELECTOR
                  );
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTemporaryDrawer(root);
                }
              }
            ]
          ),
          MDCTemporaryDrawer
        );
      })();
      __webpack_exports__.a = MDCTemporaryDrawer;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__slidable_index__ = __webpack_require__(
          9
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(61),
        MDCTemporaryDrawerFoundation = (function(_WEBPACK_IMPORTED_MO23) {
          function MDCTemporaryDrawerFoundation(adapter) {
            _classCallCheck(this, MDCTemporaryDrawerFoundation);
            var _this55 = _possibleConstructorReturn(
              this,
              (
                MDCTemporaryDrawerFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTemporaryDrawerFoundation)
              ).call(
                this,
                Object.assign(
                  MDCTemporaryDrawerFoundation.defaultAdapter,
                  adapter
                ),
                MDCTemporaryDrawerFoundation.cssClasses.ROOT,
                MDCTemporaryDrawerFoundation.cssClasses.ANIMATING,
                MDCTemporaryDrawerFoundation.cssClasses.OPEN
              )
            );
            return (
              (_this55.componentClickHandler_ = function(evt) {
                _this55.adapter_.eventTargetHasClass(
                  evt.target,
                  __WEBPACK_IMPORTED_MODULE_1__constants__.a.ROOT
                ) && _this55.close(!0);
              }),
              _this55
            );
          }
          return (
            _inherits(
              MDCTemporaryDrawerFoundation,
              __WEBPACK_IMPORTED_MODULE_0__slidable_index__["b"]
            ),
            _createClass(MDCTemporaryDrawerFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return Object.assign(
                    __WEBPACK_IMPORTED_MODULE_0__slidable_index__.b
                      .defaultAdapter,
                    {
                      addBodyClass: function() {},
                      removeBodyClass: function() {},
                      isDrawer: function() {
                        return !1;
                      },
                      updateCssVariable: function() {},
                      eventTargetHasClass: function() {
                        return !1;
                      }
                    }
                  );
                }
              }
            ]),
            _createClass(MDCTemporaryDrawerFoundation, [
              {
                key: "init",
                value: function() {
                  _get(
                    MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCTemporaryDrawerFoundation.prototype
                      ),
                    "init",
                    this
                  ).call(this),
                    this.adapter_.updateCssVariable(0),
                    this.adapter_.registerInteractionHandler(
                      "click",
                      this.componentClickHandler_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  _get(
                    MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCTemporaryDrawerFoundation.prototype
                      ),
                    "destroy",
                    this
                  ).call(this),
                    this.adapter_.deregisterInteractionHandler(
                      "click",
                      this.componentClickHandler_
                    ),
                    this.enableScroll_();
                }
              },
              {
                key: "open",
                value: function() {
                  this.disableScroll_(),
                    this.adapter_.updateCssVariable(""),
                    _get(
                      MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                        Object.getPrototypeOf(
                          MDCTemporaryDrawerFoundation.prototype
                        ),
                      "open",
                      this
                    ).call(this);
                }
              },
              {
                key: "close",
                value: function() {
                  this.adapter_.updateCssVariable(""),
                    _get(
                      MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                        Object.getPrototypeOf(
                          MDCTemporaryDrawerFoundation.prototype
                        ),
                      "close",
                      this
                    ).call(this);
                }
              },
              {
                key: "prepareForTouchEnd_",
                value: function() {
                  _get(
                    MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCTemporaryDrawerFoundation.prototype
                      ),
                    "prepareForTouchEnd_",
                    this
                  ).call(this),
                    this.adapter_.updateCssVariable("");
                }
              },
              {
                key: "updateDrawer_",
                value: function() {
                  _get(
                    MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCTemporaryDrawerFoundation.prototype
                      ),
                    "updateDrawer_",
                    this
                  ).call(this);
                  var newOpacity = Math.max(
                    0,
                    1 +
                      this.direction_ * (this.newPosition_ / this.drawerWidth_)
                  );
                  this.adapter_.updateCssVariable(newOpacity);
                }
              },
              {
                key: "isRootTransitioningEventTarget_",
                value: function(el) {
                  return this.adapter_.isDrawer(el);
                }
              },
              {
                key: "handleTransitionEnd_",
                value: function(evt) {
                  _get(
                    MDCTemporaryDrawerFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCTemporaryDrawerFoundation.prototype
                      ),
                    "handleTransitionEnd_",
                    this
                  ).call(this, evt),
                    this.isOpen_ || this.enableScroll_();
                }
              },
              {
                key: "disableScroll_",
                value: function() {
                  this.adapter_.addBodyClass(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.a.SCROLL_LOCK
                  );
                }
              },
              {
                key: "enableScroll_",
                value: function() {
                  this.adapter_.removeBodyClass(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.a.SCROLL_LOCK
                  );
                }
              }
            ]),
            MDCTemporaryDrawerFoundation
          );
        })();
      __webpack_exports__.a = MDCTemporaryDrawerFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_exports__.a =
        "a[href], area[href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), button:not([disabled]), iframe, object, embed, [tabindex], [contenteditable]";
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        MDCSlidableDrawerFoundation = (function(_WEBPACK_IMPORTED_MO24) {
          function MDCSlidableDrawerFoundation(
            adapter,
            rootCssClass,
            animatingCssClass,
            openCssClass
          ) {
            _classCallCheck(this, MDCSlidableDrawerFoundation);
            var _this56 = _possibleConstructorReturn(
              this,
              (
                MDCSlidableDrawerFoundation.__proto__ ||
                Object.getPrototypeOf(MDCSlidableDrawerFoundation)
              ).call(
                this,
                Object.assign(
                  MDCSlidableDrawerFoundation.defaultAdapter,
                  adapter
                )
              )
            );
            return (
              (_this56.rootCssClass_ = rootCssClass),
              (_this56.animatingCssClass_ = animatingCssClass),
              (_this56.openCssClass_ = openCssClass),
              (_this56.transitionEndHandler_ = function(evt) {
                return _this56.handleTransitionEnd_(evt);
              }),
              (_this56.inert_ = !1),
              (_this56.componentTouchStartHandler_ = function(evt) {
                return _this56.handleTouchStart_(evt);
              }),
              (_this56.componentTouchMoveHandler_ = function(evt) {
                return _this56.handleTouchMove_(evt);
              }),
              (_this56.componentTouchEndHandler_ = function(evt) {
                return _this56.handleTouchEnd_(evt);
              }),
              (_this56.documentKeydownHandler_ = function(evt) {
                ((evt.key && "Escape" === evt.key) || 27 === evt.keyCode) &&
                  _this56.close();
              }),
              _this56
            );
          }
          return (
            _inherits(
              MDCSlidableDrawerFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_index__[
                "MDCFoundation"
              ]
            ),
            _createClass(MDCSlidableDrawerFoundation, null, [
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    hasClass: function() {},
                    hasNecessaryDom: function() {
                      return !1;
                    },
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    registerDrawerInteractionHandler: function() {},
                    deregisterDrawerInteractionHandler: function() {},
                    registerTransitionEndHandler: function() {},
                    deregisterTransitionEndHandler: function() {},
                    registerDocumentKeydownHandler: function() {},
                    deregisterDocumentKeydownHandler: function() {},
                    setTranslateX: function() {},
                    getFocusableElements: function() {},
                    saveElementTabState: function() {},
                    restoreElementTabState: function() {},
                    makeElementUntabbable: function() {},
                    notifyOpen: function() {},
                    notifyClose: function() {},
                    isRtl: function() {
                      return !1;
                    },
                    getDrawerWidth: function() {
                      return 0;
                    }
                  };
                }
              }
            ]),
            _createClass(MDCSlidableDrawerFoundation, [
              {
                key: "init",
                value: function() {
                  var ROOT = this.rootCssClass_,
                    OPEN = this.openCssClass_;
                  if (!this.adapter_.hasClass(ROOT))
                    throw new Error(ROOT + " class required in root element.");
                  if (!this.adapter_.hasNecessaryDom())
                    throw new Error(
                      "Required DOM nodes missing in " + ROOT + " component."
                    );
                  this.adapter_.hasClass(OPEN)
                    ? (this.isOpen_ = !0)
                    : (this.detabinate_(), (this.isOpen_ = !1)),
                    this.adapter_.registerDrawerInteractionHandler(
                      "touchstart",
                      this.componentTouchStartHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "touchmove",
                      this.componentTouchMoveHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "touchend",
                      this.componentTouchEndHandler_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterDrawerInteractionHandler(
                    "touchstart",
                    this.componentTouchStartHandler_
                  ),
                    this.adapter_.deregisterInteractionHandler(
                      "touchmove",
                      this.componentTouchMoveHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "touchend",
                      this.componentTouchEndHandler_
                    ),
                    this.adapter_.deregisterDocumentKeydownHandler(
                      this.documentKeydownHandler_
                    );
                }
              },
              {
                key: "open",
                value: function() {
                  this.adapter_.registerTransitionEndHandler(
                    this.transitionEndHandler_
                  ),
                    this.adapter_.registerDocumentKeydownHandler(
                      this.documentKeydownHandler_
                    ),
                    this.adapter_.addClass(this.animatingCssClass_),
                    this.adapter_.addClass(this.openCssClass_),
                    this.retabinate_(),
                    this.isOpen_ || this.adapter_.notifyOpen(),
                    (this.isOpen_ = !0);
                }
              },
              {
                key: "close",
                value: function() {
                  this.adapter_.deregisterDocumentKeydownHandler(
                    this.documentKeydownHandler_
                  ),
                    this.adapter_.registerTransitionEndHandler(
                      this.transitionEndHandler_
                    ),
                    this.adapter_.addClass(this.animatingCssClass_),
                    this.adapter_.removeClass(this.openCssClass_),
                    this.detabinate_(),
                    this.isOpen_ && this.adapter_.notifyClose(),
                    (this.isOpen_ = !1);
                }
              },
              {
                key: "isOpen",
                value: function() {
                  return this.isOpen_;
                }
              },
              {
                key: "detabinate_",
                value: function() {
                  if (!this.inert_) {
                    var elements = this.adapter_.getFocusableElements();
                    if (elements)
                      for (var i = 0; i < elements.length; i++)
                        this.adapter_.saveElementTabState(elements[i]),
                          this.adapter_.makeElementUntabbable(elements[i]);
                    this.inert_ = !0;
                  }
                }
              },
              {
                key: "retabinate_",
                value: function() {
                  if (this.inert_) {
                    var elements = this.adapter_.getFocusableElements();
                    if (elements)
                      for (var i = 0; i < elements.length; i++)
                        this.adapter_.restoreElementTabState(elements[i]);
                    this.inert_ = !1;
                  }
                }
              },
              {
                key: "handleTouchStart_",
                value: function(evt) {
                  this.adapter_.hasClass(this.openCssClass_) &&
                    ((evt.pointerType && "touch" !== evt.pointerType) ||
                      ((this.direction_ = this.adapter_.isRtl() ? -1 : 1),
                      (this.drawerWidth_ = this.adapter_.getDrawerWidth()),
                      (this.startX_ = evt.touches
                        ? evt.touches[0].pageX
                        : evt.pageX),
                      (this.currentX_ = this.startX_),
                      (this.updateRaf_ = requestAnimationFrame(
                        this.updateDrawer_.bind(this)
                      ))));
                }
              },
              {
                key: "handleTouchMove_",
                value: function(evt) {
                  (evt.pointerType && "touch" !== evt.pointerType) ||
                    (this.currentX_ = evt.touches
                      ? evt.touches[0].pageX
                      : evt.pageX);
                }
              },
              {
                key: "handleTouchEnd_",
                value: function(evt) {
                  (evt.pointerType && "touch" !== evt.pointerType) ||
                    (this.prepareForTouchEnd_(),
                    Math.abs(this.newPosition_ / this.drawerWidth_) >= 0.5
                      ? this.close()
                      : this.open());
                }
              },
              {
                key: "prepareForTouchEnd_",
                value: function() {
                  cancelAnimationFrame(this.updateRaf_),
                    this.adapter_.setTranslateX(null);
                }
              },
              {
                key: "updateDrawer_",
                value: function() {
                  (this.updateRaf_ = requestAnimationFrame(
                    this.updateDrawer_.bind(this)
                  )),
                    this.adapter_.setTranslateX(this.newPosition_);
                }
              },
              {
                key: "isRootTransitioningEventTarget_",
                value: function() {
                  return !1;
                }
              },
              {
                key: "handleTransitionEnd_",
                value: function(evt) {
                  this.isRootTransitioningEventTarget_(evt.target) &&
                    (this.adapter_.removeClass(this.animatingCssClass_),
                    this.adapter_.deregisterTransitionEndHandler(
                      this.transitionEndHandler_
                    ));
                }
              },
              {
                key: "newPosition_",
                get: function() {
                  return 1 === this.direction_
                    ? Math.min(0, this.currentX_ - this.startX_)
                    : Math.max(0, this.currentX_ - this.startX_);
                }
              }
            ]),
            MDCSlidableDrawerFoundation
          );
        })();
      __webpack_exports__.a = MDCSlidableDrawerFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__slidable_index__ = __webpack_require__(
          9
        ),
        cssClasses = {
          ROOT: "mdc-drawer--temporary",
          OPEN: "mdc-drawer--open",
          ANIMATING: "mdc-drawer--animating",
          SCROLL_LOCK: "mdc-drawer-scroll-lock"
        };
      __webpack_exports__.a = cssClasses;
      var strings = {
        DRAWER_SELECTOR: ".mdc-drawer--temporary .mdc-drawer__drawer",
        OPACITY_VAR_NAME: "--mdc-temporary-drawer-opacity",
        FOCUSABLE_ELEMENTS: __WEBPACK_IMPORTED_MODULE_0__slidable_index__.a,
        OPEN_EVENT: "MDCTemporaryDrawer:open",
        CLOSE_EVENT: "MDCTemporaryDrawer:close"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(63),
        __WEBPACK_IMPORTED_MODULE_2__util__ = __webpack_require__(11);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
      });
      var MDCPersistentDrawer = (function(_WEBPACK_IMPORTED_MO25) {
        function MDCPersistentDrawer() {
          return (
            _classCallCheck(this, MDCPersistentDrawer),
            _possibleConstructorReturn(
              this,
              (
                MDCPersistentDrawer.__proto__ ||
                Object.getPrototypeOf(MDCPersistentDrawer)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCPersistentDrawer,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCPersistentDrawer,
            [
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this58 = this,
                    FOCUSABLE_ELEMENTS =
                      __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                        .FOCUSABLE_ELEMENTS;
                  return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                    addClass: function(className) {
                      return _this58.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this58.root_.classList.remove(className);
                    },
                    hasClass: function(className) {
                      return _this58.root_.classList.contains(className);
                    },
                    hasNecessaryDom: function() {
                      return Boolean(_this58.drawer);
                    },
                    registerInteractionHandler: function(evt, handler) {
                      return _this58.root_.addEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler,
                        __WEBPACK_IMPORTED_MODULE_2__util__.applyPassive()
                      );
                    },
                    deregisterInteractionHandler: function(evt, handler) {
                      return _this58.root_.removeEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler,
                        __WEBPACK_IMPORTED_MODULE_2__util__.applyPassive()
                      );
                    },
                    registerDrawerInteractionHandler: function(evt, handler) {
                      return _this58.drawer.addEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler
                      );
                    },
                    deregisterDrawerInteractionHandler: function(evt, handler) {
                      return _this58.drawer.removeEventListener(
                        __WEBPACK_IMPORTED_MODULE_2__util__.remapEvent(evt),
                        handler
                      );
                    },
                    registerTransitionEndHandler: function(handler) {
                      return _this58.root_.addEventListener(
                        "transitionend",
                        handler
                      );
                    },
                    deregisterTransitionEndHandler: function(handler) {
                      return _this58.root_.removeEventListener(
                        "transitionend",
                        handler
                      );
                    },
                    registerDocumentKeydownHandler: function(handler) {
                      return document.addEventListener("keydown", handler);
                    },
                    deregisterDocumentKeydownHandler: function(handler) {
                      return document.removeEventListener("keydown", handler);
                    },
                    getDrawerWidth: function() {
                      return _this58.drawer.offsetWidth;
                    },
                    setTranslateX: function(value) {
                      return _this58.drawer.style.setProperty(
                        __WEBPACK_IMPORTED_MODULE_2__util__.getTransformPropertyName(),
                        null === value ? null : "translateX(" + value + "px)"
                      );
                    },
                    getFocusableElements: function() {
                      return _this58.drawer.querySelectorAll(
                        FOCUSABLE_ELEMENTS
                      );
                    },
                    saveElementTabState: function(el) {
                      return __WEBPACK_IMPORTED_MODULE_2__util__.saveElementTabState(
                        el
                      );
                    },
                    restoreElementTabState: function(el) {
                      return __WEBPACK_IMPORTED_MODULE_2__util__.restoreElementTabState(
                        el
                      );
                    },
                    makeElementUntabbable: function(el) {
                      return el.setAttribute("tabindex", -1);
                    },
                    notifyOpen: function() {
                      return _this58.emit(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .OPEN_EVENT
                      );
                    },
                    notifyClose: function() {
                      return _this58.emit(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .CLOSE_EVENT
                      );
                    },
                    isRtl: function() {
                      return (
                        "rtl" ===
                        getComputedStyle(_this58.root_).getPropertyValue(
                          "direction"
                        )
                      );
                    },
                    isDrawer: function(el) {
                      return el === _this58.drawer;
                    }
                  });
                }
              },
              {
                key: "open",
                get: function() {
                  return this.foundation_.isOpen();
                },
                set: function(value) {
                  value ? this.foundation_.open() : this.foundation_.close();
                }
              },
              {
                key: "drawer",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                      .DRAWER_SELECTOR
                  );
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCPersistentDrawer(root);
                }
              }
            ]
          ),
          MDCPersistentDrawer
        );
      })();
      __webpack_exports__.a = MDCPersistentDrawer;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__slidable_index__ = __webpack_require__(
          9
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(64),
        MDCPersistentDrawerFoundation = (function(_WEBPACK_IMPORTED_MO26) {
          function MDCPersistentDrawerFoundation(adapter) {
            return (
              _classCallCheck(this, MDCPersistentDrawerFoundation),
              _possibleConstructorReturn(
                this,
                (
                  MDCPersistentDrawerFoundation.__proto__ ||
                  Object.getPrototypeOf(MDCPersistentDrawerFoundation)
                ).call(
                  this,
                  Object.assign(
                    MDCPersistentDrawerFoundation.defaultAdapter,
                    adapter
                  ),
                  MDCPersistentDrawerFoundation.cssClasses.ROOT,
                  MDCPersistentDrawerFoundation.cssClasses.ANIMATING,
                  MDCPersistentDrawerFoundation.cssClasses.OPEN
                )
              )
            );
          }
          return (
            _inherits(
              MDCPersistentDrawerFoundation,
              __WEBPACK_IMPORTED_MODULE_0__slidable_index__["b"]
            ),
            _createClass(MDCPersistentDrawerFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return Object.assign(
                    __WEBPACK_IMPORTED_MODULE_0__slidable_index__.b
                      .defaultAdapter,
                    {
                      isDrawer: function() {
                        return !1;
                      }
                    }
                  );
                }
              }
            ]),
            _createClass(MDCPersistentDrawerFoundation, [
              {
                key: "isRootTransitioningEventTarget_",
                value: function(el) {
                  return this.adapter_.isDrawer(el);
                }
              }
            ]),
            MDCPersistentDrawerFoundation
          );
        })();
      __webpack_exports__.a = MDCPersistentDrawerFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__slidable_index__ = __webpack_require__(
          9
        ),
        cssClasses = {
          ROOT: "mdc-drawer--persistent",
          OPEN: "mdc-drawer--open",
          ANIMATING: "mdc-drawer--animating"
        };
      __webpack_exports__.a = cssClasses;
      var strings = {
        DRAWER_SELECTOR: ".mdc-drawer--persistent .mdc-drawer__drawer",
        FOCUSABLE_ELEMENTS: __WEBPACK_IMPORTED_MODULE_0__slidable_index__.a,
        OPEN_EVENT: "MDCPersistentDrawer:open",
        CLOSE_EVENT: "MDCPersistentDrawer:close"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(22),
        __webpack_require__(66)),
        MDCFloatingLabelFoundation = (function(_WEBPACK_IMPORTED_MO27) {
          function MDCFloatingLabelFoundation(adapter) {
            _classCallCheck(this, MDCFloatingLabelFoundation);
            var _this60 = _possibleConstructorReturn(
              this,
              (
                MDCFloatingLabelFoundation.__proto__ ||
                Object.getPrototypeOf(MDCFloatingLabelFoundation)
              ).call(
                this,
                Object.assign(
                  MDCFloatingLabelFoundation.defaultAdapter,
                  adapter
                )
              )
            );
            return (
              (_this60.shakeAnimationEndHandler_ = function() {
                return _this60.handleShakeAnimationEnd_();
              }),
              _this60
            );
          }
          return (
            _inherits(
              MDCFloatingLabelFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCFloatingLabelFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    getWidth: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCFloatingLabelFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerInteractionHandler(
                    "animationend",
                    this.shakeAnimationEndHandler_
                  );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterInteractionHandler(
                    "animationend",
                    this.shakeAnimationEndHandler_
                  );
                }
              },
              {
                key: "getWidth",
                value: function() {
                  return this.adapter_.getWidth();
                }
              },
              {
                key: "shake",
                value: function(shouldShake) {
                  var LABEL_SHAKE =
                    MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
                  shouldShake
                    ? this.adapter_.addClass(LABEL_SHAKE)
                    : this.adapter_.removeClass(LABEL_SHAKE);
                }
              },
              {
                key: "float",
                value: function(shouldFloat) {
                  var _MDCFloatingLabelFoun =
                      MDCFloatingLabelFoundation.cssClasses,
                    LABEL_FLOAT_ABOVE = _MDCFloatingLabelFoun.LABEL_FLOAT_ABOVE,
                    LABEL_SHAKE = _MDCFloatingLabelFoun.LABEL_SHAKE;
                  shouldFloat
                    ? this.adapter_.addClass(LABEL_FLOAT_ABOVE)
                    : (this.adapter_.removeClass(LABEL_FLOAT_ABOVE),
                      this.adapter_.removeClass(LABEL_SHAKE));
                }
              },
              {
                key: "handleShakeAnimationEnd_",
                value: function() {
                  var LABEL_SHAKE =
                    MDCFloatingLabelFoundation.cssClasses.LABEL_SHAKE;
                  this.adapter_.removeClass(LABEL_SHAKE);
                }
              }
            ]),
            MDCFloatingLabelFoundation
          );
        })();
      __webpack_exports__.a = MDCFloatingLabelFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      });
      var cssClasses = {
        LABEL_FLOAT_ABOVE: "mdc-floating-label--float-above",
        LABEL_SHAKE: "mdc-floating-label--shake"
      };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCFormField", function() {
          return MDCFormField;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(68);
      __webpack_require__(4);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCFormFieldFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
        }
      );
      var MDCFormField = (function(_WEBPACK_IMPORTED_MO28) {
        function MDCFormField() {
          var _ref9;
          _classCallCheck(this, MDCFormField);
          for (
            var _len7 = arguments.length, args = Array(_len7), _key7 = 0;
            _key7 < _len7;
            _key7++
          )
            args[_key7] = arguments[_key7];
          var _this61 = _possibleConstructorReturn(
            this,
            (_ref9 =
              MDCFormField.__proto__ ||
              Object.getPrototypeOf(MDCFormField)).call.apply(
              _ref9,
              [this].concat(args)
            )
          );
          return _this61.input_, _this61;
        }
        return (
          _inherits(
            MDCFormField,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCFormField,
            [
              {
                key: "input",
                set: function(input) {
                  this.input_ = input;
                },
                get: function() {
                  return this.input_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCFormField(root);
                }
              }
            ]
          ),
          _createClass(MDCFormField, [
            {
              key: "getDefaultFoundation",
              value: function() {
                var _this62 = this;
                return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                  registerInteractionHandler: function(type, handler) {
                    return _this62.label_.addEventListener(type, handler);
                  },
                  deregisterInteractionHandler: function(type, handler) {
                    return _this62.label_.removeEventListener(type, handler);
                  },
                  activateInputRipple: function() {
                    _this62.input_ &&
                      _this62.input_.ripple &&
                      _this62.input_.ripple.activate();
                  },
                  deactivateInputRipple: function() {
                    _this62.input_ &&
                      _this62.input_.ripple &&
                      _this62.input_.ripple.deactivate();
                  }
                });
              }
            },
            {
              key: "label_",
              get: function() {
                var LABEL_SELECTOR =
                  __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                    .LABEL_SELECTOR;
                return this.root_.querySelector(LABEL_SELECTOR);
              }
            }
          ]),
          MDCFormField
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(69),
        __webpack_require__(70)),
        MDCFormFieldFoundation = (function(_WEBPACK_IMPORTED_MO29) {
          function MDCFormFieldFoundation(adapter) {
            _classCallCheck(this, MDCFormFieldFoundation);
            var _this63 = _possibleConstructorReturn(
              this,
              (
                MDCFormFieldFoundation.__proto__ ||
                Object.getPrototypeOf(MDCFormFieldFoundation)
              ).call(
                this,
                Object.assign(MDCFormFieldFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this63.clickHandler_ = function() {
                return _this63.handleClick_();
              }),
              _this63
            );
          }
          return (
            _inherits(
              MDCFormFieldFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCFormFieldFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    activateInputRipple: function() {},
                    deactivateInputRipple: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCFormFieldFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerInteractionHandler(
                    "click",
                    this.clickHandler_
                  );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterInteractionHandler(
                    "click",
                    this.clickHandler_
                  );
                }
              },
              {
                key: "handleClick_",
                value: function() {
                  var _this64 = this;
                  this.adapter_.activateInputRipple(),
                    requestAnimationFrame(function() {
                      return _this64.adapter_.deactivateInputRipple();
                    });
                }
              }
            ]),
            MDCFormFieldFoundation
          );
        })();
      __webpack_exports__.a = MDCFormFieldFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCFormFieldAdapter() {
          _classCallCheck(this, MDCFormFieldAdapter);
        }
        _createClass(MDCFormFieldAdapter, [
          {
            key: "registerInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(type, handler) {}
          },
          { key: "activateInputRipple", value: function() {} },
          { key: "deactivateInputRipple", value: function() {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return strings;
        });
      var cssClasses = { ROOT: "mdc-form-field" },
        strings = { LABEL_SELECTOR: ".mdc-form-field > label" };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(72);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCGridListFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
        }
      );
      var MDCGridList = (function(_WEBPACK_IMPORTED_MO30) {
        function MDCGridList() {
          return (
            _classCallCheck(this, MDCGridList),
            _possibleConstructorReturn(
              this,
              (
                MDCGridList.__proto__ || Object.getPrototypeOf(MDCGridList)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCGridList,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCGridList,
            [
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this66 = this;
                  return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                    getOffsetWidth: function() {
                      return _this66.root_.offsetWidth;
                    },
                    getNumberOfTiles: function() {
                      return _this66.root_.querySelectorAll(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .TILE_SELECTOR
                      ).length;
                    },
                    getOffsetWidthForTileAtIndex: function(index) {
                      return _this66.root_.querySelectorAll(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .TILE_SELECTOR
                      )[index].offsetWidth;
                    },
                    setStyleForTilesElement: function(property, value) {
                      _this66.root_.querySelector(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .TILES_SELECTOR
                      ).style[property] = value;
                    },
                    registerResizeHandler: function(handler) {
                      return window.addEventListener("resize", handler);
                    },
                    deregisterResizeHandler: function(handler) {
                      return window.removeEventListener("resize", handler);
                    }
                  });
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCGridList(root);
                }
              }
            ]
          ),
          MDCGridList
        );
      })();
      __webpack_exports__.MDCGridList = MDCGridList;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(73),
        MDCGridListFoundation = (function(_WEBPACK_IMPORTED_MO31) {
          function MDCGridListFoundation(adapter) {
            _classCallCheck(this, MDCGridListFoundation);
            var _this67 = _possibleConstructorReturn(
              this,
              (
                MDCGridListFoundation.__proto__ ||
                Object.getPrototypeOf(MDCGridListFoundation)
              ).call(
                this,
                Object.assign(MDCGridListFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this67.resizeHandler_ = function() {
                return _this67.alignCenter();
              }),
              (_this67.resizeFrame_ = 0),
              _this67
            );
          }
          return (
            _inherits(
              MDCGridListFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_index__[
                "MDCFoundation"
              ]
            ),
            _createClass(MDCGridListFoundation, null, [
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    getOffsetWidth: function() {
                      return 0;
                    },
                    getNumberOfTiles: function() {
                      return 0;
                    },
                    getOffsetWidthForTileAtIndex: function() {
                      return 0;
                    },
                    setStyleForTilesElement: function() {},
                    registerResizeHandler: function() {},
                    deregisterResizeHandler: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCGridListFoundation, [
              {
                key: "init",
                value: function() {
                  this.alignCenter(),
                    this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterResizeHandler(this.resizeHandler_);
                }
              },
              {
                key: "alignCenter",
                value: function() {
                  var _this68 = this;
                  0 !== this.resizeFrame_ &&
                    cancelAnimationFrame(this.resizeFrame_),
                    (this.resizeFrame_ = requestAnimationFrame(function() {
                      _this68.alignCenter_(), (_this68.resizeFrame_ = 0);
                    }));
                }
              },
              {
                key: "alignCenter_",
                value: function() {
                  if (0 != this.adapter_.getNumberOfTiles()) {
                    var gridWidth = this.adapter_.getOffsetWidth(),
                      itemWidth = this.adapter_.getOffsetWidthForTileAtIndex(0),
                      tilesWidth =
                        itemWidth * Math.floor(gridWidth / itemWidth);
                    this.adapter_.setStyleForTilesElement(
                      "width",
                      tilesWidth + "px"
                    );
                  }
                }
              }
            ]),
            MDCGridListFoundation
          );
        })();
      __webpack_exports__.a = MDCGridListFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var strings = {
        TILES_SELECTOR: ".mdc-grid-list__tiles",
        TILE_SELECTOR: ".mdc-grid-tile"
      };
      __webpack_exports__.a = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCIconToggle", function() {
          return MDCIconToggle;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(75),
        __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__ = __webpack_require__(
          3
        );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCIconToggleFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
        }
      );
      var MDCIconToggle = (function(_WEBPACK_IMPORTED_MO32) {
        function MDCIconToggle() {
          var _ref10;
          _classCallCheck(this, MDCIconToggle);
          for (
            var _len8 = arguments.length, args = Array(_len8), _key8 = 0;
            _key8 < _len8;
            _key8++
          )
            args[_key8] = arguments[_key8];
          var _this69 = _possibleConstructorReturn(
            this,
            (_ref10 =
              MDCIconToggle.__proto__ ||
              Object.getPrototypeOf(MDCIconToggle)).call.apply(
              _ref10,
              [this].concat(args)
            )
          );
          return (_this69.ripple_ = _this69.initRipple_()), _this69;
        }
        return (
          _inherits(
            MDCIconToggle,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(MDCIconToggle, null, [
            {
              key: "attachTo",
              value: function(root) {
                return new MDCIconToggle(root);
              }
            }
          ]),
          _createClass(MDCIconToggle, [
            {
              key: "initRipple_",
              value: function() {
                var _this70 = this,
                  adapter = Object.assign(
                    __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__.MDCRipple.createAdapter(
                      this
                    ),
                    {
                      isUnbounded: function() {
                        return !0;
                      },
                      isSurfaceActive: function() {
                        return _this70.foundation_.isKeyboardActivated();
                      }
                    }
                  ),
                  foundation = new __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__.MDCRippleFoundation(
                    adapter
                  );
                return new __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__.MDCRipple(
                  this.root_,
                  foundation
                );
              }
            },
            {
              key: "destroy",
              value: function() {
                this.ripple_.destroy(),
                  _get(
                    MDCIconToggle.prototype.__proto__ ||
                      Object.getPrototypeOf(MDCIconToggle.prototype),
                    "destroy",
                    this
                  ).call(this);
              }
            },
            {
              key: "getDefaultFoundation",
              value: function() {
                var _this71 = this;
                return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                  addClass: function(className) {
                    return _this71.iconEl_.classList.add(className);
                  },
                  removeClass: function(className) {
                    return _this71.iconEl_.classList.remove(className);
                  },
                  registerInteractionHandler: function(type, handler) {
                    return _this71.root_.addEventListener(type, handler);
                  },
                  deregisterInteractionHandler: function(type, handler) {
                    return _this71.root_.removeEventListener(type, handler);
                  },
                  setText: function(text) {
                    return (_this71.iconEl_.textContent = text);
                  },
                  getTabIndex: function() {
                    return _this71.root_.tabIndex;
                  },
                  setTabIndex: function(tabIndex) {
                    return (_this71.root_.tabIndex = tabIndex);
                  },
                  getAttr: function(name, value) {
                    return _this71.root_.getAttribute(name, value);
                  },
                  setAttr: function(name, value) {
                    return _this71.root_.setAttribute(name, value);
                  },
                  rmAttr: function(name) {
                    return _this71.root_.removeAttribute(name);
                  },
                  notifyChange: function(evtData) {
                    return _this71.emit(
                      __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                        .CHANGE_EVENT,
                      evtData
                    );
                  }
                });
              }
            },
            {
              key: "initialSyncWithDOM",
              value: function() {
                (this.on =
                  "true" ===
                  this.root_.getAttribute(
                    __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                      .ARIA_PRESSED
                  )),
                  (this.disabled =
                    "true" ===
                    this.root_.getAttribute(
                      __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                        .ARIA_DISABLED
                    ));
              }
            },
            {
              key: "refreshToggleData",
              value: function() {
                this.foundation_.refreshToggleData();
              }
            },
            {
              key: "iconEl_",
              get: function() {
                var sel = this.root_.dataset.iconInnerSelector;
                return sel ? this.root_.querySelector(sel) : this.root_;
              }
            },
            {
              key: "ripple",
              get: function() {
                return this.ripple_;
              }
            },
            {
              key: "on",
              get: function() {
                return this.foundation_.isOn();
              },
              set: function(isOn) {
                this.foundation_.toggle(isOn);
              }
            },
            {
              key: "disabled",
              get: function() {
                return this.foundation_.isDisabled();
              },
              set: function(isDisabled) {
                this.foundation_.setDisabled(isDisabled);
              }
            }
          ]),
          MDCIconToggle
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      function isSpace(keyboardKey) {
        return "Space" === keyboardKey.key || 32 === keyboardKey.keyCode;
      }
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(76),
        __webpack_require__(77)),
        MDCIconToggleFoundation = (function(_WEBPACK_IMPORTED_MO33) {
          function MDCIconToggleFoundation(adapter) {
            _classCallCheck(this, MDCIconToggleFoundation);
            var _this72 = _possibleConstructorReturn(
              this,
              (
                MDCIconToggleFoundation.__proto__ ||
                Object.getPrototypeOf(MDCIconToggleFoundation)
              ).call(
                this,
                Object.assign(MDCIconToggleFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this72.on_ = !1),
              (_this72.disabled_ = !1),
              (_this72.savedTabIndex_ = -1),
              (_this72.toggleOnData_ = null),
              (_this72.toggleOffData_ = null),
              (_this72.clickHandler_ = function() {
                return _this72.toggleFromEvt_();
              }),
              (_this72.isHandlingKeydown_ = !1),
              (_this72.keydownHandler_ = function(evt) {
                if (isSpace(evt))
                  return (
                    (_this72.isHandlingKeydown_ = !0), evt.preventDefault()
                  );
              }),
              (_this72.keyupHandler_ = function(evt) {
                isSpace(evt) &&
                  ((_this72.isHandlingKeydown_ = !1), _this72.toggleFromEvt_());
              }),
              _this72
            );
          }
          return (
            _inherits(
              MDCIconToggleFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCIconToggleFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    setText: function() {},
                    getTabIndex: function() {
                      return 0;
                    },
                    setTabIndex: function() {},
                    getAttr: function() {
                      return "";
                    },
                    setAttr: function() {},
                    rmAttr: function() {},
                    notifyChange: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCIconToggleFoundation, [
              {
                key: "init",
                value: function() {
                  this.refreshToggleData(),
                    (this.savedTabIndex_ = this.adapter_.getTabIndex()),
                    this.adapter_.registerInteractionHandler(
                      "click",
                      this.clickHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "keyup",
                      this.keyupHandler_
                    );
                }
              },
              {
                key: "refreshToggleData",
                value: function() {
                  var _MDCIconToggleFoundat = MDCIconToggleFoundation.strings,
                    DATA_TOGGLE_ON = _MDCIconToggleFoundat.DATA_TOGGLE_ON,
                    DATA_TOGGLE_OFF = _MDCIconToggleFoundat.DATA_TOGGLE_OFF;
                  (this.toggleOnData_ = this.parseJsonDataAttr_(
                    DATA_TOGGLE_ON
                  )),
                    (this.toggleOffData_ = this.parseJsonDataAttr_(
                      DATA_TOGGLE_OFF
                    ));
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterInteractionHandler(
                    "click",
                    this.clickHandler_
                  ),
                    this.adapter_.deregisterInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "keyup",
                      this.keyupHandler_
                    );
                }
              },
              {
                key: "toggleFromEvt_",
                value: function() {
                  this.toggle();
                  var isOn = this.on_;
                  this.adapter_.notifyChange({ isOn: isOn });
                }
              },
              {
                key: "isOn",
                value: function() {
                  return this.on_;
                }
              },
              {
                key: "toggle",
                value: function() {
                  var isOn =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : !this.on_;
                  this.on_ = isOn;
                  var _MDCIconToggleFoundat2 = MDCIconToggleFoundation.strings,
                    ARIA_LABEL = _MDCIconToggleFoundat2.ARIA_LABEL,
                    ARIA_PRESSED = _MDCIconToggleFoundat2.ARIA_PRESSED;
                  this.on_
                    ? this.adapter_.setAttr(ARIA_PRESSED, "true")
                    : this.adapter_.setAttr(ARIA_PRESSED, "false");
                  var classToRemove = (this.on_
                    ? this.toggleOffData_
                    : this.toggleOnData_
                  ).cssClass;
                  classToRemove && this.adapter_.removeClass(classToRemove);
                  var _ref12 = this.on_
                      ? this.toggleOnData_
                      : this.toggleOffData_,
                    content = _ref12.content,
                    label = _ref12.label,
                    cssClass = _ref12.cssClass;
                  cssClass && this.adapter_.addClass(cssClass),
                    content && this.adapter_.setText(content),
                    label && this.adapter_.setAttr(ARIA_LABEL, label);
                }
              },
              {
                key: "parseJsonDataAttr_",
                value: function(dataAttr) {
                  var val = this.adapter_.getAttr(dataAttr);
                  return val ? JSON.parse(val) : {};
                }
              },
              {
                key: "isDisabled",
                value: function() {
                  return this.disabled_;
                }
              },
              {
                key: "setDisabled",
                value: function(isDisabled) {
                  this.disabled_ = isDisabled;
                  var DISABLED = MDCIconToggleFoundation.cssClasses.DISABLED,
                    ARIA_DISABLED =
                      MDCIconToggleFoundation.strings.ARIA_DISABLED;
                  this.disabled_
                    ? ((this.savedTabIndex_ = this.adapter_.getTabIndex()),
                      this.adapter_.setTabIndex(-1),
                      this.adapter_.setAttr(ARIA_DISABLED, "true"),
                      this.adapter_.addClass(DISABLED))
                    : (this.adapter_.setTabIndex(this.savedTabIndex_),
                      this.adapter_.rmAttr(ARIA_DISABLED),
                      this.adapter_.removeClass(DISABLED));
                }
              },
              {
                key: "isKeyboardActivated",
                value: function() {
                  return this.isHandlingKeydown_;
                }
              }
            ]),
            MDCIconToggleFoundation
          );
        })(),
        IconToggleState = function IconToggleState() {
          _classCallCheck(this, IconToggleState);
        };
      IconToggleState.prototype.label,
        IconToggleState.prototype.content,
        IconToggleState.prototype.cssClass,
        (__webpack_exports__.a = MDCIconToggleFoundation);
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCIconToggleAdapter() {
          _classCallCheck(this, MDCIconToggleAdapter);
        }
        _createClass(MDCIconToggleAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          {
            key: "registerInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(type, handler) {}
          },
          { key: "setText", value: function(text) {} },
          { key: "getTabIndex", value: function() {} },
          { key: "setTabIndex", value: function(tabIndex) {} },
          { key: "getAttr", value: function(name) {} },
          { key: "setAttr", value: function(name, value) {} },
          { key: "rmAttr", value: function(name) {} },
          { key: "notifyChange", value: function(evtData) {} }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      }),
        __webpack_require__.d(__webpack_exports__, "b", function() {
          return strings;
        });
      var cssClasses = {
          ROOT: "mdc-icon-toggle",
          DISABLED: "mdc-icon-toggle--disabled"
        },
        strings = {
          DATA_TOGGLE_ON: "data-toggle-on",
          DATA_TOGGLE_OFF: "data-toggle-off",
          ARIA_PRESSED: "aria-pressed",
          ARIA_DISABLED: "aria-disabled",
          ARIA_LABEL: "aria-label",
          CHANGE_EVENT: "MDCIconToggle:change"
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(79);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCLinearProgressFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
        }
      );
      var MDCLinearProgress = (function(_WEBPACK_IMPORTED_MO34) {
        function MDCLinearProgress() {
          return (
            _classCallCheck(this, MDCLinearProgress),
            _possibleConstructorReturn(
              this,
              (
                MDCLinearProgress.__proto__ ||
                Object.getPrototypeOf(MDCLinearProgress)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCLinearProgress,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCLinearProgress,
            [
              {
                key: "open",
                value: function() {
                  this.foundation_.open();
                }
              },
              {
                key: "close",
                value: function() {
                  this.foundation_.close();
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this74 = this;
                  return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                    addClass: function(className) {
                      return _this74.root_.classList.add(className);
                    },
                    getPrimaryBar: function() {
                      return _this74.root_.querySelector(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .PRIMARY_BAR_SELECTOR
                      );
                    },
                    getBuffer: function() {
                      return _this74.root_.querySelector(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .BUFFER_SELECTOR
                      );
                    },
                    hasClass: function(className) {
                      return _this74.root_.classList.contains(className);
                    },
                    removeClass: function(className) {
                      return _this74.root_.classList.remove(className);
                    },
                    setStyle: function(el, styleProperty, value) {
                      return (el.style[styleProperty] = value);
                    }
                  });
                }
              },
              {
                key: "determinate",
                set: function(value) {
                  this.foundation_.setDeterminate(value);
                }
              },
              {
                key: "progress",
                set: function(value) {
                  this.foundation_.setProgress(value);
                }
              },
              {
                key: "buffer",
                set: function(value) {
                  this.foundation_.setBuffer(value);
                }
              },
              {
                key: "reverse",
                set: function(value) {
                  this.foundation_.setReverse(value);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCLinearProgress(root);
                }
              }
            ]
          ),
          MDCLinearProgress
        );
      })();
      __webpack_exports__.MDCLinearProgress = MDCLinearProgress;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_animation_index__ = __webpack_require__(
          5
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(80),
        MDCLinearProgressFoundation = (function(_WEBPACK_IMPORTED_MO35) {
          function MDCLinearProgressFoundation(adapter) {
            return (
              _classCallCheck(this, MDCLinearProgressFoundation),
              _possibleConstructorReturn(
                this,
                (
                  MDCLinearProgressFoundation.__proto__ ||
                  Object.getPrototypeOf(MDCLinearProgressFoundation)
                ).call(
                  this,
                  Object.assign(
                    MDCLinearProgressFoundation.defaultAdapter,
                    adapter
                  )
                )
              )
            );
          }
          return (
            _inherits(
              MDCLinearProgressFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_index__[
                "MDCFoundation"
              ]
            ),
            _createClass(MDCLinearProgressFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    getPrimaryBar: function() {},
                    getBuffer: function() {},
                    hasClass: function() {
                      return !1;
                    },
                    removeClass: function() {},
                    setStyle: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCLinearProgressFoundation, [
              {
                key: "init",
                value: function() {
                  (this.determinate_ = !this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a
                      .INDETERMINATE_CLASS
                  )),
                    (this.reverse_ = this.adapter_.hasClass(
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a.REVERSED_CLASS
                    )),
                    (this.progress_ = 0);
                }
              },
              {
                key: "setDeterminate",
                value: function(isDeterminate) {
                  (this.determinate_ = isDeterminate),
                    this.determinate_
                      ? (this.adapter_.removeClass(
                          __WEBPACK_IMPORTED_MODULE_2__constants__.a
                            .INDETERMINATE_CLASS
                        ),
                        this.setScale_(
                          this.adapter_.getPrimaryBar(),
                          this.progress_
                        ))
                      : (this.adapter_.addClass(
                          __WEBPACK_IMPORTED_MODULE_2__constants__.a
                            .INDETERMINATE_CLASS
                        ),
                        this.setScale_(this.adapter_.getPrimaryBar(), 1),
                        this.setScale_(this.adapter_.getBuffer(), 1));
                }
              },
              {
                key: "setProgress",
                value: function(value) {
                  (this.progress_ = value),
                    this.determinate_ &&
                      this.setScale_(this.adapter_.getPrimaryBar(), value);
                }
              },
              {
                key: "setBuffer",
                value: function(value) {
                  this.determinate_ &&
                    this.setScale_(this.adapter_.getBuffer(), value);
                }
              },
              {
                key: "setReverse",
                value: function(isReversed) {
                  (this.reverse_ = isReversed),
                    this.reverse_
                      ? this.adapter_.addClass(
                          __WEBPACK_IMPORTED_MODULE_2__constants__.a
                            .REVERSED_CLASS
                        )
                      : this.adapter_.removeClass(
                          __WEBPACK_IMPORTED_MODULE_2__constants__.a
                            .REVERSED_CLASS
                        );
                }
              },
              {
                key: "open",
                value: function() {
                  this.adapter_.removeClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a.CLOSED_CLASS
                  );
                }
              },
              {
                key: "close",
                value: function() {
                  this.adapter_.addClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a.CLOSED_CLASS
                  );
                }
              },
              {
                key: "setScale_",
                value: function(el, scaleValue) {
                  var _this76 = this,
                    value = "scaleX(" + scaleValue + ")";
                  __WEBPACK_IMPORTED_MODULE_1__material_animation_index__.c.forEach(
                    function(transformStyleProperty) {
                      _this76.adapter_.setStyle(
                        el,
                        transformStyleProperty,
                        value
                      );
                    }
                  );
                }
              }
            ]),
            MDCLinearProgressFoundation
          );
        })();
      __webpack_exports__.a = MDCLinearProgressFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = {
        CLOSED_CLASS: "mdc-linear-progress--closed",
        INDETERMINATE_CLASS: "mdc-linear-progress--indeterminate",
        REVERSED_CLASS: "mdc-linear-progress--reversed"
      };
      __webpack_exports__.a = cssClasses;
      var strings = {
        PRIMARY_BAR_SELECTOR: ".mdc-linear-progress__primary-bar",
        BUFFER_SELECTOR: ".mdc-linear-progress__buffer"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(23),
        __webpack_require__(82)),
        MDCLineRippleFoundation = (function(_WEBPACK_IMPORTED_MO36) {
          function MDCLineRippleFoundation() {
            var adapter =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            _classCallCheck(this, MDCLineRippleFoundation);
            var _this77 = _possibleConstructorReturn(
              this,
              (
                MDCLineRippleFoundation.__proto__ ||
                Object.getPrototypeOf(MDCLineRippleFoundation)
              ).call(
                this,
                Object.assign(MDCLineRippleFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this77.transitionEndHandler_ = function(evt) {
                return _this77.handleTransitionEnd(evt);
              }),
              _this77
            );
          }
          return (
            _inherits(
              MDCLineRippleFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCLineRippleFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    hasClass: function() {},
                    setStyle: function() {},
                    registerEventHandler: function() {},
                    deregisterEventHandler: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCLineRippleFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerEventHandler(
                    "transitionend",
                    this.transitionEndHandler_
                  );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterEventHandler(
                    "transitionend",
                    this.transitionEndHandler_
                  );
                }
              },
              {
                key: "activate",
                value: function() {
                  this.adapter_.removeClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a
                      .LINE_RIPPLE_DEACTIVATING
                  ),
                    this.adapter_.addClass(
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a
                        .LINE_RIPPLE_ACTIVE
                    );
                }
              },
              {
                key: "setRippleCenter",
                value: function(xCoordinate) {
                  this.adapter_.setStyle(
                    "transform-origin",
                    xCoordinate + "px center"
                  );
                }
              },
              {
                key: "deactivate",
                value: function() {
                  this.adapter_.addClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a
                      .LINE_RIPPLE_DEACTIVATING
                  );
                }
              },
              {
                key: "handleTransitionEnd",
                value: function(evt) {
                  var isDeactivating = this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a
                      .LINE_RIPPLE_DEACTIVATING
                  );
                  "opacity" === evt.propertyName &&
                    isDeactivating &&
                    (this.adapter_.removeClass(
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a
                        .LINE_RIPPLE_ACTIVE
                    ),
                    this.adapter_.removeClass(
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a
                        .LINE_RIPPLE_DEACTIVATING
                    ));
                }
              }
            ]),
            MDCLineRippleFoundation
          );
        })();
      __webpack_exports__.a = MDCLineRippleFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return cssClasses;
      });
      var cssClasses = {
        LINE_RIPPLE_ACTIVE: "mdc-line-ripple--active",
        LINE_RIPPLE_DEACTIVATING: "mdc-line-ripple--deactivating"
      };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCMenu", function() {
          return MDCMenu;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__util__ = __webpack_require__(84),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(85),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(24);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCMenuFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.b;
        }
      ),
        __webpack_require__.d(__webpack_exports__, "AnchorMargin", function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }),
        __webpack_require__.d(__webpack_exports__, "Corner", function() {
          return __WEBPACK_IMPORTED_MODULE_3__constants__.a;
        }),
        __webpack_require__.d(__webpack_exports__, "CornerBit", function() {
          return __WEBPACK_IMPORTED_MODULE_3__constants__.b;
        });
      var MDCMenu = (function(_WEBPACK_IMPORTED_MO37) {
        function MDCMenu() {
          var _ref13;
          _classCallCheck(this, MDCMenu);
          for (
            var _len9 = arguments.length, args = Array(_len9), _key9 = 0;
            _key9 < _len9;
            _key9++
          )
            args[_key9] = arguments[_key9];
          var _this78 = _possibleConstructorReturn(
            this,
            (_ref13 =
              MDCMenu.__proto__ || Object.getPrototypeOf(MDCMenu)).call.apply(
              _ref13,
              [this].concat(args)
            )
          );
          return _this78.previousFocus_, _this78;
        }
        return (
          _inherits(
            MDCMenu,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCMenu,
            [
              {
                key: "show",
                value: function() {
                  var _ref14$focusIndex = (arguments.length > 0 &&
                    void 0 !== arguments[0]
                      ? arguments[0]
                      : {}
                    ).focusIndex,
                    focusIndex =
                      void 0 === _ref14$focusIndex ? null : _ref14$focusIndex;
                  this.foundation_.open({ focusIndex: focusIndex });
                }
              },
              {
                key: "hide",
                value: function() {
                  this.foundation_.close();
                }
              },
              {
                key: "setAnchorCorner",
                value: function(corner) {
                  this.foundation_.setAnchorCorner(corner);
                }
              },
              {
                key: "setAnchorMargin",
                value: function(margin) {
                  this.foundation_.setAnchorMargin(margin);
                }
              },
              {
                key: "getOptionByIndex",
                value: function(index) {
                  return index < this.items.length ? this.items[index] : null;
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this79 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.b({
                    addClass: function(className) {
                      return _this79.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this79.root_.classList.remove(className);
                    },
                    hasClass: function(className) {
                      return _this79.root_.classList.contains(className);
                    },
                    hasNecessaryDom: function() {
                      return Boolean(_this79.itemsContainer_);
                    },
                    getAttributeForEventTarget: function(
                      target,
                      attributeName
                    ) {
                      return target.getAttribute(attributeName);
                    },
                    getInnerDimensions: function() {
                      var itemsContainer = _this79.itemsContainer_;
                      return {
                        width: itemsContainer.offsetWidth,
                        height: itemsContainer.offsetHeight
                      };
                    },
                    hasAnchor: function() {
                      return (
                        _this79.root_.parentElement &&
                        _this79.root_.parentElement.classList.contains(
                          "mdc-menu-anchor"
                        )
                      );
                    },
                    getAnchorDimensions: function() {
                      return _this79.root_.parentElement.getBoundingClientRect();
                    },
                    getWindowDimensions: function() {
                      return {
                        width: window.innerWidth,
                        height: window.innerHeight
                      };
                    },
                    getNumberOfItems: function() {
                      return _this79.items.length;
                    },
                    registerInteractionHandler: function(type, handler) {
                      return _this79.root_.addEventListener(type, handler);
                    },
                    deregisterInteractionHandler: function(type, handler) {
                      return _this79.root_.removeEventListener(type, handler);
                    },
                    registerBodyClickHandler: function(handler) {
                      return document.body.addEventListener("click", handler);
                    },
                    deregisterBodyClickHandler: function(handler) {
                      return document.body.removeEventListener(
                        "click",
                        handler
                      );
                    },
                    getIndexForEventTarget: function(target) {
                      return _this79.items.indexOf(target);
                    },
                    notifySelected: function(evtData) {
                      return _this79.emit(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.b.strings
                          .SELECTED_EVENT,
                        {
                          index: evtData.index,
                          item: _this79.items[evtData.index]
                        }
                      );
                    },
                    notifyCancel: function() {
                      return _this79.emit(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.b.strings
                          .CANCEL_EVENT,
                        {}
                      );
                    },
                    saveFocus: function() {
                      _this79.previousFocus_ = document.activeElement;
                    },
                    restoreFocus: function() {
                      _this79.previousFocus_ && _this79.previousFocus_.focus();
                    },
                    isFocused: function() {
                      return document.activeElement === _this79.root_;
                    },
                    focus: function() {
                      return _this79.root_.focus();
                    },
                    getFocusedItemIndex: function() {
                      return _this79.items.indexOf(document.activeElement);
                    },
                    focusItemAtIndex: function(index) {
                      return _this79.items[index].focus();
                    },
                    isRtl: function() {
                      return (
                        "rtl" ===
                        getComputedStyle(_this79.root_).getPropertyValue(
                          "direction"
                        )
                      );
                    },
                    setTransformOrigin: function(origin) {
                      _this79.root_.style[
                        Object(__WEBPACK_IMPORTED_MODULE_1__util__.a)(window) +
                          "-origin"
                      ] = origin;
                    },
                    setPosition: function(position) {
                      (_this79.root_.style.left =
                        "left" in position ? position.left : null),
                        (_this79.root_.style.right =
                          "right" in position ? position.right : null),
                        (_this79.root_.style.top =
                          "top" in position ? position.top : null),
                        (_this79.root_.style.bottom =
                          "bottom" in position ? position.bottom : null);
                    },
                    setMaxHeight: function(height) {
                      _this79.root_.style.maxHeight = height;
                    },
                    setAttrForOptionAtIndex: function(index, attr, value) {
                      return _this79.items[index].setAttribute(attr, value);
                    },
                    rmAttrForOptionAtIndex: function(index, attr) {
                      return _this79.items[index].removeAttribute(attr);
                    },
                    addClassForOptionAtIndex: function(index, className) {
                      return _this79.items[index].classList.add(className);
                    },
                    rmClassForOptionAtIndex: function(index, className) {
                      return _this79.items[index].classList.remove(className);
                    }
                  });
                }
              },
              {
                key: "open",
                get: function() {
                  return this.foundation_.isOpen();
                },
                set: function(value) {
                  value ? this.foundation_.open() : this.foundation_.close();
                }
              },
              {
                key: "itemsContainer_",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_2__foundation__.b.strings
                      .ITEMS_SELECTOR
                  );
                }
              },
              {
                key: "items",
                get: function() {
                  var itemsContainer = this.itemsContainer_;
                  return [].slice.call(
                    itemsContainer.querySelectorAll(".mdc-list-item[role]")
                  );
                }
              },
              {
                key: "selectedItemIndex",
                set: function(index) {
                  this.foundation_.setSelectedIndex(index);
                },
                get: function() {
                  return this.foundation_.getSelectedIndex();
                }
              },
              {
                key: "rememberSelection",
                set: function(rememberSelection) {
                  this.foundation_.setRememberSelection(rememberSelection);
                }
              },
              {
                key: "quickOpen",
                set: function(quickOpen) {
                  this.foundation_.setQuickOpen(quickOpen);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCMenu(root);
                }
              }
            ]
          ),
          MDCMenu
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      function getTransformPropertyName(globalObj) {
        var forceRefresh =
          arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        if (void 0 === storedTransformPropertyName_ || forceRefresh) {
          var transformPropertyName =
            "transform" in globalObj.document.createElement("div").style
              ? "transform"
              : "webkitTransform";
          storedTransformPropertyName_ = transformPropertyName;
        }
        return storedTransformPropertyName_;
      }
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return getTransformPropertyName;
      });
      var storedTransformPropertyName_ = void 0;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return MDCMenuFoundation;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return AnchorMargin;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(86),
        __webpack_require__(24)),
        AnchorMargin = void 0,
        MDCMenuFoundation = (function(_WEBPACK_IMPORTED_MO38) {
          function MDCMenuFoundation(adapter) {
            _classCallCheck(this, MDCMenuFoundation);
            var _this80 = _possibleConstructorReturn(
              this,
              (
                MDCMenuFoundation.__proto__ ||
                Object.getPrototypeOf(MDCMenuFoundation)
              ).call(
                this,
                Object.assign(MDCMenuFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this80.clickHandler_ = function(evt) {
                return _this80.handlePossibleSelected_(evt);
              }),
              (_this80.keydownHandler_ = function(evt) {
                return _this80.handleKeyboardDown_(evt);
              }),
              (_this80.keyupHandler_ = function(evt) {
                return _this80.handleKeyboardUp_(evt);
              }),
              (_this80.documentClickHandler_ = function(evt) {
                return _this80.handleDocumentClick_(evt);
              }),
              (_this80.isOpen_ = !1),
              (_this80.openAnimationEndTimerId_ = 0),
              (_this80.closeAnimationEndTimerId_ = 0),
              (_this80.selectedTriggerTimerId_ = 0),
              (_this80.animationRequestId_ = 0),
              _this80.dimensions_,
              _this80.itemHeight_,
              (_this80.anchorCorner_ =
                __WEBPACK_IMPORTED_MODULE_2__constants__.a.TOP_START),
              (_this80.anchorMargin_ = {
                top: 0,
                right: 0,
                bottom: 0,
                left: 0
              }),
              (_this80.measures_ = null),
              (_this80.selectedIndex_ = -1),
              (_this80.rememberSelection_ = !1),
              (_this80.quickOpen_ = !1),
              (_this80.keyDownWithinMenu_ = !1),
              _this80
            );
          }
          return (
            _inherits(
              MDCMenuFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCMenuFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.c;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.e;
                }
              },
              {
                key: "numbers",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.d;
                }
              },
              {
                key: "Corner",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    hasClass: function() {
                      return !1;
                    },
                    hasNecessaryDom: function() {
                      return !1;
                    },
                    getAttributeForEventTarget: function() {},
                    getInnerDimensions: function() {
                      return {};
                    },
                    hasAnchor: function() {
                      return !1;
                    },
                    getAnchorDimensions: function() {
                      return {};
                    },
                    getWindowDimensions: function() {
                      return {};
                    },
                    getNumberOfItems: function() {
                      return 0;
                    },
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    registerBodyClickHandler: function() {},
                    deregisterBodyClickHandler: function() {},
                    getIndexForEventTarget: function() {
                      return 0;
                    },
                    notifySelected: function() {},
                    notifyCancel: function() {},
                    saveFocus: function() {},
                    restoreFocus: function() {},
                    isFocused: function() {
                      return !1;
                    },
                    focus: function() {},
                    getFocusedItemIndex: function() {
                      return -1;
                    },
                    focusItemAtIndex: function() {},
                    isRtl: function() {
                      return !1;
                    },
                    setTransformOrigin: function() {},
                    setPosition: function() {},
                    setMaxHeight: function() {},
                    setAttrForOptionAtIndex: function() {},
                    rmAttrForOptionAtIndex: function() {},
                    addClassForOptionAtIndex: function() {},
                    rmClassForOptionAtIndex: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCMenuFoundation, [
              {
                key: "init",
                value: function() {
                  var _MDCMenuFoundation$cs = MDCMenuFoundation.cssClasses,
                    ROOT = _MDCMenuFoundation$cs.ROOT,
                    OPEN = _MDCMenuFoundation$cs.OPEN;
                  if (!this.adapter_.hasClass(ROOT))
                    throw new Error(ROOT + " class required in root element.");
                  if (!this.adapter_.hasNecessaryDom())
                    throw new Error(
                      "Required DOM nodes missing in " + ROOT + " component."
                    );
                  this.adapter_.hasClass(OPEN) && (this.isOpen_ = !0),
                    this.adapter_.registerInteractionHandler(
                      "click",
                      this.clickHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "keyup",
                      this.keyupHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  clearTimeout(this.selectedTriggerTimerId_),
                    clearTimeout(this.openAnimationEndTimerId_),
                    clearTimeout(this.closeAnimationEndTimerId_),
                    cancelAnimationFrame(this.animationRequestId_),
                    this.adapter_.deregisterInteractionHandler(
                      "click",
                      this.clickHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "keyup",
                      this.keyupHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    ),
                    this.adapter_.deregisterBodyClickHandler(
                      this.documentClickHandler_
                    );
                }
              },
              {
                key: "setAnchorCorner",
                value: function(corner) {
                  this.anchorCorner_ = corner;
                }
              },
              {
                key: "setAnchorMargin",
                value: function(margin) {
                  (this.anchorMargin_.top =
                    "number" == typeof margin.top ? margin.top : 0),
                    (this.anchorMargin_.right =
                      "number" == typeof margin.right ? margin.right : 0),
                    (this.anchorMargin_.bottom =
                      "number" == typeof margin.bottom ? margin.bottom : 0),
                    (this.anchorMargin_.left =
                      "number" == typeof margin.left ? margin.left : 0);
                }
              },
              {
                key: "setRememberSelection",
                value: function(rememberSelection) {
                  (this.rememberSelection_ = rememberSelection),
                    this.setSelectedIndex(-1);
                }
              },
              {
                key: "setQuickOpen",
                value: function(quickOpen) {
                  this.quickOpen_ = quickOpen;
                }
              },
              {
                key: "focusOnOpen_",
                value: function(focusIndex) {
                  if (null === focusIndex) {
                    if (this.rememberSelection_ && this.selectedIndex_ >= 0)
                      return void this.adapter_.focusItemAtIndex(
                        this.selectedIndex_
                      );
                    this.adapter_.focus(),
                      this.adapter_.isFocused() ||
                        this.adapter_.focusItemAtIndex(0);
                  } else this.adapter_.focusItemAtIndex(focusIndex);
                }
              },
              {
                key: "handleDocumentClick_",
                value: function(evt) {
                  for (
                    var el = evt.target;
                    el && el !== document.documentElement;

                  ) {
                    if (-1 !== this.adapter_.getIndexForEventTarget(el)) return;
                    el = el.parentNode;
                  }
                  this.adapter_.notifyCancel(), this.close(evt);
                }
              },
              {
                key: "handleKeyboardDown_",
                value: function(evt) {
                  if (evt.altKey || evt.ctrlKey || evt.metaKey) return !0;
                  var keyCode = evt.keyCode,
                    key = evt.key,
                    shiftKey = evt.shiftKey,
                    isTab = "Tab" === key || 9 === keyCode,
                    isArrowUp = "ArrowUp" === key || 38 === keyCode,
                    isArrowDown = "ArrowDown" === key || 40 === keyCode,
                    isSpace = "Space" === key || 32 === keyCode,
                    isEnter = "Enter" === key || 13 === keyCode;
                  this.keyDownWithinMenu_ = isEnter || isSpace;
                  var focusedItemIndex = this.adapter_.getFocusedItemIndex(),
                    lastItemIndex = this.adapter_.getNumberOfItems() - 1;
                  return shiftKey && isTab && 0 === focusedItemIndex
                    ? (this.adapter_.focusItemAtIndex(lastItemIndex),
                      evt.preventDefault(),
                      !1)
                    : !shiftKey && isTab && focusedItemIndex === lastItemIndex
                      ? (this.adapter_.focusItemAtIndex(0),
                        evt.preventDefault(),
                        !1)
                      : ((isArrowUp || isArrowDown || isSpace) &&
                          evt.preventDefault(),
                        isArrowUp
                          ? 0 === focusedItemIndex || this.adapter_.isFocused()
                            ? this.adapter_.focusItemAtIndex(lastItemIndex)
                            : this.adapter_.focusItemAtIndex(
                                focusedItemIndex - 1
                              )
                          : isArrowDown &&
                            (focusedItemIndex === lastItemIndex ||
                            this.adapter_.isFocused()
                              ? this.adapter_.focusItemAtIndex(0)
                              : this.adapter_.focusItemAtIndex(
                                  focusedItemIndex + 1
                                )),
                        !0);
                }
              },
              {
                key: "handleKeyboardUp_",
                value: function(evt) {
                  if (evt.altKey || evt.ctrlKey || evt.metaKey) return !0;
                  var keyCode = evt.keyCode,
                    key = evt.key,
                    isEnter = "Enter" === key || 13 === keyCode,
                    isSpace = "Space" === key || 32 === keyCode,
                    isEscape = "Escape" === key || 27 === keyCode;
                  return (
                    (isEnter || isSpace) &&
                      (this.keyDownWithinMenu_ &&
                        this.handlePossibleSelected_(evt),
                      (this.keyDownWithinMenu_ = !1)),
                    isEscape && (this.adapter_.notifyCancel(), this.close()),
                    !0
                  );
                }
              },
              {
                key: "handlePossibleSelected_",
                value: function(evt) {
                  var _this81 = this;
                  if (
                    "true" !==
                    this.adapter_.getAttributeForEventTarget(
                      evt.target,
                      __WEBPACK_IMPORTED_MODULE_2__constants__.e
                        .ARIA_DISABLED_ATTR
                    )
                  ) {
                    var targetIndex = this.adapter_.getIndexForEventTarget(
                      evt.target
                    );
                    targetIndex < 0 ||
                      this.selectedTriggerTimerId_ ||
                      (this.selectedTriggerTimerId_ = setTimeout(function() {
                        (_this81.selectedTriggerTimerId_ = 0),
                          _this81.close(),
                          _this81.rememberSelection_ &&
                            _this81.setSelectedIndex(targetIndex),
                          _this81.adapter_.notifySelected({
                            index: targetIndex
                          });
                      }, __WEBPACK_IMPORTED_MODULE_2__constants__
                        .d.SELECTED_TRIGGER_DELAY));
                  }
                }
              },
              {
                key: "getAutoLayoutMeasurements_",
                value: function() {
                  var anchorRect = this.adapter_.getAnchorDimensions(),
                    viewport = this.adapter_.getWindowDimensions();
                  return {
                    viewport: viewport,
                    viewportDistance: {
                      top: anchorRect.top,
                      right: viewport.width - anchorRect.right,
                      left: anchorRect.left,
                      bottom: viewport.height - anchorRect.bottom
                    },
                    anchorHeight: anchorRect.height,
                    anchorWidth: anchorRect.width,
                    menuHeight: this.dimensions_.height,
                    menuWidth: this.dimensions_.width
                  };
                }
              },
              {
                key: "getOriginCorner_",
                value: function() {
                  var corner =
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a.TOP_LEFT,
                    _measures_ = this.measures_,
                    viewportDistance = _measures_.viewportDistance,
                    anchorHeight = _measures_.anchorHeight,
                    anchorWidth = _measures_.anchorWidth,
                    menuHeight = _measures_.menuHeight,
                    menuWidth = _measures_.menuWidth,
                    isBottomAligned = Boolean(
                      this.anchorCorner_ &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                    ),
                    topOverflow =
                      menuHeight -
                      (isBottomAligned
                        ? viewportDistance.top +
                          anchorHeight +
                          this.anchorMargin_.bottom
                        : viewportDistance.top + this.anchorMargin_.top),
                    bottomOverflow =
                      menuHeight -
                      (isBottomAligned
                        ? viewportDistance.bottom - this.anchorMargin_.bottom
                        : viewportDistance.bottom +
                          anchorHeight -
                          this.anchorMargin_.top);
                  bottomOverflow > 0 &&
                    topOverflow < bottomOverflow &&
                    (corner |=
                      __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM);
                  var isRtl = this.adapter_.isRtl(),
                    isFlipRtl = Boolean(
                      this.anchorCorner_ &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.FLIP_RTL
                    ),
                    avoidHorizontalOverlap = Boolean(
                      this.anchorCorner_ &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.RIGHT
                    ),
                    isAlignedRight =
                      (avoidHorizontalOverlap && !isRtl) ||
                      (!avoidHorizontalOverlap && isFlipRtl && isRtl),
                    leftOverflow =
                      menuWidth -
                      (isAlignedRight
                        ? viewportDistance.left +
                          anchorWidth +
                          this.anchorMargin_.right
                        : viewportDistance.left + this.anchorMargin_.left),
                    rightOverflow =
                      menuWidth -
                      (isAlignedRight
                        ? viewportDistance.right - this.anchorMargin_.right
                        : viewportDistance.right +
                          anchorWidth -
                          this.anchorMargin_.left);
                  return (
                    ((leftOverflow < 0 && isAlignedRight && isRtl) ||
                      (avoidHorizontalOverlap &&
                        !isAlignedRight &&
                        leftOverflow < 0) ||
                      (rightOverflow > 0 && leftOverflow < rightOverflow)) &&
                      (corner |=
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.RIGHT),
                    corner
                  );
                }
              },
              {
                key: "getHorizontalOriginOffset_",
                value: function(corner) {
                  var anchorWidth = this.measures_.anchorWidth,
                    isRightAligned = Boolean(
                      corner & __WEBPACK_IMPORTED_MODULE_2__constants__.b.RIGHT
                    ),
                    avoidHorizontalOverlap = Boolean(
                      this.anchorCorner_ &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.RIGHT
                    );
                  return isRightAligned
                    ? avoidHorizontalOverlap
                      ? anchorWidth - this.anchorMargin_.left
                      : this.anchorMargin_.right
                    : avoidHorizontalOverlap
                      ? anchorWidth - this.anchorMargin_.right
                      : this.anchorMargin_.left;
                }
              },
              {
                key: "getVerticalOriginOffset_",
                value: function(corner) {
                  var _measures_2 = this.measures_,
                    viewport = _measures_2.viewport,
                    viewportDistance = _measures_2.viewportDistance,
                    anchorHeight = _measures_2.anchorHeight,
                    menuHeight = _measures_2.menuHeight,
                    isBottomAligned = Boolean(
                      corner & __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                    ),
                    MARGIN_TO_EDGE = MDCMenuFoundation.numbers.MARGIN_TO_EDGE,
                    avoidVerticalOverlap = Boolean(
                      this.anchorCorner_ &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                    ),
                    canOverlapVertically = !avoidVerticalOverlap,
                    y = 0;
                  return (
                    isBottomAligned
                      ? ((y = avoidVerticalOverlap
                          ? anchorHeight - this.anchorMargin_.top
                          : -this.anchorMargin_.bottom),
                        canOverlapVertically &&
                          menuHeight > viewportDistance.top + anchorHeight &&
                          (y = -(
                            Math.min(
                              menuHeight,
                              viewport.height - MARGIN_TO_EDGE
                            ) -
                            (viewportDistance.top + anchorHeight)
                          )))
                      : ((y = avoidVerticalOverlap
                          ? anchorHeight + this.anchorMargin_.bottom
                          : this.anchorMargin_.top),
                        canOverlapVertically &&
                          menuHeight > viewportDistance.bottom + anchorHeight &&
                          (y = -(
                            Math.min(
                              menuHeight,
                              viewport.height - MARGIN_TO_EDGE
                            ) -
                            (viewportDistance.bottom + anchorHeight)
                          ))),
                    y
                  );
                }
              },
              {
                key: "getMenuMaxHeight_",
                value: function(corner) {
                  var maxHeight = 0,
                    viewportDistance = this.measures_.viewportDistance,
                    isBottomAligned = Boolean(
                      corner & __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                    );
                  return (
                    this.anchorCorner_ &
                      __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM &&
                      (maxHeight = isBottomAligned
                        ? viewportDistance.top + this.anchorMargin_.top
                        : viewportDistance.bottom - this.anchorMargin_.bottom),
                    maxHeight
                  );
                }
              },
              {
                key: "autoPosition_",
                value: function() {
                  var _position;
                  if (this.adapter_.hasAnchor()) {
                    this.measures_ = this.getAutoLayoutMeasurements_();
                    var corner = this.getOriginCorner_(),
                      maxMenuHeight = this.getMenuMaxHeight_(corner),
                      verticalAlignment =
                        corner &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                          ? "bottom"
                          : "top",
                      horizontalAlignment =
                        corner &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.RIGHT
                          ? "right"
                          : "left",
                      horizontalOffset = this.getHorizontalOriginOffset_(
                        corner
                      ),
                      verticalOffset = this.getVerticalOriginOffset_(corner),
                      position = ((_position = {}),
                      _defineProperty(
                        _position,
                        horizontalAlignment,
                        horizontalOffset ? horizontalOffset + "px" : "0"
                      ),
                      _defineProperty(
                        _position,
                        verticalAlignment,
                        verticalOffset ? verticalOffset + "px" : "0"
                      ),
                      _position),
                      _measures_3 = this.measures_,
                      anchorWidth = _measures_3.anchorWidth,
                      menuHeight = _measures_3.menuHeight;
                    if (
                      (anchorWidth / _measures_3.menuWidth >
                        __WEBPACK_IMPORTED_MODULE_2__constants__.d
                          .ANCHOR_TO_MENU_WIDTH_RATIO &&
                        (horizontalAlignment = "center"),
                      !(
                        this.anchorCorner_ &
                        __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                      ) &&
                        Math.abs(verticalOffset / menuHeight) >
                          __WEBPACK_IMPORTED_MODULE_2__constants__.d
                            .OFFSET_TO_MENU_HEIGHT_RATIO)
                    ) {
                      var verticalOffsetPercent =
                          100 * Math.abs(verticalOffset / menuHeight),
                        originPercent =
                          corner &
                          __WEBPACK_IMPORTED_MODULE_2__constants__.b.BOTTOM
                            ? 100 - verticalOffsetPercent
                            : verticalOffsetPercent;
                      verticalAlignment =
                        Math.round(100 * originPercent) / 100 + "%";
                    }
                    this.adapter_.setTransformOrigin(
                      horizontalAlignment + " " + verticalAlignment
                    ),
                      this.adapter_.setPosition(position),
                      this.adapter_.setMaxHeight(
                        maxMenuHeight ? maxMenuHeight + "px" : ""
                      ),
                      (this.measures_ = null);
                  }
                }
              },
              {
                key: "open",
                value: function() {
                  var _this82 = this,
                    _ref15$focusIndex = (arguments.length > 0 &&
                    void 0 !== arguments[0]
                      ? arguments[0]
                      : {}
                    ).focusIndex,
                    focusIndex =
                      void 0 === _ref15$focusIndex ? null : _ref15$focusIndex;
                  this.adapter_.saveFocus(),
                    this.quickOpen_ ||
                      this.adapter_.addClass(
                        MDCMenuFoundation.cssClasses.ANIMATING_OPEN
                      ),
                    (this.animationRequestId_ = requestAnimationFrame(
                      function() {
                        (_this82.dimensions_ = _this82.adapter_.getInnerDimensions()),
                          _this82.autoPosition_(),
                          _this82.adapter_.addClass(
                            MDCMenuFoundation.cssClasses.OPEN
                          ),
                          _this82.focusOnOpen_(focusIndex),
                          _this82.adapter_.registerBodyClickHandler(
                            _this82.documentClickHandler_
                          ),
                          _this82.quickOpen_ ||
                            (_this82.openAnimationEndTimerId_ = setTimeout(
                              function() {
                                (_this82.openAnimationEndTimerId_ = 0),
                                  _this82.adapter_.removeClass(
                                    MDCMenuFoundation.cssClasses.ANIMATING_OPEN
                                  );
                              },
                              __WEBPACK_IMPORTED_MODULE_2__constants__.d
                                .TRANSITION_OPEN_DURATION
                            ));
                      }
                    )),
                    (this.isOpen_ = !0);
                }
              },
              {
                key: "close",
                value: function() {
                  var _this83 = this,
                    evt =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : null;
                  (!!evt &&
                    "true" ===
                      this.adapter_.getAttributeForEventTarget(
                        evt.target,
                        __WEBPACK_IMPORTED_MODULE_2__constants__.e
                          .ARIA_DISABLED_ATTR
                      )) ||
                    (this.adapter_.deregisterBodyClickHandler(
                      this.documentClickHandler_
                    ),
                    this.quickOpen_ ||
                      this.adapter_.addClass(
                        MDCMenuFoundation.cssClasses.ANIMATING_CLOSED
                      ),
                    requestAnimationFrame(function() {
                      _this83.adapter_.removeClass(
                        MDCMenuFoundation.cssClasses.OPEN
                      ),
                        _this83.quickOpen_ ||
                          (_this83.closeAnimationEndTimerId_ = setTimeout(
                            function() {
                              (_this83.closeAnimationEndTimerId_ = 0),
                                _this83.adapter_.removeClass(
                                  MDCMenuFoundation.cssClasses.ANIMATING_CLOSED
                                );
                            },
                            __WEBPACK_IMPORTED_MODULE_2__constants__.d
                              .TRANSITION_CLOSE_DURATION
                          ));
                    }),
                    (this.isOpen_ = !1),
                    this.adapter_.restoreFocus());
                }
              },
              {
                key: "isOpen",
                value: function() {
                  return this.isOpen_;
                }
              },
              {
                key: "getSelectedIndex",
                value: function() {
                  return this.selectedIndex_;
                }
              },
              {
                key: "setSelectedIndex",
                value: function(index) {
                  if (index !== this.selectedIndex_) {
                    var prevSelectedIndex = this.selectedIndex_;
                    prevSelectedIndex >= 0 &&
                      (this.adapter_.rmAttrForOptionAtIndex(
                        prevSelectedIndex,
                        "aria-selected"
                      ),
                      this.adapter_.rmClassForOptionAtIndex(
                        prevSelectedIndex,
                        __WEBPACK_IMPORTED_MODULE_2__constants__.c
                          .SELECTED_LIST_ITEM
                      )),
                      (this.selectedIndex_ =
                        index >= 0 && index < this.adapter_.getNumberOfItems()
                          ? index
                          : -1),
                      this.selectedIndex_ >= 0 &&
                        (this.adapter_.setAttrForOptionAtIndex(
                          this.selectedIndex_,
                          "aria-selected",
                          "true"
                        ),
                        this.adapter_.addClassForOptionAtIndex(
                          this.selectedIndex_,
                          __WEBPACK_IMPORTED_MODULE_2__constants__.c
                            .SELECTED_LIST_ITEM
                        ));
                  }
                }
              }
            ]),
            MDCMenuFoundation
          );
        })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      !(function() {
        function MDCMenuAdapter() {
          _classCallCheck(this, MDCMenuAdapter);
        }
        _createClass(MDCMenuAdapter, [
          { key: "addClass", value: function(className) {} },
          { key: "removeClass", value: function(className) {} },
          { key: "hasClass", value: function(className) {} },
          { key: "hasNecessaryDom", value: function() {} },
          {
            key: "getAttributeForEventTarget",
            value: function(target, attributeName) {}
          },
          { key: "getInnerDimensions", value: function() {} },
          { key: "hasAnchor", value: function() {} },
          { key: "getAnchorDimensions", value: function() {} },
          { key: "getWindowDimensions", value: function() {} },
          { key: "getNumberOfItems", value: function() {} },
          {
            key: "registerInteractionHandler",
            value: function(type, handler) {}
          },
          {
            key: "deregisterInteractionHandler",
            value: function(type, handler) {}
          },
          { key: "registerBodyClickHandler", value: function(handler) {} },
          { key: "deregisterBodyClickHandler", value: function(handler) {} },
          { key: "getIndexForEventTarget", value: function(target) {} },
          { key: "notifySelected", value: function(evtData) {} },
          { key: "notifyCancel", value: function() {} },
          { key: "saveFocus", value: function() {} },
          { key: "restoreFocus", value: function() {} },
          { key: "isFocused", value: function() {} },
          { key: "focus", value: function() {} },
          { key: "getFocusedItemIndex", value: function() {} },
          { key: "focusItemAtIndex", value: function(index) {} },
          { key: "isRtl", value: function() {} },
          { key: "setTransformOrigin", value: function(origin) {} },
          { key: "setPosition", value: function(position) {} },
          { key: "setMaxHeight", value: function(height) {} },
          {
            key: "setAttrForOptionAtIndex",
            value: function(index, attr, value) {}
          },
          { key: "rmAttrForOptionAtIndex", value: function(index, attr) {} },
          {
            key: "addClassForOptionAtIndex",
            value: function(index, className) {}
          },
          {
            key: "rmClassForOptionAtIndex",
            value: function(index, className) {}
          }
        ]);
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = (__webpack_require__(26),
        __webpack_require__(27)),
        MDCNotchedOutlineFoundation = (function(_WEBPACK_IMPORTED_MO39) {
          function MDCNotchedOutlineFoundation(adapter) {
            return (
              _classCallCheck(this, MDCNotchedOutlineFoundation),
              _possibleConstructorReturn(
                this,
                (
                  MDCNotchedOutlineFoundation.__proto__ ||
                  Object.getPrototypeOf(MDCNotchedOutlineFoundation)
                ).call(
                  this,
                  Object.assign(
                    MDCNotchedOutlineFoundation.defaultAdapter,
                    adapter
                  )
                )
              )
            );
          }
          return (
            _inherits(
              MDCNotchedOutlineFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCNotchedOutlineFoundation, null, [
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    getWidth: function() {},
                    getHeight: function() {},
                    addClass: function() {},
                    removeClass: function() {},
                    setOutlinePathAttr: function() {},
                    getIdleOutlineStyleValue: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCNotchedOutlineFoundation, [
              {
                key: "notch",
                value: function(notchWidth) {
                  var isRtl =
                      arguments.length > 1 &&
                      void 0 !== arguments[1] &&
                      arguments[1],
                    OUTLINE_NOTCHED =
                      MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
                  this.adapter_.addClass(OUTLINE_NOTCHED),
                    this.updateSvgPath_(notchWidth, isRtl);
                }
              },
              {
                key: "closeNotch",
                value: function() {
                  var OUTLINE_NOTCHED =
                    MDCNotchedOutlineFoundation.cssClasses.OUTLINE_NOTCHED;
                  this.adapter_.removeClass(OUTLINE_NOTCHED);
                }
              },
              {
                key: "updateSvgPath_",
                value: function(notchWidth, isRtl) {
                  var radiusStyleValue =
                      this.adapter_.getIdleOutlineStyleValue("border-radius") ||
                      this.adapter_.getIdleOutlineStyleValue(
                        "border-top-left-radius"
                      ),
                    radius = parseFloat(radiusStyleValue),
                    width = this.adapter_.getWidth(),
                    height = this.adapter_.getHeight(),
                    cornerWidth = radius + 1.2,
                    leadingStrokeLength = Math.abs(11 - cornerWidth),
                    paddedNotchWidth = notchWidth + 8,
                    pathMiddle =
                      "a" +
                      radius +
                      "," +
                      radius +
                      " 0 0 1 " +
                      radius +
                      "," +
                      radius +
                      "v" +
                      (height - 2 * cornerWidth) +
                      "a" +
                      radius +
                      "," +
                      radius +
                      " 0 0 1 " +
                      -radius +
                      "," +
                      radius +
                      "h" +
                      (2 * cornerWidth - width) +
                      "a" +
                      radius +
                      "," +
                      radius +
                      " 0 0 1 " +
                      -radius +
                      "," +
                      -radius +
                      "v" +
                      (2 * cornerWidth - height) +
                      "a" +
                      radius +
                      "," +
                      radius +
                      " 0 0 1 " +
                      radius +
                      "," +
                      -radius,
                    path = void 0;
                  (path = isRtl
                    ? "M" +
                      (width - cornerWidth - leadingStrokeLength) +
                      ",1h" +
                      leadingStrokeLength +
                      pathMiddle +
                      "h" +
                      (width -
                        2 * cornerWidth -
                        paddedNotchWidth -
                        leadingStrokeLength)
                    : "M" +
                      (cornerWidth + leadingStrokeLength + paddedNotchWidth) +
                      ",1h" +
                      (width -
                        2 * cornerWidth -
                        paddedNotchWidth -
                        leadingStrokeLength) +
                      pathMiddle +
                      "h" +
                      leadingStrokeLength),
                    this.adapter_.setOutlinePathAttr(path);
                }
              }
            ]),
            MDCNotchedOutlineFoundation
          );
        })();
      __webpack_exports__.a = MDCNotchedOutlineFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCRadio", function() {
          return MDCRadio;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(4),
        __webpack_require__(89)),
        __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__ = __webpack_require__(
          3
        );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCRadioFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      );
      var MDCRadio = (function(_WEBPACK_IMPORTED_MO40) {
        function MDCRadio() {
          var _ref16;
          _classCallCheck(this, MDCRadio);
          for (
            var _len10 = arguments.length, args = Array(_len10), _key10 = 0;
            _key10 < _len10;
            _key10++
          )
            args[_key10] = arguments[_key10];
          var _this85 = _possibleConstructorReturn(
            this,
            (_ref16 =
              MDCRadio.__proto__ || Object.getPrototypeOf(MDCRadio)).call.apply(
              _ref16,
              [this].concat(args)
            )
          );
          return (_this85.ripple_ = _this85.initRipple_()), _this85;
        }
        return (
          _inherits(
            MDCRadio,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCRadio,
            [
              {
                key: "checked",
                get: function() {
                  return this.foundation_.isChecked();
                },
                set: function(checked) {
                  this.foundation_.setChecked(checked);
                }
              },
              {
                key: "disabled",
                get: function() {
                  return this.foundation_.isDisabled();
                },
                set: function(disabled) {
                  this.foundation_.setDisabled(disabled);
                }
              },
              {
                key: "value",
                get: function() {
                  return this.foundation_.getValue();
                },
                set: function(value) {
                  this.foundation_.setValue(value);
                }
              },
              {
                key: "ripple",
                get: function() {
                  return this.ripple_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCRadio(root);
                }
              }
            ]
          ),
          _createClass(MDCRadio, [
            {
              key: "initRipple_",
              value: function() {
                var _this86 = this,
                  adapter = Object.assign(
                    __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__.MDCRipple.createAdapter(
                      this
                    ),
                    {
                      isUnbounded: function() {
                        return !0;
                      },
                      isSurfaceActive: function() {
                        return !1;
                      },
                      registerInteractionHandler: function(type, handler) {
                        return _this86.nativeControl_.addEventListener(
                          type,
                          handler
                        );
                      },
                      deregisterInteractionHandler: function(type, handler) {
                        return _this86.nativeControl_.removeEventListener(
                          type,
                          handler
                        );
                      }
                    }
                  ),
                  foundation = new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__.MDCRippleFoundation(
                    adapter
                  );
                return new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__.MDCRipple(
                  this.root_,
                  foundation
                );
              }
            },
            {
              key: "destroy",
              value: function() {
                this.ripple_.destroy(),
                  _get(
                    MDCRadio.prototype.__proto__ ||
                      Object.getPrototypeOf(MDCRadio.prototype),
                    "destroy",
                    this
                  ).call(this);
              }
            },
            {
              key: "getDefaultFoundation",
              value: function() {
                var _this87 = this;
                return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a({
                  addClass: function(className) {
                    return _this87.root_.classList.add(className);
                  },
                  removeClass: function(className) {
                    return _this87.root_.classList.remove(className);
                  },
                  getNativeControl: function() {
                    return _this87.root_.querySelector(
                      __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                        .NATIVE_CONTROL_SELECTOR
                    );
                  }
                });
              }
            },
            {
              key: "nativeControl_",
              get: function() {
                var NATIVE_CONTROL_SELECTOR =
                  __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                    .NATIVE_CONTROL_SELECTOR;
                return this.root_.querySelector(NATIVE_CONTROL_SELECTOR);
              }
            }
          ]),
          MDCRadio
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = (__webpack_require__(4),
        __webpack_require__(90),
        __webpack_require__(91)),
        MDCRadioFoundation = (function(_WEBPACK_IMPORTED_MO41) {
          function MDCRadioFoundation() {
            return (
              _classCallCheck(this, MDCRadioFoundation),
              _possibleConstructorReturn(
                this,
                (
                  MDCRadioFoundation.__proto__ ||
                  Object.getPrototypeOf(MDCRadioFoundation)
                ).apply(this, arguments)
              )
            );
          }
          return (
            _inherits(
              MDCRadioFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(
              MDCRadioFoundation,
              [
                {
                  key: "isChecked",
                  value: function() {
                    return this.getNativeControl_().checked;
                  }
                },
                {
                  key: "setChecked",
                  value: function(checked) {
                    this.getNativeControl_().checked = checked;
                  }
                },
                {
                  key: "isDisabled",
                  value: function() {
                    return this.getNativeControl_().disabled;
                  }
                },
                {
                  key: "setDisabled",
                  value: function(disabled) {
                    var DISABLED = MDCRadioFoundation.cssClasses.DISABLED;
                    (this.getNativeControl_().disabled = disabled),
                      disabled
                        ? this.adapter_.addClass(DISABLED)
                        : this.adapter_.removeClass(DISABLED);
                  }
                },
                {
                  key: "getValue",
                  value: function() {
                    return this.getNativeControl_().value;
                  }
                },
                {
                  key: "setValue",
                  value: function(value) {
                    this.getNativeControl_().value = value;
                  }
                },
                {
                  key: "getNativeControl_",
                  value: function() {
                    return (
                      this.adapter_.getNativeControl() || {
                        checked: !1,
                        disabled: !1,
                        value: null
                      }
                    );
                  }
                }
              ],
              [
                {
                  key: "cssClasses",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_3__constants__.a;
                  }
                },
                {
                  key: "strings",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_3__constants__.b;
                  }
                },
                {
                  key: "defaultAdapter",
                  get: function() {
                    return {
                      addClass: function() {},
                      removeClass: function() {},
                      getNativeControl: function() {}
                    };
                  }
                }
              ]
            ),
            MDCRadioFoundation
          );
        })();
      __webpack_exports__.a = MDCRadioFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__(4),
        (function() {
          function MDCRadioAdapter() {
            _classCallCheck(this, MDCRadioAdapter);
          }
          _createClass(MDCRadioAdapter, [
            { key: "addClass", value: function(className) {} },
            { key: "removeClass", value: function(className) {} },
            { key: "getNativeControl", value: function() {} }
          ]);
        })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return strings;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return cssClasses;
        });
      var strings = { NATIVE_CONTROL_SELECTOR: ".mdc-radio__native-control" },
        cssClasses = { ROOT: "mdc-radio", DISABLED: "mdc-radio--disabled" };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_floating_label_index__ = __webpack_require__(
          12
        ),
        __WEBPACK_IMPORTED_MODULE_2__material_line_ripple_index__ = __webpack_require__(
          13
        ),
        __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_4__foundation__ = __webpack_require__(93),
        __WEBPACK_IMPORTED_MODULE_5__constants__ = __webpack_require__(28);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCSelectFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_4__foundation__.a;
        }
      );
      var MDCSelect = (function(_WEBPACK_IMPORTED_MO42) {
        function MDCSelect() {
          return (
            _classCallCheck(this, MDCSelect),
            _possibleConstructorReturn(
              this,
              (MDCSelect.__proto__ || Object.getPrototypeOf(MDCSelect)).apply(
                this,
                arguments
              )
            )
          );
        }
        return (
          _inherits(
            MDCSelect,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCSelect,
            [
              {
                key: "initialize",
                value: function() {
                  var labelFactory =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_1__material_floating_label_index__.MDCFloatingLabel(
                              el
                            );
                          },
                    lineRippleFactory =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_2__material_line_ripple_index__.MDCLineRipple(
                              el
                            );
                          };
                  this.nativeControl_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_5__constants__.b
                      .NATIVE_CONTROL_SELECTOR
                  );
                  var labelElement = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_5__constants__.b.LABEL_SELECTOR
                  );
                  labelElement && (this.label_ = labelFactory(labelElement));
                  var lineRippleElement = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_5__constants__.b
                      .LINE_RIPPLE_SELECTOR
                  );
                  lineRippleElement &&
                    (this.lineRipple_ = lineRippleFactory(lineRippleElement)),
                    this.root_.classList.contains(
                      __WEBPACK_IMPORTED_MODULE_5__constants__.a.BOX
                    ) && (this.ripple = this.initRipple_());
                }
              },
              {
                key: "initRipple_",
                value: function() {
                  var _this90 = this,
                    adapter = Object.assign(
                      __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__.MDCRipple.createAdapter(
                        this
                      ),
                      {
                        registerInteractionHandler: function(type, handler) {
                          return _this90.nativeControl_.addEventListener(
                            type,
                            handler
                          );
                        },
                        deregisterInteractionHandler: function(type, handler) {
                          return _this90.nativeControl_.removeEventListener(
                            type,
                            handler
                          );
                        }
                      }
                    ),
                    foundation = new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__.MDCRippleFoundation(
                      adapter
                    );
                  return new __WEBPACK_IMPORTED_MODULE_3__material_ripple_index__.MDCRipple(
                    this.root_,
                    foundation
                  );
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this91 = this;
                  return new __WEBPACK_IMPORTED_MODULE_4__foundation__.a({
                    addClass: function(className) {
                      return _this91.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this91.root_.classList.remove(className);
                    },
                    floatLabel: function(value) {
                      _this91.label_ && _this91.label_.float(value);
                    },
                    activateBottomLine: function() {
                      _this91.lineRipple_ && _this91.lineRipple_.activate();
                    },
                    deactivateBottomLine: function() {
                      _this91.lineRipple_ && _this91.lineRipple_.deactivate();
                    },
                    setDisabled: function(disabled) {
                      return (_this91.nativeControl_.disabled = disabled);
                    },
                    registerInteractionHandler: function(type, handler) {
                      return _this91.nativeControl_.addEventListener(
                        type,
                        handler
                      );
                    },
                    deregisterInteractionHandler: function(type, handler) {
                      return _this91.nativeControl_.removeEventListener(
                        type,
                        handler
                      );
                    },
                    getSelectedIndex: function() {
                      return _this91.nativeControl_.selectedIndex;
                    },
                    setSelectedIndex: function(index) {
                      return (_this91.nativeControl_.selectedIndex = index);
                    },
                    getValue: function() {
                      return _this91.nativeControl_.value;
                    },
                    setValue: function(value) {
                      return (_this91.nativeControl_.value = value);
                    }
                  });
                }
              },
              {
                key: "initialSyncWithDOM",
                value: function() {
                  (this.selectedIndex = this.nativeControl_.selectedIndex),
                    this.nativeControl_.disabled && (this.disabled = !0);
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.ripple && this.ripple.destroy(),
                    _get(
                      MDCSelect.prototype.__proto__ ||
                        Object.getPrototypeOf(MDCSelect.prototype),
                      "destroy",
                      this
                    ).call(this);
                }
              },
              {
                key: "value",
                get: function() {
                  return this.nativeControl_.value;
                },
                set: function(value) {
                  this.foundation_.setValue(value);
                }
              },
              {
                key: "selectedIndex",
                get: function() {
                  return this.nativeControl_.selectedIndex;
                },
                set: function(selectedIndex) {
                  this.foundation_.setSelectedIndex(selectedIndex);
                }
              },
              {
                key: "disabled",
                get: function() {
                  return this.nativeControl_.disabled;
                },
                set: function(disabled) {
                  this.foundation_.setDisabled(disabled);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCSelect(root);
                }
              }
            ]
          ),
          MDCSelect
        );
      })();
      __webpack_exports__.MDCSelect = MDCSelect;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(28),
        MDCSelectFoundation = (function(_WEBPACK_IMPORTED_MO43) {
          function MDCSelectFoundation(adapter) {
            _classCallCheck(this, MDCSelectFoundation);
            var _this92 = _possibleConstructorReturn(
              this,
              (
                MDCSelectFoundation.__proto__ ||
                Object.getPrototypeOf(MDCSelectFoundation)
              ).call(
                this,
                Object.assign(MDCSelectFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this92.focusHandler_ = function(evt) {
                return _this92.handleFocus_(evt);
              }),
              (_this92.blurHandler_ = function(evt) {
                return _this92.handleBlur_(evt);
              }),
              (_this92.selectionHandler_ = function(evt) {
                return _this92.handleSelect_(evt);
              }),
              _this92
            );
          }
          return (
            _inherits(
              MDCSelectFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_index__[
                "MDCFoundation"
              ]
            ),
            _createClass(MDCSelectFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    floatLabel: function() {},
                    activateBottomLine: function() {},
                    deactivateBottomLine: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    getSelectedIndex: function() {
                      return -1;
                    },
                    setSelectedIndex: function() {},
                    setDisabled: function() {},
                    getValue: function() {
                      return "";
                    },
                    setValue: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCSelectFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerInteractionHandler(
                    "focus",
                    this.focusHandler_
                  ),
                    this.adapter_.registerInteractionHandler(
                      "blur",
                      this.blurHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "change",
                      this.selectionHandler_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterInteractionHandler(
                    "focus",
                    this.focusHandler_
                  ),
                    this.adapter_.deregisterInteractionHandler(
                      "blur",
                      this.blurHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "change",
                      this.selectionHandler_
                    );
                }
              },
              {
                key: "setSelectedIndex",
                value: function(index) {
                  this.adapter_.setSelectedIndex(index),
                    this.floatLabelWithValue_();
                }
              },
              {
                key: "setValue",
                value: function(value) {
                  this.adapter_.setValue(value),
                    this.setSelectedIndex(this.adapter_.getSelectedIndex());
                }
              },
              {
                key: "setDisabled",
                value: function(disabled) {
                  var DISABLED = MDCSelectFoundation.cssClasses.DISABLED;
                  this.adapter_.setDisabled(disabled),
                    disabled
                      ? this.adapter_.addClass(DISABLED)
                      : this.adapter_.removeClass(DISABLED);
                }
              },
              {
                key: "floatLabelWithValue_",
                value: function() {
                  var optionHasValue = this.adapter_.getValue().length > 0;
                  this.adapter_.floatLabel(optionHasValue);
                }
              },
              {
                key: "handleFocus_",
                value: function() {
                  this.adapter_.floatLabel(!0),
                    this.adapter_.activateBottomLine();
                }
              },
              {
                key: "handleBlur_",
                value: function() {
                  this.floatLabelWithValue_(),
                    this.adapter_.deactivateBottomLine();
                }
              },
              {
                key: "handleSelect_",
                value: function() {
                  this.setSelectedIndex(this.adapter_.getSelectedIndex());
                }
              }
            ]),
            MDCSelectFoundation
          );
        })();
      __webpack_exports__.a = MDCSelectFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCSlider", function() {
          return MDCSlider;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(29),
        __WEBPACK_IMPORTED_MODULE_3__foundation__ = (__webpack_require__(30),
        __webpack_require__(95));
      __webpack_require__.d(
        __webpack_exports__,
        "MDCSliderFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_3__foundation__.a;
        }
      );
      var MDCSlider = (function(_WEBPACK_IMPORTED_MO44) {
        function MDCSlider() {
          var _ref17;
          _classCallCheck(this, MDCSlider);
          for (
            var _len11 = arguments.length, args = Array(_len11), _key11 = 0;
            _key11 < _len11;
            _key11++
          )
            args[_key11] = arguments[_key11];
          var _this93 = _possibleConstructorReturn(
            this,
            (_ref17 =
              MDCSlider.__proto__ ||
              Object.getPrototypeOf(MDCSlider)).call.apply(
              _ref17,
              [this].concat(args)
            )
          );
          return (
            _this93.thumbContainer_,
            _this93.track_,
            _this93.pinValueMarker_,
            _this93.trackMarkerContainer_,
            _this93
          );
        }
        return (
          _inherits(
            MDCSlider,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(MDCSlider, null, [
            {
              key: "attachTo",
              value: function(root) {
                return new MDCSlider(root);
              }
            }
          ]),
          _createClass(MDCSlider, [
            {
              key: "initialize",
              value: function() {
                (this.thumbContainer_ = this.root_.querySelector(
                  __WEBPACK_IMPORTED_MODULE_1__constants__.c
                    .THUMB_CONTAINER_SELECTOR
                )),
                  (this.track_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.c.TRACK_SELECTOR
                  )),
                  (this.pinValueMarker_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.c
                      .PIN_VALUE_MARKER_SELECTOR
                  )),
                  (this.trackMarkerContainer_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.c
                      .TRACK_MARKER_CONTAINER_SELECTOR
                  ));
              }
            },
            {
              key: "getDefaultFoundation",
              value: function() {
                var _this94 = this;
                return new __WEBPACK_IMPORTED_MODULE_3__foundation__.a({
                  hasClass: function(className) {
                    return _this94.root_.classList.contains(className);
                  },
                  addClass: function(className) {
                    return _this94.root_.classList.add(className);
                  },
                  removeClass: function(className) {
                    return _this94.root_.classList.remove(className);
                  },
                  getAttribute: function(name) {
                    return _this94.root_.getAttribute(name);
                  },
                  setAttribute: function(name, value) {
                    return _this94.root_.setAttribute(name, value);
                  },
                  removeAttribute: function(name) {
                    return _this94.root_.removeAttribute(name);
                  },
                  computeBoundingRect: function() {
                    return _this94.root_.getBoundingClientRect();
                  },
                  getTabIndex: function() {
                    return _this94.root_.tabIndex;
                  },
                  registerInteractionHandler: function(type, handler) {
                    _this94.root_.addEventListener(type, handler);
                  },
                  deregisterInteractionHandler: function(type, handler) {
                    _this94.root_.removeEventListener(type, handler);
                  },
                  registerThumbContainerInteractionHandler: function(
                    type,
                    handler
                  ) {
                    _this94.thumbContainer_.addEventListener(type, handler);
                  },
                  deregisterThumbContainerInteractionHandler: function(
                    type,
                    handler
                  ) {
                    _this94.thumbContainer_.removeEventListener(type, handler);
                  },
                  registerBodyInteractionHandler: function(type, handler) {
                    document.body.addEventListener(type, handler);
                  },
                  deregisterBodyInteractionHandler: function(type, handler) {
                    document.body.removeEventListener(type, handler);
                  },
                  registerResizeHandler: function(handler) {
                    window.addEventListener("resize", handler);
                  },
                  deregisterResizeHandler: function(handler) {
                    window.removeEventListener("resize", handler);
                  },
                  notifyInput: function() {
                    _this94.emit(
                      __WEBPACK_IMPORTED_MODULE_1__constants__.c.INPUT_EVENT,
                      _this94
                    );
                  },
                  notifyChange: function() {
                    _this94.emit(
                      __WEBPACK_IMPORTED_MODULE_1__constants__.c.CHANGE_EVENT,
                      _this94
                    );
                  },
                  setThumbContainerStyleProperty: function(
                    propertyName,
                    value
                  ) {
                    _this94.thumbContainer_.style.setProperty(
                      propertyName,
                      value
                    );
                  },
                  setTrackStyleProperty: function(propertyName, value) {
                    _this94.track_.style.setProperty(propertyName, value);
                  },
                  setMarkerValue: function(value) {
                    _this94.pinValueMarker_.innerText = value;
                  },
                  appendTrackMarkers: function(numMarkers) {
                    for (
                      var frag = document.createDocumentFragment(), i = 0;
                      i < numMarkers;
                      i++
                    ) {
                      var marker = document.createElement("div");
                      marker.classList.add("mdc-slider__track-marker"),
                        frag.appendChild(marker);
                    }
                    _this94.trackMarkerContainer_.appendChild(frag);
                  },
                  removeTrackMarkers: function() {
                    for (; _this94.trackMarkerContainer_.firstChild; )
                      _this94.trackMarkerContainer_.removeChild(
                        _this94.trackMarkerContainer_.firstChild
                      );
                  },
                  setLastTrackMarkersStyleProperty: function(
                    propertyName,
                    value
                  ) {
                    _this94.root_
                      .querySelector(
                        __WEBPACK_IMPORTED_MODULE_1__constants__.c
                          .LAST_TRACK_MARKER_SELECTOR
                      )
                      .style.setProperty(propertyName, value);
                  },
                  isRTL: function() {
                    return "rtl" === getComputedStyle(_this94.root_).direction;
                  }
                });
              }
            },
            {
              key: "initialSyncWithDOM",
              value: function() {
                var origValueNow = parseFloat(
                  this.root_.getAttribute(
                    __WEBPACK_IMPORTED_MODULE_1__constants__.c.ARIA_VALUENOW
                  )
                );
                (this.min =
                  parseFloat(
                    this.root_.getAttribute(
                      __WEBPACK_IMPORTED_MODULE_1__constants__.c.ARIA_VALUEMIN
                    )
                  ) || this.min),
                  (this.max =
                    parseFloat(
                      this.root_.getAttribute(
                        __WEBPACK_IMPORTED_MODULE_1__constants__.c.ARIA_VALUEMAX
                      )
                    ) || this.max),
                  (this.step =
                    parseFloat(
                      this.root_.getAttribute(
                        __WEBPACK_IMPORTED_MODULE_1__constants__.c
                          .STEP_DATA_ATTR
                      )
                    ) || this.step),
                  (this.value = origValueNow || this.value),
                  (this.disabled =
                    this.root_.hasAttribute(
                      __WEBPACK_IMPORTED_MODULE_1__constants__.c.ARIA_DISABLED
                    ) &&
                    "false" !==
                      this.root_.getAttribute(
                        __WEBPACK_IMPORTED_MODULE_1__constants__.c.ARIA_DISABLED
                      )),
                  this.foundation_.setupTrackMarker();
              }
            },
            {
              key: "layout",
              value: function() {
                this.foundation_.layout();
              }
            },
            {
              key: "stepUp",
              value: function() {
                var amount =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : this.step || 1;
                this.value += amount;
              }
            },
            {
              key: "stepDown",
              value: function() {
                var amount =
                  arguments.length > 0 && void 0 !== arguments[0]
                    ? arguments[0]
                    : this.step || 1;
                this.value -= amount;
              }
            },
            {
              key: "value",
              get: function() {
                return this.foundation_.getValue();
              },
              set: function(value) {
                this.foundation_.setValue(value);
              }
            },
            {
              key: "min",
              get: function() {
                return this.foundation_.getMin();
              },
              set: function(min) {
                this.foundation_.setMin(min);
              }
            },
            {
              key: "max",
              get: function() {
                return this.foundation_.getMax();
              },
              set: function(max) {
                this.foundation_.setMax(max);
              }
            },
            {
              key: "step",
              get: function() {
                return this.foundation_.getStep();
              },
              set: function(step) {
                this.foundation_.setStep(step);
              }
            },
            {
              key: "disabled",
              get: function() {
                return this.foundation_.isDisabled();
              },
              set: function(disabled) {
                this.foundation_.setDisabled(disabled);
              }
            }
          ]),
          MDCSlider
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(29),
        __WEBPACK_IMPORTED_MODULE_2__material_animation_index__ = (__webpack_require__(
          30
        ),
        __webpack_require__(5)),
        __WEBPACK_IMPORTED_MODULE_3__material_base_foundation__ = __webpack_require__(
          0
        ),
        KEY_IDS = {
          ARROW_LEFT: "ArrowLeft",
          ARROW_RIGHT: "ArrowRight",
          ARROW_UP: "ArrowUp",
          ARROW_DOWN: "ArrowDown",
          HOME: "Home",
          END: "End",
          PAGE_UP: "PageUp",
          PAGE_DOWN: "PageDown"
        },
        MOVE_EVENT_MAP = {
          mousedown: "mousemove",
          touchstart: "touchmove",
          pointerdown: "pointermove"
        },
        DOWN_EVENTS = ["mousedown", "pointerdown", "touchstart"],
        UP_EVENTS = ["mouseup", "pointerup", "touchend"],
        MDCSliderFoundation = (function(_WEBPACK_IMPORTED_MO45) {
          function MDCSliderFoundation(adapter) {
            _classCallCheck(this, MDCSliderFoundation);
            var _this95 = _possibleConstructorReturn(
              this,
              (
                MDCSliderFoundation.__proto__ ||
                Object.getPrototypeOf(MDCSliderFoundation)
              ).call(
                this,
                Object.assign(MDCSliderFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this95.rect_ = null),
              (_this95.savedTabIndex_ = NaN),
              (_this95.active_ = !1),
              (_this95.inTransit_ = !1),
              (_this95.isDiscrete_ = !1),
              (_this95.hasTrackMarker_ = !1),
              (_this95.handlingThumbTargetEvt_ = !1),
              (_this95.min_ = 0),
              (_this95.max_ = 100),
              (_this95.step_ = 0),
              (_this95.value_ = 0),
              (_this95.disabled_ = !1),
              (_this95.preventFocusState_ = !1),
              (_this95.updateUIFrame_ = 0),
              (_this95.thumbContainerPointerHandler_ = function() {
                _this95.handlingThumbTargetEvt_ = !0;
              }),
              (_this95.interactionStartHandler_ = function(evt) {
                return _this95.handleDown_(evt);
              }),
              (_this95.keydownHandler_ = function(evt) {
                return _this95.handleKeydown_(evt);
              }),
              (_this95.focusHandler_ = function() {
                return _this95.handleFocus_();
              }),
              (_this95.blurHandler_ = function() {
                return _this95.handleBlur_();
              }),
              (_this95.resizeHandler_ = function() {
                return _this95.layout();
              }),
              _this95
            );
          }
          return (
            _inherits(
              MDCSliderFoundation,
              __WEBPACK_IMPORTED_MODULE_3__material_base_foundation__["a"]
            ),
            _createClass(MDCSliderFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_0__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_0__constants__.c;
                }
              },
              {
                key: "numbers",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_0__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    hasClass: function() {
                      return !1;
                    },
                    addClass: function() {},
                    removeClass: function() {},
                    getAttribute: function() {
                      return null;
                    },
                    setAttribute: function() {},
                    removeAttribute: function() {},
                    computeBoundingRect: function() {
                      return {
                        top: 0,
                        right: 0,
                        bottom: 0,
                        left: 0,
                        width: 0,
                        height: 0
                      };
                    },
                    getTabIndex: function() {
                      return 0;
                    },
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    registerThumbContainerInteractionHandler: function() {},
                    deregisterThumbContainerInteractionHandler: function() {},
                    registerBodyInteractionHandler: function() {},
                    deregisterBodyInteractionHandler: function() {},
                    registerResizeHandler: function() {},
                    deregisterResizeHandler: function() {},
                    notifyInput: function() {},
                    notifyChange: function() {},
                    setThumbContainerStyleProperty: function() {},
                    setTrackStyleProperty: function() {},
                    setMarkerValue: function() {},
                    appendTrackMarkers: function() {},
                    removeTrackMarkers: function() {},
                    setLastTrackMarkersStyleProperty: function() {},
                    isRTL: function() {
                      return !1;
                    }
                  };
                }
              }
            ]),
            _createClass(MDCSliderFoundation, [
              {
                key: "init",
                value: function() {
                  var _this96 = this;
                  (this.isDiscrete_ = this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_0__constants__.a.IS_DISCRETE
                  )),
                    (this.hasTrackMarker_ = this.adapter_.hasClass(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a
                        .HAS_TRACK_MARKER
                    )),
                    DOWN_EVENTS.forEach(function(evtName) {
                      return _this96.adapter_.registerInteractionHandler(
                        evtName,
                        _this96.interactionStartHandler_
                      );
                    }),
                    this.adapter_.registerInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "focus",
                      this.focusHandler_
                    ),
                    this.adapter_.registerInteractionHandler(
                      "blur",
                      this.blurHandler_
                    ),
                    DOWN_EVENTS.forEach(function(evtName) {
                      _this96.adapter_.registerThumbContainerInteractionHandler(
                        evtName,
                        _this96.thumbContainerPointerHandler_
                      );
                    }),
                    this.adapter_.registerResizeHandler(this.resizeHandler_),
                    this.layout(),
                    this.isDiscrete_ && 0 == this.getStep() && (this.step_ = 1);
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this97 = this;
                  DOWN_EVENTS.forEach(function(evtName) {
                    _this97.adapter_.deregisterInteractionHandler(
                      evtName,
                      _this97.interactionStartHandler_
                    );
                  }),
                    this.adapter_.deregisterInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "focus",
                      this.focusHandler_
                    ),
                    this.adapter_.deregisterInteractionHandler(
                      "blur",
                      this.blurHandler_
                    ),
                    DOWN_EVENTS.forEach(function(evtName) {
                      _this97.adapter_.deregisterThumbContainerInteractionHandler(
                        evtName,
                        _this97.thumbContainerPointerHandler_
                      );
                    }),
                    this.adapter_.deregisterResizeHandler(this.resizeHandler_);
                }
              },
              {
                key: "setupTrackMarker",
                value: function() {
                  if (
                    this.isDiscrete_ &&
                    this.hasTrackMarker_ &&
                    0 != this.getStep()
                  ) {
                    var min = this.getMin(),
                      max = this.getMax(),
                      step = this.getStep(),
                      numMarkers = (max - min) / step,
                      indivisible = Math.ceil(numMarkers) !== numMarkers;
                    if (
                      (indivisible && (numMarkers = Math.ceil(numMarkers)),
                      this.adapter_.removeTrackMarkers(),
                      this.adapter_.appendTrackMarkers(numMarkers),
                      indivisible)
                    ) {
                      var lastStepRatio = (max - numMarkers * step) / step + 1,
                        flex = Object(
                          __WEBPACK_IMPORTED_MODULE_2__material_animation_index__.b
                        )(window, "flex");
                      this.adapter_.setLastTrackMarkersStyleProperty(
                        flex,
                        String(lastStepRatio)
                      );
                    }
                  }
                }
              },
              {
                key: "layout",
                value: function() {
                  (this.rect_ = this.adapter_.computeBoundingRect()),
                    this.updateUIForCurrentValue_();
                }
              },
              {
                key: "getValue",
                value: function() {
                  return this.value_;
                }
              },
              {
                key: "setValue",
                value: function(value) {
                  this.setValue_(value, !1);
                }
              },
              {
                key: "getMax",
                value: function() {
                  return this.max_;
                }
              },
              {
                key: "setMax",
                value: function(max) {
                  if (max < this.min_)
                    throw new Error(
                      "Cannot set max to be less than the slider's minimum value"
                    );
                  (this.max_ = max),
                    this.setValue_(this.value_, !1, !0),
                    this.adapter_.setAttribute(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.c.ARIA_VALUEMAX,
                      String(this.max_)
                    ),
                    this.setupTrackMarker();
                }
              },
              {
                key: "getMin",
                value: function() {
                  return this.min_;
                }
              },
              {
                key: "setMin",
                value: function(min) {
                  if (min > this.max_)
                    throw new Error(
                      "Cannot set min to be greater than the slider's maximum value"
                    );
                  (this.min_ = min),
                    this.setValue_(this.value_, !1, !0),
                    this.adapter_.setAttribute(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.c.ARIA_VALUEMIN,
                      String(this.min_)
                    ),
                    this.setupTrackMarker();
                }
              },
              {
                key: "getStep",
                value: function() {
                  return this.step_;
                }
              },
              {
                key: "setStep",
                value: function(step) {
                  if (step < 0)
                    throw new Error("Step cannot be set to a negative number");
                  this.isDiscrete_ &&
                    ("number" != typeof step || step < 1) &&
                    (step = 1),
                    (this.step_ = step),
                    this.setValue_(this.value_, !1, !0),
                    this.setupTrackMarker();
                }
              },
              {
                key: "isDisabled",
                value: function() {
                  return this.disabled_;
                }
              },
              {
                key: "setDisabled",
                value: function(disabled) {
                  (this.disabled_ = disabled),
                    this.toggleClass_(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a.DISABLED,
                      this.disabled_
                    ),
                    this.disabled_
                      ? ((this.savedTabIndex_ = this.adapter_.getTabIndex()),
                        this.adapter_.setAttribute(
                          __WEBPACK_IMPORTED_MODULE_0__constants__.c
                            .ARIA_DISABLED,
                          "true"
                        ),
                        this.adapter_.removeAttribute("tabindex"))
                      : (this.adapter_.removeAttribute(
                          __WEBPACK_IMPORTED_MODULE_0__constants__.c
                            .ARIA_DISABLED
                        ),
                        isNaN(this.savedTabIndex_) ||
                          this.adapter_.setAttribute(
                            "tabindex",
                            String(this.savedTabIndex_)
                          ));
                }
              },
              {
                key: "handleDown_",
                value: function(evt) {
                  var _this98 = this;
                  if (!this.disabled_) {
                    (this.preventFocusState_ = !0),
                      this.setInTransit_(!this.handlingThumbTargetEvt_),
                      (this.handlingThumbTargetEvt_ = !1),
                      this.setActive_(!0);
                    var moveHandler = function(evt) {
                        _this98.handleMove_(evt);
                      },
                      upHandler = function upHandler() {
                        _this98.handleUp_(),
                          _this98.adapter_.deregisterBodyInteractionHandler(
                            MOVE_EVENT_MAP[evt.type],
                            moveHandler
                          ),
                          UP_EVENTS.forEach(function(evtName) {
                            return _this98.adapter_.deregisterBodyInteractionHandler(
                              evtName,
                              upHandler
                            );
                          });
                      };
                    this.adapter_.registerBodyInteractionHandler(
                      MOVE_EVENT_MAP[evt.type],
                      moveHandler
                    ),
                      UP_EVENTS.forEach(function(evtName) {
                        return _this98.adapter_.registerBodyInteractionHandler(
                          evtName,
                          upHandler
                        );
                      }),
                      this.setValueFromEvt_(evt);
                  }
                }
              },
              {
                key: "handleMove_",
                value: function(evt) {
                  evt.preventDefault(), this.setValueFromEvt_(evt);
                }
              },
              {
                key: "handleUp_",
                value: function() {
                  this.setActive_(!1), this.adapter_.notifyChange();
                }
              },
              {
                key: "getPageX_",
                value: function(evt) {
                  return evt.targetTouches && evt.targetTouches.length > 0
                    ? evt.targetTouches[0].pageX
                    : evt.pageX;
                }
              },
              {
                key: "setValueFromEvt_",
                value: function(evt) {
                  var pageX = this.getPageX_(evt),
                    value = this.computeValueFromPageX_(pageX);
                  this.setValue_(value, !0);
                }
              },
              {
                key: "computeValueFromPageX_",
                value: function(pageX) {
                  var max = this.max_,
                    min = this.min_,
                    pctComplete = (pageX - this.rect_.left) / this.rect_.width;
                  return (
                    this.adapter_.isRTL() && (pctComplete = 1 - pctComplete),
                    min + pctComplete * (max - min)
                  );
                }
              },
              {
                key: "handleKeydown_",
                value: function(evt) {
                  var keyId = this.getKeyId_(evt),
                    value = this.getValueForKeyId_(keyId);
                  isNaN(value) ||
                    (evt.preventDefault(),
                    this.adapter_.addClass(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a.FOCUS
                    ),
                    this.setValue_(value, !0),
                    this.adapter_.notifyChange());
                }
              },
              {
                key: "getKeyId_",
                value: function(kbdEvt) {
                  return kbdEvt.key === KEY_IDS.ARROW_LEFT ||
                    37 === kbdEvt.keyCode
                    ? KEY_IDS.ARROW_LEFT
                    : kbdEvt.key === KEY_IDS.ARROW_RIGHT ||
                      39 === kbdEvt.keyCode
                      ? KEY_IDS.ARROW_RIGHT
                      : kbdEvt.key === KEY_IDS.ARROW_UP || 38 === kbdEvt.keyCode
                        ? KEY_IDS.ARROW_UP
                        : kbdEvt.key === KEY_IDS.ARROW_DOWN ||
                          40 === kbdEvt.keyCode
                          ? KEY_IDS.ARROW_DOWN
                          : kbdEvt.key === KEY_IDS.HOME || 36 === kbdEvt.keyCode
                            ? KEY_IDS.HOME
                            : kbdEvt.key === KEY_IDS.END ||
                              35 === kbdEvt.keyCode
                              ? KEY_IDS.END
                              : kbdEvt.key === KEY_IDS.PAGE_UP ||
                                33 === kbdEvt.keyCode
                                ? KEY_IDS.PAGE_UP
                                : kbdEvt.key === KEY_IDS.PAGE_DOWN ||
                                  34 === kbdEvt.keyCode
                                  ? KEY_IDS.PAGE_DOWN
                                  : "";
                }
              },
              {
                key: "getValueForKeyId_",
                value: function(keyId) {
                  var max = this.max_,
                    min = this.min_,
                    delta = this.step_ || (max - min) / 100;
                  switch (
                    (this.adapter_.isRTL() &&
                      (keyId === KEY_IDS.ARROW_LEFT ||
                        keyId === KEY_IDS.ARROW_RIGHT) &&
                      (delta = -delta),
                    keyId)
                  ) {
                    case KEY_IDS.ARROW_LEFT:
                    case KEY_IDS.ARROW_DOWN:
                      return this.value_ - delta;
                    case KEY_IDS.ARROW_RIGHT:
                    case KEY_IDS.ARROW_UP:
                      return this.value_ + delta;
                    case KEY_IDS.HOME:
                      return this.min_;
                    case KEY_IDS.END:
                      return this.max_;
                    case KEY_IDS.PAGE_UP:
                      return (
                        this.value_ +
                        delta *
                          __WEBPACK_IMPORTED_MODULE_0__constants__.b.PAGE_FACTOR
                      );
                    case KEY_IDS.PAGE_DOWN:
                      return (
                        this.value_ -
                        delta *
                          __WEBPACK_IMPORTED_MODULE_0__constants__.b.PAGE_FACTOR
                      );
                    default:
                      return NaN;
                  }
                }
              },
              {
                key: "handleFocus_",
                value: function() {
                  this.preventFocusState_ ||
                    this.adapter_.addClass(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a.FOCUS
                    );
                }
              },
              {
                key: "handleBlur_",
                value: function() {
                  (this.preventFocusState_ = !1),
                    this.adapter_.removeClass(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a.FOCUS
                    );
                }
              },
              {
                key: "setValue_",
                value: function(value, shouldFireInput) {
                  var force =
                    arguments.length > 2 &&
                    void 0 !== arguments[2] &&
                    arguments[2];
                  if (value !== this.value_ || force) {
                    var min = this.min_,
                      max = this.max_,
                      valueSetToBoundary = value === min || value === max;
                    this.step_ &&
                      !valueSetToBoundary &&
                      (value = this.quantize_(value)),
                      value < min
                        ? (value = min)
                        : value > max && (value = max),
                      (this.value_ = value),
                      this.adapter_.setAttribute(
                        __WEBPACK_IMPORTED_MODULE_0__constants__.c
                          .ARIA_VALUENOW,
                        String(this.value_)
                      ),
                      this.updateUIForCurrentValue_(),
                      shouldFireInput &&
                        (this.adapter_.notifyInput(),
                        this.isDiscrete_ &&
                          this.adapter_.setMarkerValue(value));
                  }
                }
              },
              {
                key: "quantize_",
                value: function(value) {
                  return Math.round(value / this.step_) * this.step_;
                }
              },
              {
                key: "updateUIForCurrentValue_",
                value: function() {
                  var _this99 = this,
                    max = this.max_,
                    min = this.min_,
                    pctComplete = (this.value_ - min) / (max - min),
                    translatePx = pctComplete * this.rect_.width;
                  this.adapter_.isRTL() &&
                    (translatePx = this.rect_.width - translatePx);
                  var transformProp = Object(
                      __WEBPACK_IMPORTED_MODULE_2__material_animation_index__.b
                    )(window, "transform"),
                    transitionendEvtName = Object(
                      __WEBPACK_IMPORTED_MODULE_2__material_animation_index__.a
                    )(window, "transitionend");
                  if (this.inTransit_) {
                    this.adapter_.registerThumbContainerInteractionHandler(
                      transitionendEvtName,
                      function onTransitionEnd() {
                        _this99.setInTransit_(!1),
                          _this99.adapter_.deregisterThumbContainerInteractionHandler(
                            transitionendEvtName,
                            onTransitionEnd
                          );
                      }
                    );
                  }
                  this.updateUIFrame_ = requestAnimationFrame(function() {
                    _this99.adapter_.setThumbContainerStyleProperty(
                      transformProp,
                      "translateX(" + translatePx + "px) translateX(-50%)"
                    ),
                      _this99.adapter_.setTrackStyleProperty(
                        transformProp,
                        "scaleX(" + pctComplete + ")"
                      );
                  });
                }
              },
              {
                key: "setActive_",
                value: function(active) {
                  (this.active_ = active),
                    this.toggleClass_(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a.ACTIVE,
                      this.active_
                    );
                }
              },
              {
                key: "setInTransit_",
                value: function(inTransit) {
                  (this.inTransit_ = inTransit),
                    this.toggleClass_(
                      __WEBPACK_IMPORTED_MODULE_0__constants__.a.IN_TRANSIT,
                      this.inTransit_
                    );
                }
              },
              {
                key: "toggleClass_",
                value: function(className, shouldBePresent) {
                  shouldBePresent
                    ? this.adapter_.addClass(className)
                    : this.adapter_.removeClass(className);
                }
              }
            ]),
            MDCSliderFoundation
          );
        })();
      __webpack_exports__.a = MDCSliderFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(97),
        __WEBPACK_IMPORTED_MODULE_2__material_animation_index__ = __webpack_require__(
          5
        );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCSnackbarFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__foundation__.a;
        }
      );
      var MDCSnackbar = (function(_WEBPACK_IMPORTED_MO46) {
        function MDCSnackbar() {
          return (
            _classCallCheck(this, MDCSnackbar),
            _possibleConstructorReturn(
              this,
              (
                MDCSnackbar.__proto__ || Object.getPrototypeOf(MDCSnackbar)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCSnackbar,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCSnackbar,
            [
              {
                key: "show",
                value: function(data) {
                  this.foundation_.show(data);
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this101 = this,
                    _WEBPACK_IMPORTED_MO47 =
                      __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings,
                    TEXT_SELECTOR = _WEBPACK_IMPORTED_MO47.TEXT_SELECTOR,
                    ACTION_BUTTON_SELECTOR =
                      _WEBPACK_IMPORTED_MO47.ACTION_BUTTON_SELECTOR,
                    getText = function() {
                      return _this101.root_.querySelector(TEXT_SELECTOR);
                    },
                    getActionButton = function() {
                      return _this101.root_.querySelector(
                        ACTION_BUTTON_SELECTOR
                      );
                    };
                  return new __WEBPACK_IMPORTED_MODULE_1__foundation__.a({
                    addClass: function(className) {
                      return _this101.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this101.root_.classList.remove(className);
                    },
                    setAriaHidden: function() {
                      return _this101.root_.setAttribute("aria-hidden", "true");
                    },
                    unsetAriaHidden: function() {
                      return _this101.root_.removeAttribute("aria-hidden");
                    },
                    setActionAriaHidden: function() {
                      return getActionButton().setAttribute(
                        "aria-hidden",
                        "true"
                      );
                    },
                    unsetActionAriaHidden: function() {
                      return getActionButton().removeAttribute("aria-hidden");
                    },
                    setActionText: function(text) {
                      getActionButton().textContent = text;
                    },
                    setMessageText: function(text) {
                      getText().textContent = text;
                    },
                    setFocus: function() {
                      return getActionButton().focus();
                    },
                    visibilityIsHidden: function() {
                      return document.hidden;
                    },
                    registerCapturedBlurHandler: function(handler) {
                      return getActionButton().addEventListener(
                        "blur",
                        handler,
                        !0
                      );
                    },
                    deregisterCapturedBlurHandler: function(handler) {
                      return getActionButton().removeEventListener(
                        "blur",
                        handler,
                        !0
                      );
                    },
                    registerVisibilityChangeHandler: function(handler) {
                      return document.addEventListener(
                        "visibilitychange",
                        handler
                      );
                    },
                    deregisterVisibilityChangeHandler: function(handler) {
                      return document.removeEventListener(
                        "visibilitychange",
                        handler
                      );
                    },
                    registerCapturedInteractionHandler: function(evt, handler) {
                      return document.body.addEventListener(evt, handler, !0);
                    },
                    deregisterCapturedInteractionHandler: function(
                      evt,
                      handler
                    ) {
                      return document.body.removeEventListener(
                        evt,
                        handler,
                        !0
                      );
                    },
                    registerActionClickHandler: function(handler) {
                      return getActionButton().addEventListener(
                        "click",
                        handler
                      );
                    },
                    deregisterActionClickHandler: function(handler) {
                      return getActionButton().removeEventListener(
                        "click",
                        handler
                      );
                    },
                    registerTransitionEndHandler: function(handler) {
                      return _this101.root_.addEventListener(
                        Object(
                          __WEBPACK_IMPORTED_MODULE_2__material_animation_index__.a
                        )(window, "transitionend"),
                        handler
                      );
                    },
                    deregisterTransitionEndHandler: function(handler) {
                      return _this101.root_.removeEventListener(
                        Object(
                          __WEBPACK_IMPORTED_MODULE_2__material_animation_index__.a
                        )(window, "transitionend"),
                        handler
                      );
                    },
                    notifyShow: function() {
                      return _this101.emit(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .SHOW_EVENT
                      );
                    },
                    notifyHide: function() {
                      return _this101.emit(
                        __WEBPACK_IMPORTED_MODULE_1__foundation__.a.strings
                          .HIDE_EVENT
                      );
                    }
                  });
                }
              },
              {
                key: "dismissesOnAction",
                get: function() {
                  return this.foundation_.dismissesOnAction();
                },
                set: function(dismissesOnAction) {
                  this.foundation_.setDismissOnAction(dismissesOnAction);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCSnackbar(root);
                }
              }
            ]
          ),
          MDCSnackbar
        );
      })();
      __webpack_exports__.MDCSnackbar = MDCSnackbar;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(98),
        MDCSnackbarFoundation = (function(_WEBPACK_IMPORTED_MO48) {
          function MDCSnackbarFoundation(adapter) {
            _classCallCheck(this, MDCSnackbarFoundation);
            var _this102 = _possibleConstructorReturn(
              this,
              (
                MDCSnackbarFoundation.__proto__ ||
                Object.getPrototypeOf(MDCSnackbarFoundation)
              ).call(
                this,
                Object.assign(MDCSnackbarFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this102.active_ = !1),
              (_this102.actionWasClicked_ = !1),
              (_this102.dismissOnAction_ = !0),
              (_this102.firstFocus_ = !0),
              (_this102.pointerDownRecognized_ = !1),
              (_this102.snackbarHasFocus_ = !1),
              (_this102.snackbarData_ = null),
              (_this102.queue_ = []),
              (_this102.actionClickHandler_ = function() {
                (_this102.actionWasClicked_ = !0), _this102.invokeAction_();
              }),
              (_this102.visibilitychangeHandler_ = function() {
                clearTimeout(_this102.timeoutId_),
                  (_this102.snackbarHasFocus_ = !0),
                  _this102.adapter_.visibilityIsHidden() ||
                    setTimeout(
                      _this102.cleanup_.bind(_this102),
                      _this102.snackbarData_.timeout ||
                        __WEBPACK_IMPORTED_MODULE_1__constants__.b
                          .MESSAGE_TIMEOUT
                    );
              }),
              (_this102.interactionHandler_ = function(evt) {
                ("touchstart" != evt.type && "mousedown" != evt.type) ||
                  (_this102.pointerDownRecognized_ = !0),
                  _this102.handlePossibleTabKeyboardFocus_(evt),
                  "focus" == evt.type && (_this102.pointerDownRecognized_ = !1);
              }),
              (_this102.blurHandler_ = function() {
                clearTimeout(_this102.timeoutId_),
                  (_this102.snackbarHasFocus_ = !1),
                  (_this102.timeoutId_ = setTimeout(
                    _this102.cleanup_.bind(_this102),
                    _this102.snackbarData_.timeout ||
                      __WEBPACK_IMPORTED_MODULE_1__constants__.b.MESSAGE_TIMEOUT
                  ));
              }),
              _this102
            );
          }
          return (
            _inherits(
              MDCSnackbarFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_index__[
                "MDCFoundation"
              ]
            ),
            _createClass(
              MDCSnackbarFoundation,
              [
                {
                  key: "active",
                  get: function() {
                    return this.active_;
                  }
                }
              ],
              [
                {
                  key: "cssClasses",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                  }
                },
                {
                  key: "strings",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_1__constants__.c;
                  }
                },
                {
                  key: "defaultAdapter",
                  get: function() {
                    return {
                      addClass: function() {},
                      removeClass: function() {},
                      setAriaHidden: function() {},
                      unsetAriaHidden: function() {},
                      setActionAriaHidden: function() {},
                      unsetActionAriaHidden: function() {},
                      setActionText: function() {},
                      setMessageText: function() {},
                      setFocus: function() {},
                      visibilityIsHidden: function() {
                        return !1;
                      },
                      registerCapturedBlurHandler: function() {},
                      deregisterCapturedBlurHandler: function() {},
                      registerVisibilityChangeHandler: function() {},
                      deregisterVisibilityChangeHandler: function() {},
                      registerCapturedInteractionHandler: function() {},
                      deregisterCapturedInteractionHandler: function() {},
                      registerActionClickHandler: function() {},
                      deregisterActionClickHandler: function() {},
                      registerTransitionEndHandler: function() {},
                      deregisterTransitionEndHandler: function() {},
                      notifyShow: function() {},
                      notifyHide: function() {}
                    };
                  }
                }
              ]
            ),
            _createClass(MDCSnackbarFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerActionClickHandler(
                    this.actionClickHandler_
                  ),
                    this.adapter_.setAriaHidden(),
                    this.adapter_.setActionAriaHidden();
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this103 = this;
                  this.adapter_.deregisterActionClickHandler(
                    this.actionClickHandler_
                  ),
                    this.adapter_.deregisterCapturedBlurHandler(
                      this.blurHandler_
                    ),
                    this.adapter_.deregisterVisibilityChangeHandler(
                      this.visibilitychangeHandler_
                    ),
                    ["touchstart", "mousedown", "focus"].forEach(function(
                      evtType
                    ) {
                      _this103.adapter_.deregisterCapturedInteractionHandler(
                        evtType,
                        _this103.interactionHandler_
                      );
                    });
                }
              },
              {
                key: "dismissesOnAction",
                value: function() {
                  return this.dismissOnAction_;
                }
              },
              {
                key: "setDismissOnAction",
                value: function(dismissOnAction) {
                  this.dismissOnAction_ = !!dismissOnAction;
                }
              },
              {
                key: "show",
                value: function(data) {
                  var _this104 = this;
                  if (!data)
                    throw new Error(
                      "Please provide a data object with at least a message to display."
                    );
                  if (!data.message)
                    throw new Error(
                      "Please provide a message to be displayed."
                    );
                  if (data.actionHandler && !data.actionText)
                    throw new Error(
                      "Please provide action text with the handler."
                    );
                  if (this.active) this.queue_.push(data);
                  else {
                    clearTimeout(this.timeoutId_),
                      (this.snackbarData_ = data),
                      (this.firstFocus_ = !0),
                      this.adapter_.registerVisibilityChangeHandler(
                        this.visibilitychangeHandler_
                      ),
                      this.adapter_.registerCapturedBlurHandler(
                        this.blurHandler_
                      ),
                      ["touchstart", "mousedown", "focus"].forEach(function(
                        evtType
                      ) {
                        _this104.adapter_.registerCapturedInteractionHandler(
                          evtType,
                          _this104.interactionHandler_
                        );
                      });
                    var _WEBPACK_IMPORTED_MO49 =
                        __WEBPACK_IMPORTED_MODULE_1__constants__.a,
                      ACTIVE = _WEBPACK_IMPORTED_MO49.ACTIVE,
                      MULTILINE = _WEBPACK_IMPORTED_MO49.MULTILINE,
                      ACTION_ON_BOTTOM =
                        _WEBPACK_IMPORTED_MO49.ACTION_ON_BOTTOM;
                    this.adapter_.setMessageText(this.snackbarData_.message),
                      this.snackbarData_.multiline &&
                        (this.adapter_.addClass(MULTILINE),
                        this.snackbarData_.actionOnBottom &&
                          this.adapter_.addClass(ACTION_ON_BOTTOM)),
                      this.snackbarData_.actionHandler
                        ? (this.adapter_.setActionText(
                            this.snackbarData_.actionText
                          ),
                          (this.actionHandler_ = this.snackbarData_.actionHandler),
                          this.setActionHidden_(!1))
                        : (this.setActionHidden_(!0),
                          (this.actionHandler_ = null),
                          this.adapter_.setActionText(null)),
                      (this.active_ = !0),
                      this.adapter_.addClass(ACTIVE),
                      this.adapter_.unsetAriaHidden(),
                      this.adapter_.notifyShow(),
                      (this.timeoutId_ = setTimeout(
                        this.cleanup_.bind(this),
                        this.snackbarData_.timeout ||
                          __WEBPACK_IMPORTED_MODULE_1__constants__.b
                            .MESSAGE_TIMEOUT
                      ));
                  }
                }
              },
              {
                key: "handlePossibleTabKeyboardFocus_",
                value: function() {
                  this.firstFocus_ &&
                    !this.pointerDownRecognized_ &&
                    this.setFocusOnAction_(),
                    (this.firstFocus_ = !1);
                }
              },
              {
                key: "setFocusOnAction_",
                value: function() {
                  this.adapter_.setFocus(),
                    (this.snackbarHasFocus_ = !0),
                    (this.firstFocus_ = !1);
                }
              },
              {
                key: "invokeAction_",
                value: function() {
                  try {
                    if (!this.actionHandler_) return;
                    this.actionHandler_();
                  } finally {
                    this.dismissOnAction_ && this.cleanup_();
                  }
                }
              },
              {
                key: "cleanup_",
                value: function() {
                  var _this105 = this;
                  if (!this.snackbarHasFocus_ || this.actionWasClicked_) {
                    var _WEBPACK_IMPORTED_MO50 =
                        __WEBPACK_IMPORTED_MODULE_1__constants__.a,
                      ACTIVE = _WEBPACK_IMPORTED_MO50.ACTIVE,
                      MULTILINE = _WEBPACK_IMPORTED_MO50.MULTILINE,
                      ACTION_ON_BOTTOM =
                        _WEBPACK_IMPORTED_MO50.ACTION_ON_BOTTOM;
                    this.adapter_.removeClass(ACTIVE);
                    this.adapter_.registerTransitionEndHandler(
                      function handler() {
                        clearTimeout(_this105.timeoutId_),
                          _this105.adapter_.deregisterTransitionEndHandler(
                            handler
                          ),
                          _this105.adapter_.removeClass(MULTILINE),
                          _this105.adapter_.removeClass(ACTION_ON_BOTTOM),
                          _this105.setActionHidden_(!0),
                          _this105.adapter_.setAriaHidden(),
                          (_this105.active_ = !1),
                          (_this105.snackbarHasFocus_ = !1),
                          _this105.adapter_.notifyHide(),
                          _this105.showNext_();
                      }
                    );
                  }
                }
              },
              {
                key: "showNext_",
                value: function() {
                  this.queue_.length && this.show(this.queue_.shift());
                }
              },
              {
                key: "setActionHidden_",
                value: function(isHidden) {
                  isHidden
                    ? this.adapter_.setActionAriaHidden()
                    : this.adapter_.unsetActionAriaHidden();
                }
              }
            ]),
            MDCSnackbarFoundation
          );
        })();
      __webpack_exports__.a = MDCSnackbarFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = {
        ROOT: "mdc-snackbar",
        TEXT: "mdc-snackbar__text",
        ACTION_WRAPPER: "mdc-snackbar__action-wrapper",
        ACTION_BUTTON: "mdc-snackbar__action-button",
        ACTIVE: "mdc-snackbar--active",
        MULTILINE: "mdc-snackbar--multiline",
        ACTION_ON_BOTTOM: "mdc-snackbar--action-on-bottom"
      };
      __webpack_exports__.a = cssClasses;
      var strings = {
        TEXT_SELECTOR: ".mdc-snackbar__text",
        ACTION_WRAPPER_SELECTOR: ".mdc-snackbar__action-wrapper",
        ACTION_BUTTON_SELECTOR: ".mdc-snackbar__action-button",
        SHOW_EVENT: "MDCSnackbar:show",
        HIDE_EVENT: "MDCSnackbar:hide"
      };
      __webpack_exports__.c = strings;
      var numbers = { MESSAGE_TIMEOUT: 2750 };
      __webpack_exports__.b = numbers;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__tab__ = __webpack_require__(31);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCTabFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_0__tab__.b;
        }
      ),
        __webpack_require__.d(__webpack_exports__, "MDCTab", function() {
          return __WEBPACK_IMPORTED_MODULE_0__tab__.a;
        });
      var __WEBPACK_IMPORTED_MODULE_1__tab_bar__ = __webpack_require__(33);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCTabBarFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_1__tab_bar__.b;
        }
      ),
        __webpack_require__.d(__webpack_exports__, "MDCTabBar", function() {
          return __WEBPACK_IMPORTED_MODULE_1__tab_bar__.a;
        });
      var __WEBPACK_IMPORTED_MODULE_2__tab_bar_scroller__ = __webpack_require__(
        103
      );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCTabBarScrollerFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__tab_bar_scroller__.b;
        }
      ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTabBarScroller",
          function() {
            return __WEBPACK_IMPORTED_MODULE_2__tab_bar_scroller__.a;
          }
        );
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(32),
        MDCTabFoundation = (function(_WEBPACK_IMPORTED_MO51) {
          function MDCTabFoundation() {
            var adapter =
              arguments.length > 0 && void 0 !== arguments[0]
                ? arguments[0]
                : {};
            _classCallCheck(this, MDCTabFoundation);
            var _this106 = _possibleConstructorReturn(
              this,
              (
                MDCTabFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTabFoundation)
              ).call(
                this,
                Object.assign(MDCTabFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this106.computedWidth_ = 0),
              (_this106.computedLeft_ = 0),
              (_this106.isActive_ = !1),
              (_this106.preventDefaultOnClick_ = !1),
              (_this106.clickHandler_ = function(evt) {
                _this106.preventDefaultOnClick_ && evt.preventDefault(),
                  _this106.adapter_.notifySelected();
              }),
              (_this106.keydownHandler_ = function(evt) {
                ((evt.key && "Enter" === evt.key) || 13 === evt.keyCode) &&
                  _this106.adapter_.notifySelected();
              }),
              _this106
            );
          }
          return (
            _inherits(
              MDCTabFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCTabFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    registerInteractionHandler: function() {},
                    deregisterInteractionHandler: function() {},
                    getOffsetWidth: function() {
                      return 0;
                    },
                    getOffsetLeft: function() {
                      return 0;
                    },
                    notifySelected: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCTabFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.registerInteractionHandler(
                    "click",
                    this.clickHandler_
                  ),
                    this.adapter_.registerInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterInteractionHandler(
                    "click",
                    this.clickHandler_
                  ),
                    this.adapter_.deregisterInteractionHandler(
                      "keydown",
                      this.keydownHandler_
                    );
                }
              },
              {
                key: "getComputedWidth",
                value: function() {
                  return this.computedWidth_;
                }
              },
              {
                key: "getComputedLeft",
                value: function() {
                  return this.computedLeft_;
                }
              },
              {
                key: "isActive",
                value: function() {
                  return this.isActive_;
                }
              },
              {
                key: "setActive",
                value: function(isActive) {
                  (this.isActive_ = isActive),
                    this.isActive_
                      ? this.adapter_.addClass(
                          __WEBPACK_IMPORTED_MODULE_1__constants__.a.ACTIVE
                        )
                      : this.adapter_.removeClass(
                          __WEBPACK_IMPORTED_MODULE_1__constants__.a.ACTIVE
                        );
                }
              },
              {
                key: "preventsDefaultOnClick",
                value: function() {
                  return this.preventDefaultOnClick_;
                }
              },
              {
                key: "setPreventDefaultOnClick",
                value: function(preventDefaultOnClick) {
                  this.preventDefaultOnClick_ = preventDefaultOnClick;
                }
              },
              {
                key: "measureSelf",
                value: function() {
                  (this.computedWidth_ = this.adapter_.getOffsetWidth()),
                    (this.computedLeft_ = this.adapter_.getOffsetLeft());
                }
              }
            ]),
            MDCTabFoundation
          );
        })();
      __webpack_exports__.a = MDCTabFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_animation_index__ = __webpack_require__(
          5
        ),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(102),
        MDCTabBarFoundation = (function(_WEBPACK_IMPORTED_MO52) {
          function MDCTabBarFoundation(adapter) {
            _classCallCheck(this, MDCTabBarFoundation);
            var _this107 = _possibleConstructorReturn(
              this,
              (
                MDCTabBarFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTabBarFoundation)
              ).call(
                this,
                Object.assign(MDCTabBarFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this107.isIndicatorShown_ = !1),
              (_this107.computedWidth_ = 0),
              (_this107.computedLeft_ = 0),
              (_this107.activeTabIndex_ = 0),
              (_this107.layoutFrame_ = 0),
              (_this107.resizeHandler_ = function() {
                return _this107.layout();
              }),
              _this107
            );
          }
          return (
            _inherits(
              MDCTabBarFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCTabBarFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_2__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    bindOnMDCTabSelectedEvent: function() {},
                    unbindOnMDCTabSelectedEvent: function() {},
                    registerResizeHandler: function() {},
                    deregisterResizeHandler: function() {},
                    getOffsetWidth: function() {
                      return 0;
                    },
                    setStyleForIndicator: function() {},
                    getOffsetWidthForIndicator: function() {
                      return 0;
                    },
                    notifyChange: function() {},
                    getNumberOfTabs: function() {
                      return 0;
                    },
                    isTabActiveAtIndex: function() {
                      return !1;
                    },
                    setTabActiveAtIndex: function() {},
                    isDefaultPreventedOnClickForTabAtIndex: function() {
                      return !1;
                    },
                    setPreventDefaultOnClickForTabAtIndex: function() {},
                    measureTabAtIndex: function() {},
                    getComputedWidthForTabAtIndex: function() {
                      return 0;
                    },
                    getComputedLeftForTabAtIndex: function() {
                      return 0;
                    }
                  };
                }
              }
            ]),
            _createClass(MDCTabBarFoundation, [
              {
                key: "init",
                value: function() {
                  this.adapter_.addClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a.UPGRADED
                  ),
                    this.adapter_.bindOnMDCTabSelectedEvent(),
                    this.adapter_.registerResizeHandler(this.resizeHandler_);
                  var activeTabIndex = this.findActiveTabIndex_();
                  activeTabIndex >= 0 &&
                    (this.activeTabIndex_ = activeTabIndex),
                    this.layout();
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.removeClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a.UPGRADED
                  ),
                    this.adapter_.unbindOnMDCTabSelectedEvent(),
                    this.adapter_.deregisterResizeHandler(this.resizeHandler_);
                }
              },
              {
                key: "layoutInternal_",
                value: function() {
                  var _this108 = this;
                  this.forEachTabIndex_(function(index) {
                    return _this108.adapter_.measureTabAtIndex(index);
                  }),
                    (this.computedWidth_ = this.adapter_.getOffsetWidth()),
                    this.layoutIndicator_();
                }
              },
              {
                key: "layoutIndicator_",
                value: function() {
                  var isIndicatorFirstRender = !this.isIndicatorShown_;
                  isIndicatorFirstRender &&
                    this.adapter_.setStyleForIndicator("transition", "none");
                  var transformValue =
                    "translateX(" +
                    this.adapter_.getComputedLeftForTabAtIndex(
                      this.activeTabIndex_
                    ) +
                    "px) scale(" +
                    this.adapter_.getComputedWidthForTabAtIndex(
                      this.activeTabIndex_
                    ) /
                      this.adapter_.getOffsetWidth() +
                    ", 1)";
                  this.adapter_.setStyleForIndicator(
                    Object(
                      __WEBPACK_IMPORTED_MODULE_1__material_animation_index__.b
                    )(window, "transform"),
                    transformValue
                  ),
                    isIndicatorFirstRender &&
                      (this.adapter_.getOffsetWidthForIndicator(),
                      this.adapter_.setStyleForIndicator("transition", ""),
                      this.adapter_.setStyleForIndicator(
                        "visibility",
                        "visible"
                      ),
                      (this.isIndicatorShown_ = !0));
                }
              },
              {
                key: "findActiveTabIndex_",
                value: function() {
                  var _this109 = this,
                    activeTabIndex = -1;
                  return (
                    this.forEachTabIndex_(function(index) {
                      if (_this109.adapter_.isTabActiveAtIndex(index))
                        return (activeTabIndex = index), !0;
                    }),
                    activeTabIndex
                  );
                }
              },
              {
                key: "forEachTabIndex_",
                value: function(iterator) {
                  for (
                    var numTabs = this.adapter_.getNumberOfTabs(), index = 0;
                    index < numTabs && !iterator(index);
                    index++
                  );
                }
              },
              {
                key: "layout",
                value: function() {
                  var _this110 = this;
                  this.layoutFrame_ && cancelAnimationFrame(this.layoutFrame_),
                    (this.layoutFrame_ = requestAnimationFrame(function() {
                      _this110.layoutInternal_(), (_this110.layoutFrame_ = 0);
                    }));
                }
              },
              {
                key: "switchToTabAtIndex",
                value: function(index, shouldNotify) {
                  var _this111 = this;
                  if (index !== this.activeTabIndex_) {
                    if (index < 0 || index >= this.adapter_.getNumberOfTabs())
                      throw new Error(
                        "Out of bounds index specified for tab: " + index
                      );
                    var prevActiveTabIndex = this.activeTabIndex_;
                    (this.activeTabIndex_ = index),
                      requestAnimationFrame(function() {
                        prevActiveTabIndex >= 0 &&
                          _this111.adapter_.setTabActiveAtIndex(
                            prevActiveTabIndex,
                            !1
                          ),
                          _this111.adapter_.setTabActiveAtIndex(
                            _this111.activeTabIndex_,
                            !0
                          ),
                          _this111.layoutIndicator_(),
                          shouldNotify &&
                            _this111.adapter_.notifyChange({
                              activeTabIndex: _this111.activeTabIndex_
                            });
                      });
                  }
                }
              },
              {
                key: "getActiveTabIndex",
                value: function() {
                  return this.findActiveTabIndex_();
                }
              }
            ]),
            MDCTabBarFoundation
          );
        })();
      __webpack_exports__.a = MDCTabBarFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = { UPGRADED: "mdc-tab-bar-upgraded" };
      __webpack_exports__.a = cssClasses;
      var strings = {
        TAB_SELECTOR: ".mdc-tab",
        INDICATOR_SELECTOR: ".mdc-tab-bar__indicator",
        CHANGE_EVENT: "MDCTabBar:change"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_animation_index__ = __webpack_require__(
          5
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__tab_bar_index__ = __webpack_require__(33),
        __WEBPACK_IMPORTED_MODULE_3__foundation__ = __webpack_require__(104);
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_3__foundation__.a;
      });
      var MDCTabBarScroller = (function(_WEBPACK_IMPORTED_MO53) {
        function MDCTabBarScroller() {
          return (
            _classCallCheck(this, MDCTabBarScroller),
            _possibleConstructorReturn(
              this,
              (
                MDCTabBarScroller.__proto__ ||
                Object.getPrototypeOf(MDCTabBarScroller)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCTabBarScroller,
            __WEBPACK_IMPORTED_MODULE_1__material_base_component__["a"]
          ),
          _createClass(
            MDCTabBarScroller,
            [
              {
                key: "initialize",
                value: function() {
                  var tabBarFactory =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : function(root) {
                          return new __WEBPACK_IMPORTED_MODULE_2__tab_bar_index__.a(
                            root
                          );
                        };
                  (this.scrollFrame_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__foundation__.a.strings
                      .FRAME_SELECTOR
                  )),
                    (this.tabBarEl_ = this.root_.querySelector(
                      __WEBPACK_IMPORTED_MODULE_3__foundation__.a.strings
                        .TABS_SELECTOR
                    )),
                    (this.forwardIndicator_ = this.root_.querySelector(
                      __WEBPACK_IMPORTED_MODULE_3__foundation__.a.strings
                        .INDICATOR_FORWARD_SELECTOR
                    )),
                    (this.backIndicator_ = this.root_.querySelector(
                      __WEBPACK_IMPORTED_MODULE_3__foundation__.a.strings
                        .INDICATOR_BACK_SELECTOR
                    )),
                    (this.tabBar_ = tabBarFactory(this.tabBarEl_));
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this113 = this;
                  return new __WEBPACK_IMPORTED_MODULE_3__foundation__.a({
                    addClass: function(className) {
                      return _this113.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this113.root_.classList.remove(className);
                    },
                    eventTargetHasClass: function(target, className) {
                      return target.classList.contains(className);
                    },
                    addClassToForwardIndicator: function(className) {
                      return _this113.forwardIndicator_.classList.add(
                        className
                      );
                    },
                    removeClassFromForwardIndicator: function(className) {
                      return _this113.forwardIndicator_.classList.remove(
                        className
                      );
                    },
                    addClassToBackIndicator: function(className) {
                      return _this113.backIndicator_.classList.add(className);
                    },
                    removeClassFromBackIndicator: function(className) {
                      return _this113.backIndicator_.classList.remove(
                        className
                      );
                    },
                    isRTL: function() {
                      return (
                        "rtl" ===
                        getComputedStyle(_this113.root_).getPropertyValue(
                          "direction"
                        )
                      );
                    },
                    registerBackIndicatorClickHandler: function(handler) {
                      return _this113.backIndicator_.addEventListener(
                        "click",
                        handler
                      );
                    },
                    deregisterBackIndicatorClickHandler: function(handler) {
                      return _this113.backIndicator_.removeEventListener(
                        "click",
                        handler
                      );
                    },
                    registerForwardIndicatorClickHandler: function(handler) {
                      return _this113.forwardIndicator_.addEventListener(
                        "click",
                        handler
                      );
                    },
                    deregisterForwardIndicatorClickHandler: function(handler) {
                      return _this113.forwardIndicator_.removeEventListener(
                        "click",
                        handler
                      );
                    },
                    registerCapturedInteractionHandler: function(evt, handler) {
                      return _this113.root_.addEventListener(evt, handler, !0);
                    },
                    deregisterCapturedInteractionHandler: function(
                      evt,
                      handler
                    ) {
                      return _this113.root_.removeEventListener(
                        evt,
                        handler,
                        !0
                      );
                    },
                    registerWindowResizeHandler: function(handler) {
                      return window.addEventListener("resize", handler);
                    },
                    deregisterWindowResizeHandler: function(handler) {
                      return window.removeEventListener("resize", handler);
                    },
                    getNumberOfTabs: function() {
                      return _this113.tabBar.tabs.length;
                    },
                    getComputedWidthForTabAtIndex: function(index) {
                      return _this113.tabBar.tabs[index].computedWidth;
                    },
                    getComputedLeftForTabAtIndex: function(index) {
                      return _this113.tabBar.tabs[index].computedLeft;
                    },
                    getOffsetWidthForScrollFrame: function() {
                      return _this113.scrollFrame_.offsetWidth;
                    },
                    getScrollLeftForScrollFrame: function() {
                      return _this113.scrollFrame_.scrollLeft;
                    },
                    setScrollLeftForScrollFrame: function(scrollLeftAmount) {
                      return (_this113.scrollFrame_.scrollLeft = scrollLeftAmount);
                    },
                    getOffsetWidthForTabBar: function() {
                      return _this113.tabBarEl_.offsetWidth;
                    },
                    setTransformStyleForTabBar: function(value) {
                      _this113.tabBarEl_.style.setProperty(
                        Object(
                          __WEBPACK_IMPORTED_MODULE_0__material_animation_index__.b
                        )(window, "transform"),
                        value
                      );
                    },
                    getOffsetLeftForEventTarget: function(target) {
                      return target.offsetLeft;
                    },
                    getOffsetWidthForEventTarget: function(target) {
                      return target.offsetWidth;
                    }
                  });
                }
              },
              {
                key: "layout",
                value: function() {
                  this.foundation_.layout();
                }
              },
              {
                key: "tabBar",
                get: function() {
                  return this.tabBar_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTabBarScroller(root);
                }
              }
            ]
          ),
          MDCTabBarScroller
        );
      })();
      __webpack_exports__.a = MDCTabBarScroller;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(105),
        MDCTabBarScrollerFoundation = (function(_WEBPACK_IMPORTED_MO54) {
          function MDCTabBarScrollerFoundation(adapter) {
            _classCallCheck(this, MDCTabBarScrollerFoundation);
            var _this114 = _possibleConstructorReturn(
              this,
              (
                MDCTabBarScrollerFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTabBarScrollerFoundation)
              ).call(
                this,
                Object.assign(
                  MDCTabBarScrollerFoundation.defaultAdapter,
                  adapter
                )
              )
            );
            return (
              (_this114.pointerDownRecognized_ = !1),
              (_this114.currentTranslateOffset_ = 0),
              (_this114.focusedTarget_ = null),
              (_this114.layoutFrame_ = 0),
              (_this114.scrollFrameScrollLeft_ = 0),
              (_this114.forwardIndicatorClickHandler_ = function(evt) {
                return _this114.scrollForward(evt);
              }),
              (_this114.backIndicatorClickHandler_ = function(evt) {
                return _this114.scrollBack(evt);
              }),
              (_this114.resizeHandler_ = function() {
                return _this114.layout();
              }),
              (_this114.interactionHandler_ = function(evt) {
                ("touchstart" != evt.type && "mousedown" != evt.type) ||
                  (_this114.pointerDownRecognized_ = !0),
                  _this114.handlePossibleTabKeyboardFocus_(evt),
                  "focus" == evt.type && (_this114.pointerDownRecognized_ = !1);
              }),
              _this114
            );
          }
          return (
            _inherits(
              MDCTabBarScrollerFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCTabBarScrollerFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    addClass: function() {},
                    removeClass: function() {},
                    eventTargetHasClass: function() {
                      return !1;
                    },
                    addClassToForwardIndicator: function() {},
                    removeClassFromForwardIndicator: function() {},
                    addClassToBackIndicator: function() {},
                    removeClassFromBackIndicator: function() {},
                    isRTL: function() {
                      return !1;
                    },
                    registerBackIndicatorClickHandler: function() {},
                    deregisterBackIndicatorClickHandler: function() {},
                    registerForwardIndicatorClickHandler: function() {},
                    deregisterForwardIndicatorClickHandler: function() {},
                    registerCapturedInteractionHandler: function() {},
                    deregisterCapturedInteractionHandler: function() {},
                    registerWindowResizeHandler: function() {},
                    deregisterWindowResizeHandler: function() {},
                    getNumberOfTabs: function() {
                      return 0;
                    },
                    getComputedWidthForTabAtIndex: function() {
                      return 0;
                    },
                    getComputedLeftForTabAtIndex: function() {
                      return 0;
                    },
                    getOffsetWidthForScrollFrame: function() {
                      return 0;
                    },
                    getScrollLeftForScrollFrame: function() {
                      return 0;
                    },
                    setScrollLeftForScrollFrame: function() {},
                    getOffsetWidthForTabBar: function() {
                      return 0;
                    },
                    setTransformStyleForTabBar: function() {},
                    getOffsetLeftForEventTarget: function() {
                      return 0;
                    },
                    getOffsetWidthForEventTarget: function() {
                      return 0;
                    }
                  };
                }
              }
            ]),
            _createClass(MDCTabBarScrollerFoundation, [
              {
                key: "init",
                value: function() {
                  var _this115 = this;
                  this.adapter_.registerBackIndicatorClickHandler(
                    this.backIndicatorClickHandler_
                  ),
                    this.adapter_.registerForwardIndicatorClickHandler(
                      this.forwardIndicatorClickHandler_
                    ),
                    this.adapter_.registerWindowResizeHandler(
                      this.resizeHandler_
                    ),
                    ["touchstart", "mousedown", "focus"].forEach(function(
                      evtType
                    ) {
                      _this115.adapter_.registerCapturedInteractionHandler(
                        evtType,
                        _this115.interactionHandler_
                      );
                    }),
                    this.layout();
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this116 = this;
                  this.adapter_.deregisterBackIndicatorClickHandler(
                    this.backIndicatorClickHandler_
                  ),
                    this.adapter_.deregisterForwardIndicatorClickHandler(
                      this.forwardIndicatorClickHandler_
                    ),
                    this.adapter_.deregisterWindowResizeHandler(
                      this.resizeHandler_
                    ),
                    ["touchstart", "mousedown", "focus"].forEach(function(
                      evtType
                    ) {
                      _this116.adapter_.deregisterCapturedInteractionHandler(
                        evtType,
                        _this116.interactionHandler_
                      );
                    });
                }
              },
              {
                key: "scrollBack",
                value: function() {
                  var evt =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  evt && evt.preventDefault();
                  for (
                    var tabWidthAccumulator = 0,
                      scrollTargetIndex = 0,
                      i = this.adapter_.getNumberOfTabs() - 1;
                    i > 0;
                    i--
                  ) {
                    var tabOffsetLeft = this.adapter_.getComputedLeftForTabAtIndex(
                        i
                      ),
                      tabBarWidthLessTabOffsetLeft =
                        this.adapter_.getOffsetWidthForTabBar() - tabOffsetLeft,
                      tabIsNotOccluded =
                        tabOffsetLeft > this.currentTranslateOffset_;
                    if (
                      (this.isRTL_() &&
                        (tabIsNotOccluded =
                          tabBarWidthLessTabOffsetLeft >
                          this.currentTranslateOffset_),
                      !tabIsNotOccluded &&
                        (tabWidthAccumulator += this.adapter_.getComputedWidthForTabAtIndex(
                          i
                        )) > this.adapter_.getOffsetWidthForScrollFrame())
                    ) {
                      scrollTargetIndex = this.isRTL_() ? i + 1 : i;
                      break;
                    }
                  }
                  this.scrollToTabAtIndex(scrollTargetIndex);
                }
              },
              {
                key: "scrollForward",
                value: function() {
                  var evt =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : null;
                  evt && evt.preventDefault();
                  for (
                    var scrollFrameOffsetWidth =
                        this.adapter_.getOffsetWidthForScrollFrame() +
                        this.currentTranslateOffset_,
                      scrollTargetIndex = 0,
                      i = 0;
                    i < this.adapter_.getNumberOfTabs();
                    i++
                  ) {
                    var scrollTargetDetermined =
                      this.adapter_.getComputedLeftForTabAtIndex(i) +
                        this.adapter_.getComputedWidthForTabAtIndex(i) >
                      scrollFrameOffsetWidth;
                    if (this.isRTL_()) {
                      var frameOffsetAndTabWidth =
                          scrollFrameOffsetWidth -
                          this.adapter_.getComputedWidthForTabAtIndex(i),
                        _tabOffsetLeftAndWidth =
                          this.adapter_.getComputedLeftForTabAtIndex(i) +
                          this.adapter_.getComputedWidthForTabAtIndex(i);
                      scrollTargetDetermined =
                        this.adapter_.getOffsetWidthForTabBar() -
                          _tabOffsetLeftAndWidth >
                        frameOffsetAndTabWidth;
                    }
                    if (scrollTargetDetermined) {
                      scrollTargetIndex = i;
                      break;
                    }
                  }
                  this.scrollToTabAtIndex(scrollTargetIndex);
                }
              },
              {
                key: "layout",
                value: function() {
                  var _this117 = this;
                  cancelAnimationFrame(this.layoutFrame_),
                    (this.scrollFrameScrollLeft_ = this.adapter_.getScrollLeftForScrollFrame()),
                    (this.layoutFrame_ = requestAnimationFrame(function() {
                      return _this117.layout_();
                    }));
                }
              },
              {
                key: "isRTL_",
                value: function() {
                  return this.adapter_.isRTL();
                }
              },
              {
                key: "handlePossibleTabKeyboardFocus_",
                value: function(evt) {
                  if (
                    this.adapter_.eventTargetHasClass(
                      evt.target,
                      __WEBPACK_IMPORTED_MODULE_1__constants__.a.TAB
                    ) &&
                    !this.pointerDownRecognized_
                  ) {
                    var resetAmt = this.isRTL_()
                      ? this.scrollFrameScrollLeft_
                      : 0;
                    this.adapter_.setScrollLeftForScrollFrame(resetAmt),
                      (this.focusedTarget_ = evt.target);
                    var scrollFrameWidth = this.adapter_.getOffsetWidthForScrollFrame(),
                      tabBarWidth = this.adapter_.getOffsetWidthForTabBar(),
                      leftEdge = this.adapter_.getOffsetLeftForEventTarget(
                        this.focusedTarget_
                      ),
                      rightEdge =
                        leftEdge +
                        this.adapter_.getOffsetWidthForEventTarget(
                          this.focusedTarget_
                        ),
                      shouldScrollBack =
                        rightEdge <= this.currentTranslateOffset_,
                      shouldScrollForward =
                        rightEdge >
                        this.currentTranslateOffset_ + scrollFrameWidth;
                    if (this.isRTL_()) {
                      var normalizedLeftOffset = tabBarWidth - leftEdge;
                      (shouldScrollBack =
                        leftEdge >= tabBarWidth - this.currentTranslateOffset_),
                        (shouldScrollForward =
                          normalizedLeftOffset >
                          scrollFrameWidth + this.currentTranslateOffset_);
                    }
                    shouldScrollForward
                      ? this.scrollForward()
                      : shouldScrollBack && this.scrollBack(),
                      (this.pointerDownRecognized_ = !1);
                  }
                }
              },
              {
                key: "layout_",
                value: function() {
                  var frameWidth = this.adapter_.getOffsetWidthForScrollFrame();
                  this.adapter_.getOffsetWidthForTabBar() > frameWidth ||
                    (this.currentTranslateOffset_ = 0),
                    this.shiftFrame_(),
                    this.updateIndicatorEnabledStates_();
                }
              },
              {
                key: "scrollToTabAtIndex",
                value: function(index) {
                  var _this118 = this,
                    scrollTargetOffsetLeft = this.adapter_.getComputedLeftForTabAtIndex(
                      index
                    ),
                    scrollTargetOffsetWidth = this.adapter_.getComputedWidthForTabAtIndex(
                      index
                    );
                  (this.currentTranslateOffset_ = this.normalizeForRTL_(
                    scrollTargetOffsetLeft,
                    scrollTargetOffsetWidth
                  )),
                    requestAnimationFrame(function() {
                      return _this118.shiftFrame_();
                    });
                }
              },
              {
                key: "normalizeForRTL_",
                value: function(left, width) {
                  return this.isRTL_()
                    ? this.adapter_.getOffsetWidthForTabBar() - (left + width)
                    : left;
                }
              },
              {
                key: "shiftFrame_",
                value: function() {
                  var shiftAmount = this.isRTL_()
                    ? this.currentTranslateOffset_
                    : -this.currentTranslateOffset_;
                  this.adapter_.setTransformStyleForTabBar(
                    "translateX(" + shiftAmount + "px)"
                  ),
                    this.updateIndicatorEnabledStates_();
                }
              },
              {
                key: "updateIndicatorEnabledStates_",
                value: function() {
                  var INDICATOR_ENABLED =
                    __WEBPACK_IMPORTED_MODULE_1__constants__.a
                      .INDICATOR_ENABLED;
                  0 === this.currentTranslateOffset_
                    ? this.adapter_.removeClassFromBackIndicator(
                        INDICATOR_ENABLED
                      )
                    : this.adapter_.addClassToBackIndicator(INDICATOR_ENABLED),
                    this.adapter_.getOffsetWidthForTabBar() -
                      this.currentTranslateOffset_ >
                    this.adapter_.getOffsetWidthForScrollFrame()
                      ? this.adapter_.addClassToForwardIndicator(
                          INDICATOR_ENABLED
                        )
                      : this.adapter_.removeClassFromForwardIndicator(
                          INDICATOR_ENABLED
                        );
                }
              }
            ]),
            MDCTabBarScrollerFoundation
          );
        })();
      __webpack_exports__.a = MDCTabBarScrollerFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = {
        INDICATOR_FORWARD: "mdc-tab-bar-scroller__indicator--forward",
        INDICATOR_BACK: "mdc-tab-bar-scroller__indicator--back",
        INDICATOR_ENABLED: "mdc-tab-bar-scroller__indicator--enabled",
        TAB: "mdc-tab"
      };
      __webpack_exports__.a = cssClasses;
      var strings = {
        FRAME_SELECTOR: ".mdc-tab-bar-scroller__scroll-frame",
        TABS_SELECTOR: ".mdc-tab-bar-scroller__scroll-frame__tabs",
        TAB_SELECTOR: ".mdc-tab",
        INDICATOR_FORWARD_SELECTOR: ".mdc-tab-bar-scroller__indicator--forward",
        INDICATOR_BACK_SELECTOR: ".mdc-tab-bar-scroller__indicator--back"
      };
      __webpack_exports__.b = strings;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCTextField", function() {
          return MDCTextField;
        });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_2__material_ripple_util__ = __webpack_require__(
          8
        ),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(34),
        __WEBPACK_IMPORTED_MODULE_5__foundation__ = (__webpack_require__(35),
        __webpack_require__(109)),
        __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__ = __webpack_require__(
          13
        ),
        __WEBPACK_IMPORTED_MODULE_7__helper_text_index__ = __webpack_require__(
          110
        ),
        __WEBPACK_IMPORTED_MODULE_8__icon_index__ = __webpack_require__(111),
        __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__ = __webpack_require__(
          12
        ),
        __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__ = __webpack_require__(
          25
        );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCTextFieldFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_5__foundation__.a;
        }
      ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTextFieldHelperText",
          function() {
            return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__.a;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTextFieldHelperTextFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_7__helper_text_index__.b;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTextFieldIcon",
          function() {
            return __WEBPACK_IMPORTED_MODULE_8__icon_index__.a;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTextFieldIconFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_8__icon_index__.b;
          }
        );
      var MDCTextField = (function(_WEBPACK_IMPORTED_MO55) {
        function MDCTextField() {
          var _ref18;
          _classCallCheck(this, MDCTextField);
          for (
            var _len12 = arguments.length, args = Array(_len12), _key12 = 0;
            _key12 < _len12;
            _key12++
          )
            args[_key12] = arguments[_key12];
          var _this119 = _possibleConstructorReturn(
            this,
            (_ref18 =
              MDCTextField.__proto__ ||
              Object.getPrototypeOf(MDCTextField)).call.apply(
              _ref18,
              [this].concat(args)
            )
          );
          return (
            _this119.input_,
            _this119.ripple,
            _this119.lineRipple_,
            _this119.helperText_,
            _this119.icon_,
            _this119.label_,
            _this119.outline_,
            _this119
          );
        }
        return (
          _inherits(
            MDCTextField,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCTextField,
            [
              {
                key: "initialize",
                value: function() {
                  var rippleFactory =
                      arguments.length > 0 && void 0 !== arguments[0]
                        ? arguments[0]
                        : function(el, foundation) {
                            return new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple(
                              el,
                              foundation
                            );
                          },
                    lineRippleFactory =
                      arguments.length > 1 && void 0 !== arguments[1]
                        ? arguments[1]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_6__material_line_ripple_index__.MDCLineRipple(
                              el
                            );
                          },
                    helperTextFactory =
                      arguments.length > 2 && void 0 !== arguments[2]
                        ? arguments[2]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_7__helper_text_index__.a(
                              el
                            );
                          },
                    iconFactory =
                      arguments.length > 3 && void 0 !== arguments[3]
                        ? arguments[3]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_8__icon_index__.a(
                              el
                            );
                          },
                    _this120 = this,
                    labelFactory =
                      arguments.length > 4 && void 0 !== arguments[4]
                        ? arguments[4]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_9__material_floating_label_index__.MDCFloatingLabel(
                              el
                            );
                          },
                    outlineFactory =
                      arguments.length > 5 && void 0 !== arguments[5]
                        ? arguments[5]
                        : function(el) {
                            return new __WEBPACK_IMPORTED_MODULE_10__material_notched_outline_index__.MDCNotchedOutline(
                              el
                            );
                          };
                  this.input_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.d.INPUT_SELECTOR
                  );
                  var labelElement = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.d.LABEL_SELECTOR
                  );
                  labelElement && (this.label_ = labelFactory(labelElement));
                  var lineRippleElement = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.d
                      .LINE_RIPPLE_SELECTOR
                  );
                  lineRippleElement &&
                    (this.lineRipple_ = lineRippleFactory(lineRippleElement));
                  var outlineElement = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.d.OUTLINE_SELECTOR
                  );
                  if (
                    (outlineElement &&
                      (this.outline_ = outlineFactory(outlineElement)),
                    this.input_.hasAttribute(
                      __WEBPACK_IMPORTED_MODULE_3__constants__.d.ARIA_CONTROLS
                    ))
                  ) {
                    var helperTextElement = document.getElementById(
                      this.input_.getAttribute(
                        __WEBPACK_IMPORTED_MODULE_3__constants__.d.ARIA_CONTROLS
                      )
                    );
                    helperTextElement &&
                      (this.helperText_ = helperTextFactory(helperTextElement));
                  }
                  var iconElement = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.d.ICON_SELECTOR
                  );
                  if (
                    (iconElement && (this.icon_ = iconFactory(iconElement)),
                    (this.ripple = null),
                    this.root_.classList.contains(
                      __WEBPACK_IMPORTED_MODULE_3__constants__.b.BOX
                    ))
                  ) {
                    var MATCHES = Object(
                        __WEBPACK_IMPORTED_MODULE_2__material_ripple_util__.getMatchesProperty
                      )(HTMLElement.prototype),
                      adapter = Object.assign(
                        __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple.createAdapter(
                          this
                        ),
                        {
                          isSurfaceActive: function() {
                            return _this120.input_[MATCHES](":active");
                          },
                          registerInteractionHandler: function(type, handler) {
                            return _this120.input_.addEventListener(
                              type,
                              handler
                            );
                          },
                          deregisterInteractionHandler: function(
                            type,
                            handler
                          ) {
                            return _this120.input_.removeEventListener(
                              type,
                              handler
                            );
                          }
                        }
                      ),
                      foundation = new __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRippleFoundation(
                        adapter
                      );
                    this.ripple = rippleFactory(this.root_, foundation);
                  }
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.ripple && this.ripple.destroy(),
                    this.lineRipple_ && this.lineRipple_.destroy(),
                    this.helperText_ && this.helperText_.destroy(),
                    this.icon_ && this.icon_.destroy(),
                    this.label_ && this.label_.destroy(),
                    this.outline_ && this.outline_.destroy(),
                    _get(
                      MDCTextField.prototype.__proto__ ||
                        Object.getPrototypeOf(MDCTextField.prototype),
                      "destroy",
                      this
                    ).call(this);
                }
              },
              {
                key: "initialSyncWithDom",
                value: function() {
                  this.disabled = this.input_.disabled;
                }
              },
              {
                key: "layout",
                value: function() {
                  var openNotch = this.foundation_.shouldFloat;
                  this.foundation_.notchOutline(openNotch);
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this121 = this;
                  return new __WEBPACK_IMPORTED_MODULE_5__foundation__.a(
                    Object.assign(
                      {
                        addClass: function(className) {
                          return _this121.root_.classList.add(className);
                        },
                        removeClass: function(className) {
                          return _this121.root_.classList.remove(className);
                        },
                        hasClass: function(className) {
                          return _this121.root_.classList.contains(className);
                        },
                        registerTextFieldInteractionHandler: function(
                          evtType,
                          handler
                        ) {
                          return _this121.root_.addEventListener(
                            evtType,
                            handler
                          );
                        },
                        deregisterTextFieldInteractionHandler: function(
                          evtType,
                          handler
                        ) {
                          return _this121.root_.removeEventListener(
                            evtType,
                            handler
                          );
                        },
                        registerValidationAttributeChangeHandler: function(
                          handler
                        ) {
                          var getAttributesList = function(mutationsList) {
                              return mutationsList.map(function(mutation) {
                                return mutation.attributeName;
                              });
                            },
                            observer = new MutationObserver(function(
                              mutationsList
                            ) {
                              return handler(getAttributesList(mutationsList));
                            }),
                            targetNode = _this121.root_.querySelector(
                              __WEBPACK_IMPORTED_MODULE_3__constants__.d
                                .INPUT_SELECTOR
                            ),
                            config = { attributes: !0 };
                          return observer.observe(targetNode, config), observer;
                        },
                        deregisterValidationAttributeChangeHandler: function(
                          observer
                        ) {
                          return observer.disconnect();
                        },
                        isFocused: function() {
                          return (
                            document.activeElement ===
                            _this121.root_.querySelector(
                              __WEBPACK_IMPORTED_MODULE_3__constants__.d
                                .INPUT_SELECTOR
                            )
                          );
                        },
                        isRtl: function() {
                          return (
                            "rtl" ===
                            window
                              .getComputedStyle(_this121.root_)
                              .getPropertyValue("direction")
                          );
                        }
                      },
                      this.getInputAdapterMethods_(),
                      this.getLabelAdapterMethods_(),
                      this.getLineRippleAdapterMethods_(),
                      this.getOutlineAdapterMethods_()
                    ),
                    this.getFoundationMap_()
                  );
                }
              },
              {
                key: "getLabelAdapterMethods_",
                value: function() {
                  var _this122 = this;
                  return {
                    shakeLabel: function(shouldShake) {
                      return _this122.label_.shake(shouldShake);
                    },
                    floatLabel: function(shouldFloat) {
                      return _this122.label_.float(shouldFloat);
                    },
                    hasLabel: function() {
                      return !!_this122.label_;
                    },
                    getLabelWidth: function() {
                      return _this122.label_.getWidth();
                    }
                  };
                }
              },
              {
                key: "getLineRippleAdapterMethods_",
                value: function() {
                  var _this123 = this;
                  return {
                    activateLineRipple: function() {
                      _this123.lineRipple_ && _this123.lineRipple_.activate();
                    },
                    deactivateLineRipple: function() {
                      _this123.lineRipple_ && _this123.lineRipple_.deactivate();
                    },
                    setLineRippleTransformOrigin: function(normalizedX) {
                      _this123.lineRipple_ &&
                        _this123.lineRipple_.setRippleCenter(normalizedX);
                    }
                  };
                }
              },
              {
                key: "getOutlineAdapterMethods_",
                value: function() {
                  var _this124 = this;
                  return {
                    notchOutline: function(labelWidth, isRtl) {
                      return _this124.outline_.notch(labelWidth, isRtl);
                    },
                    closeOutline: function() {
                      return _this124.outline_.closeNotch();
                    },
                    hasOutline: function() {
                      return !!_this124.outline_;
                    }
                  };
                }
              },
              {
                key: "getInputAdapterMethods_",
                value: function() {
                  var _this125 = this;
                  return {
                    registerInputInteractionHandler: function(
                      evtType,
                      handler
                    ) {
                      return _this125.input_.addEventListener(evtType, handler);
                    },
                    deregisterInputInteractionHandler: function(
                      evtType,
                      handler
                    ) {
                      return _this125.input_.removeEventListener(
                        evtType,
                        handler
                      );
                    },
                    getNativeInput: function() {
                      return _this125.input_;
                    }
                  };
                }
              },
              {
                key: "getFoundationMap_",
                value: function() {
                  return {
                    helperText: this.helperText_
                      ? this.helperText_.foundation
                      : void 0,
                    icon: this.icon_ ? this.icon_.foundation : void 0
                  };
                }
              },
              {
                key: "value",
                get: function() {
                  return this.foundation_.getValue();
                },
                set: function(value) {
                  this.foundation_.setValue(value);
                }
              },
              {
                key: "disabled",
                get: function() {
                  return this.foundation_.isDisabled();
                },
                set: function(disabled) {
                  this.foundation_.setDisabled(disabled);
                }
              },
              {
                key: "valid",
                get: function() {
                  return this.foundation_.isValid();
                },
                set: function(valid) {
                  this.foundation_.setValid(valid);
                }
              },
              {
                key: "required",
                get: function() {
                  return this.input_.required;
                },
                set: function(required) {
                  this.input_.required = required;
                }
              },
              {
                key: "pattern",
                get: function() {
                  return this.input_.pattern;
                },
                set: function(pattern) {
                  this.input_.pattern = pattern;
                }
              },
              {
                key: "minLength",
                get: function() {
                  return this.input_.minLength;
                },
                set: function(minLength) {
                  this.input_.minLength = minLength;
                }
              },
              {
                key: "maxLength",
                get: function() {
                  return this.input_.maxLength;
                },
                set: function(maxLength) {
                  maxLength < 0
                    ? this.input_.removeAttribute("maxLength")
                    : (this.input_.maxLength = maxLength);
                }
              },
              {
                key: "min",
                get: function() {
                  return this.input_.min;
                },
                set: function(min) {
                  this.input_.min = min;
                }
              },
              {
                key: "max",
                get: function() {
                  return this.input_.max;
                },
                set: function(max) {
                  this.input_.max = max;
                }
              },
              {
                key: "step",
                get: function() {
                  return this.input_.step;
                },
                set: function(step) {
                  this.input_.step = step;
                }
              },
              {
                key: "helperTextContent",
                set: function(content) {
                  this.foundation_.setHelperTextContent(content);
                }
              },
              {
                key: "iconAriaLabel",
                set: function(label) {
                  this.foundation_.setIconAriaLabel(label);
                }
              },
              {
                key: "iconContent",
                set: function(content) {
                  this.foundation_.setIconContent(content);
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTextField(root);
                }
              }
            ]
          ),
          MDCTextField
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return strings;
      }),
        __webpack_require__.d(__webpack_exports__, "a", function() {
          return cssClasses;
        });
      var strings = { ARIA_HIDDEN: "aria-hidden", ROLE: "role" },
        cssClasses = {
          HELPER_TEXT_PERSISTENT: "mdc-text-field-helper-text--persistent",
          HELPER_TEXT_VALIDATION_MSG:
            "mdc-text-field-helper-text--validation-msg"
        };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return strings;
      });
      var strings = { ICON_EVENT: "MDCTextField:icon", ICON_ROLE: "button" };
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_4__constants__ = (__webpack_require__(14),
        __webpack_require__(15),
        __webpack_require__(35),
        __webpack_require__(34)),
        MDCTextFieldFoundation = (function(_WEBPACK_IMPORTED_MO56) {
          function MDCTextFieldFoundation(adapter) {
            var foundationMap =
              arguments.length > 1 && void 0 !== arguments[1]
                ? arguments[1]
                : {};
            _classCallCheck(this, MDCTextFieldFoundation);
            var _this126 = _possibleConstructorReturn(
              this,
              (
                MDCTextFieldFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTextFieldFoundation)
              ).call(
                this,
                Object.assign(MDCTextFieldFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this126.helperText_ = foundationMap.helperText),
              (_this126.icon_ = foundationMap.icon),
              (_this126.isFocused_ = !1),
              (_this126.receivedUserInput_ = !1),
              (_this126.useCustomValidityChecking_ = !1),
              (_this126.isValid_ = !0),
              (_this126.inputFocusHandler_ = function() {
                return _this126.activateFocus();
              }),
              (_this126.inputBlurHandler_ = function() {
                return _this126.deactivateFocus();
              }),
              (_this126.inputInputHandler_ = function() {
                return _this126.autoCompleteFocus();
              }),
              (_this126.setPointerXOffset_ = function(evt) {
                return _this126.setTransformOrigin(evt);
              }),
              (_this126.textFieldInteractionHandler_ = function() {
                return _this126.handleTextFieldInteraction();
              }),
              (_this126.validationAttributeChangeHandler_ = function(
                attributesList
              ) {
                return _this126.handleValidationAttributeChange(attributesList);
              }),
              _this126.validationObserver_,
              _this126
            );
          }
          return (
            _inherits(
              MDCTextFieldFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(
              MDCTextFieldFoundation,
              [
                {
                  key: "shouldShake",
                  get: function() {
                    return !this.isValid() && !this.isFocused_;
                  }
                },
                {
                  key: "shouldFloat",
                  get: function() {
                    return (
                      this.isFocused_ || !!this.getValue() || this.isBadInput_()
                    );
                  }
                }
              ],
              [
                {
                  key: "cssClasses",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_4__constants__.b;
                  }
                },
                {
                  key: "strings",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_4__constants__.d;
                  }
                },
                {
                  key: "numbers",
                  get: function() {
                    return __WEBPACK_IMPORTED_MODULE_4__constants__.c;
                  }
                },
                {
                  key: "defaultAdapter",
                  get: function() {
                    return {
                      addClass: function() {},
                      removeClass: function() {},
                      hasClass: function() {},
                      registerTextFieldInteractionHandler: function() {},
                      deregisterTextFieldInteractionHandler: function() {},
                      registerInputInteractionHandler: function() {},
                      deregisterInputInteractionHandler: function() {},
                      registerValidationAttributeChangeHandler: function() {},
                      deregisterValidationAttributeChangeHandler: function() {},
                      getNativeInput: function() {},
                      isFocused: function() {},
                      isRtl: function() {},
                      activateLineRipple: function() {},
                      deactivateLineRipple: function() {},
                      setLineRippleTransformOrigin: function() {},
                      shakeLabel: function() {},
                      floatLabel: function() {},
                      hasLabel: function() {},
                      getLabelWidth: function() {},
                      hasOutline: function() {},
                      notchOutline: function() {},
                      closeOutline: function() {}
                    };
                  }
                }
              ]
            ),
            _createClass(MDCTextFieldFoundation, [
              {
                key: "init",
                value: function() {
                  var _this127 = this;
                  this.adapter_.addClass(
                    MDCTextFieldFoundation.cssClasses.UPGRADED
                  ),
                    this.adapter_.hasLabel() &&
                      (this.getValue() || this.isBadInput_()) &&
                      (this.adapter_.floatLabel(this.shouldFloat),
                      this.notchOutline(this.shouldFloat)),
                    this.adapter_.isFocused() && this.inputFocusHandler_(),
                    this.adapter_.registerInputInteractionHandler(
                      "focus",
                      this.inputFocusHandler_
                    ),
                    this.adapter_.registerInputInteractionHandler(
                      "blur",
                      this.inputBlurHandler_
                    ),
                    this.adapter_.registerInputInteractionHandler(
                      "input",
                      this.inputInputHandler_
                    ),
                    ["mousedown", "touchstart"].forEach(function(evtType) {
                      _this127.adapter_.registerInputInteractionHandler(
                        evtType,
                        _this127.setPointerXOffset_
                      );
                    }),
                    ["click", "keydown"].forEach(function(evtType) {
                      _this127.adapter_.registerTextFieldInteractionHandler(
                        evtType,
                        _this127.textFieldInteractionHandler_
                      );
                    }),
                    (this.validationObserver_ = this.adapter_.registerValidationAttributeChangeHandler(
                      this.validationAttributeChangeHandler_
                    ));
                }
              },
              {
                key: "destroy",
                value: function() {
                  var _this128 = this;
                  this.adapter_.removeClass(
                    MDCTextFieldFoundation.cssClasses.UPGRADED
                  ),
                    this.adapter_.deregisterInputInteractionHandler(
                      "focus",
                      this.inputFocusHandler_
                    ),
                    this.adapter_.deregisterInputInteractionHandler(
                      "blur",
                      this.inputBlurHandler_
                    ),
                    this.adapter_.deregisterInputInteractionHandler(
                      "input",
                      this.inputInputHandler_
                    ),
                    ["mousedown", "touchstart"].forEach(function(evtType) {
                      _this128.adapter_.deregisterInputInteractionHandler(
                        evtType,
                        _this128.setPointerXOffset_
                      );
                    }),
                    ["click", "keydown"].forEach(function(evtType) {
                      _this128.adapter_.deregisterTextFieldInteractionHandler(
                        evtType,
                        _this128.textFieldInteractionHandler_
                      );
                    }),
                    this.adapter_.deregisterValidationAttributeChangeHandler(
                      this.validationObserver_
                    );
                }
              },
              {
                key: "handleTextFieldInteraction",
                value: function() {
                  this.adapter_.getNativeInput().disabled ||
                    (this.receivedUserInput_ = !0);
                }
              },
              {
                key: "handleValidationAttributeChange",
                value: function(attributesList) {
                  var _this129 = this;
                  attributesList.some(function(attributeName) {
                    if (
                      __WEBPACK_IMPORTED_MODULE_4__constants__.a.indexOf(
                        attributeName
                      ) > -1
                    )
                      return _this129.styleValidity_(!0), !0;
                  });
                }
              },
              {
                key: "notchOutline",
                value: function(openNotch) {
                  if (this.adapter_.hasOutline() && this.adapter_.hasLabel())
                    if (openNotch) {
                      var labelScale = this.adapter_.hasClass(
                          __WEBPACK_IMPORTED_MODULE_4__constants__.b.DENSE
                        )
                          ? __WEBPACK_IMPORTED_MODULE_4__constants__.c
                              .DENSE_LABEL_SCALE
                          : __WEBPACK_IMPORTED_MODULE_4__constants__.c
                              .LABEL_SCALE,
                        labelWidth = this.adapter_.getLabelWidth() * labelScale,
                        isRtl = this.adapter_.isRtl();
                      this.adapter_.notchOutline(labelWidth, isRtl);
                    } else this.adapter_.closeOutline();
                }
              },
              {
                key: "activateFocus",
                value: function() {
                  (this.isFocused_ = !0),
                    this.styleFocused_(this.isFocused_),
                    this.adapter_.activateLineRipple(),
                    this.notchOutline(this.shouldFloat),
                    this.adapter_.hasLabel() &&
                      (this.adapter_.shakeLabel(this.shouldShake),
                      this.adapter_.floatLabel(this.shouldFloat)),
                    this.helperText_ && this.helperText_.showToScreenReader();
                }
              },
              {
                key: "setTransformOrigin",
                value: function(evt) {
                  var targetClientRect = evt.target.getBoundingClientRect(),
                    normalizedX =
                      { x: evt.clientX, y: evt.clientY }.x -
                      targetClientRect.left;
                  this.adapter_.setLineRippleTransformOrigin(normalizedX);
                }
              },
              {
                key: "autoCompleteFocus",
                value: function() {
                  this.receivedUserInput_ || this.activateFocus();
                }
              },
              {
                key: "deactivateFocus",
                value: function() {
                  (this.isFocused_ = !1), this.adapter_.deactivateLineRipple();
                  var shouldRemoveLabelFloat =
                      !this.getNativeInput_().value && !this.isBadInput_(),
                    isValid = this.isValid();
                  this.styleValidity_(isValid),
                    this.styleFocused_(this.isFocused_),
                    this.adapter_.hasLabel() &&
                      (this.adapter_.shakeLabel(this.shouldShake),
                      this.adapter_.floatLabel(this.shouldFloat),
                      this.notchOutline(this.shouldFloat)),
                    shouldRemoveLabelFloat && (this.receivedUserInput_ = !1);
                }
              },
              {
                key: "getValue",
                value: function() {
                  return this.getNativeInput_().value;
                }
              },
              {
                key: "setValue",
                value: function(value) {
                  this.getNativeInput_().value = value;
                  var isValid = this.isValid();
                  this.styleValidity_(isValid),
                    this.adapter_.hasLabel() &&
                      (this.adapter_.shakeLabel(this.shouldShake),
                      this.adapter_.floatLabel(this.shouldFloat),
                      this.notchOutline(this.shouldFloat));
                }
              },
              {
                key: "isValid",
                value: function() {
                  return this.useCustomValidityChecking_
                    ? this.isValid_
                    : this.isNativeInputValid_();
                }
              },
              {
                key: "setValid",
                value: function(isValid) {
                  (this.useCustomValidityChecking_ = !0),
                    (this.isValid_ = isValid),
                    (isValid = this.isValid()),
                    this.styleValidity_(isValid),
                    this.adapter_.hasLabel() &&
                      this.adapter_.shakeLabel(this.shouldShake);
                }
              },
              {
                key: "isDisabled",
                value: function() {
                  return this.getNativeInput_().disabled;
                }
              },
              {
                key: "setDisabled",
                value: function(disabled) {
                  (this.getNativeInput_().disabled = disabled),
                    this.styleDisabled_(disabled);
                }
              },
              {
                key: "setHelperTextContent",
                value: function(content) {
                  this.helperText_ && this.helperText_.setContent(content);
                }
              },
              {
                key: "setIconAriaLabel",
                value: function(label) {
                  this.icon_ && this.icon_.setAriaLabel(label);
                }
              },
              {
                key: "setIconContent",
                value: function(content) {
                  this.icon_ && this.icon_.setContent(content);
                }
              },
              {
                key: "isBadInput_",
                value: function() {
                  return this.getNativeInput_().validity.badInput;
                }
              },
              {
                key: "isNativeInputValid_",
                value: function() {
                  return this.getNativeInput_().validity.valid;
                }
              },
              {
                key: "styleValidity_",
                value: function(isValid) {
                  var INVALID = MDCTextFieldFoundation.cssClasses.INVALID;
                  isValid
                    ? this.adapter_.removeClass(INVALID)
                    : this.adapter_.addClass(INVALID),
                    this.helperText_ && this.helperText_.setValidity(isValid);
                }
              },
              {
                key: "styleFocused_",
                value: function(isFocused) {
                  var FOCUSED = MDCTextFieldFoundation.cssClasses.FOCUSED;
                  isFocused
                    ? this.adapter_.addClass(FOCUSED)
                    : this.adapter_.removeClass(FOCUSED);
                }
              },
              {
                key: "styleDisabled_",
                value: function(isDisabled) {
                  var _MDCTextFieldFoundati = MDCTextFieldFoundation.cssClasses,
                    DISABLED = _MDCTextFieldFoundati.DISABLED,
                    INVALID = _MDCTextFieldFoundati.INVALID;
                  isDisabled
                    ? (this.adapter_.addClass(DISABLED),
                      this.adapter_.removeClass(INVALID))
                    : this.adapter_.removeClass(DISABLED),
                    this.icon_ && this.icon_.setDisabled(isDisabled);
                }
              },
              {
                key: "getNativeInput_",
                value: function() {
                  return (
                    this.adapter_.getNativeInput() || {
                      value: "",
                      disabled: !1,
                      validity: { badInput: !1, valid: !0 }
                    }
                  );
                }
              }
            ]),
            MDCTextFieldFoundation
          );
        })();
      __webpack_exports__.a = MDCTextFieldFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return MDCTextFieldHelperText;
      });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(36),
        __webpack_require__(14));
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
      });
      var MDCTextFieldHelperText = (function(_WEBPACK_IMPORTED_MO57) {
        function MDCTextFieldHelperText() {
          return (
            _classCallCheck(this, MDCTextFieldHelperText),
            _possibleConstructorReturn(
              this,
              (
                MDCTextFieldHelperText.__proto__ ||
                Object.getPrototypeOf(MDCTextFieldHelperText)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCTextFieldHelperText,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCTextFieldHelperText,
            [
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this131 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a(
                    Object.assign({
                      addClass: function(className) {
                        return _this131.root_.classList.add(className);
                      },
                      removeClass: function(className) {
                        return _this131.root_.classList.remove(className);
                      },
                      hasClass: function(className) {
                        return _this131.root_.classList.contains(className);
                      },
                      setAttr: function(attr, value) {
                        return _this131.root_.setAttribute(attr, value);
                      },
                      removeAttr: function(attr) {
                        return _this131.root_.removeAttribute(attr);
                      },
                      setContent: function(content) {
                        _this131.root_.textContent = content;
                      }
                    })
                  );
                }
              },
              {
                key: "foundation",
                get: function() {
                  return this.foundation_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTextFieldHelperText(root);
                }
              }
            ]
          ),
          MDCTextFieldHelperText
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.d(__webpack_exports__, "a", function() {
        return MDCTextFieldIcon;
      });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(37),
        __webpack_require__(15));
      __webpack_require__.d(__webpack_exports__, "b", function() {
        return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
      });
      var MDCTextFieldIcon = (function(_WEBPACK_IMPORTED_MO58) {
        function MDCTextFieldIcon() {
          return (
            _classCallCheck(this, MDCTextFieldIcon),
            _possibleConstructorReturn(
              this,
              (
                MDCTextFieldIcon.__proto__ ||
                Object.getPrototypeOf(MDCTextFieldIcon)
              ).apply(this, arguments)
            )
          );
        }
        return (
          _inherits(
            MDCTextFieldIcon,
            __WEBPACK_IMPORTED_MODULE_0__material_base_component__["a"]
          ),
          _createClass(
            MDCTextFieldIcon,
            [
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this133 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a(
                    Object.assign({
                      getAttr: function(attr) {
                        return _this133.root_.getAttribute(attr);
                      },
                      setAttr: function(attr, value) {
                        return _this133.root_.setAttribute(attr, value);
                      },
                      removeAttr: function(attr) {
                        return _this133.root_.removeAttribute(attr);
                      },
                      setContent: function(content) {
                        _this133.root_.textContent = content;
                      },
                      registerInteractionHandler: function(evtType, handler) {
                        return _this133.root_.addEventListener(
                          evtType,
                          handler
                        );
                      },
                      deregisterInteractionHandler: function(evtType, handler) {
                        return _this133.root_.removeEventListener(
                          evtType,
                          handler
                        );
                      },
                      notifyIconAction: function() {
                        return _this133.emit(
                          __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                            .ICON_EVENT,
                          {},
                          !0
                        );
                      }
                    })
                  );
                }
              },
              {
                key: "foundation",
                get: function() {
                  return this.foundation_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTextFieldIcon(root);
                }
              }
            ]
          ),
          MDCTextFieldIcon
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 });
      var __WEBPACK_IMPORTED_MODULE_0__material_base_index__ = __webpack_require__(
          2
        ),
        __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = __webpack_require__(113);
      __webpack_require__.d(
        __webpack_exports__,
        "MDCToolbarFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_2__foundation__.a;
        }
      );
      var MDCToolbar = (function(_WEBPACK_IMPORTED_MO59) {
        function MDCToolbar() {
          return (
            _classCallCheck(this, MDCToolbar),
            _possibleConstructorReturn(
              this,
              (MDCToolbar.__proto__ || Object.getPrototypeOf(MDCToolbar)).apply(
                this,
                arguments
              )
            )
          );
        }
        return (
          _inherits(
            MDCToolbar,
            __WEBPACK_IMPORTED_MODULE_0__material_base_index__["MDCComponent"]
          ),
          _createClass(
            MDCToolbar,
            [
              {
                key: "initialize",
                value: function() {
                  this.ripples_ = [].map.call(
                    this.root_.querySelectorAll(
                      __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                        .ICON_SELECTOR
                    ),
                    function(icon) {
                      var ripple = __WEBPACK_IMPORTED_MODULE_1__material_ripple_index__.MDCRipple.attachTo(
                        icon
                      );
                      return (ripple.unbounded = !0), ripple;
                    }
                  );
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.ripples_.forEach(function(ripple) {
                    ripple.destroy();
                  }),
                    _get(
                      MDCToolbar.prototype.__proto__ ||
                        Object.getPrototypeOf(MDCToolbar.prototype),
                      "destroy",
                      this
                    ).call(this);
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this135 = this;
                  return new __WEBPACK_IMPORTED_MODULE_2__foundation__.a({
                    hasClass: function(className) {
                      return _this135.root_.classList.contains(className);
                    },
                    addClass: function(className) {
                      return _this135.root_.classList.add(className);
                    },
                    removeClass: function(className) {
                      return _this135.root_.classList.remove(className);
                    },
                    registerScrollHandler: function(handler) {
                      return window.addEventListener("scroll", handler);
                    },
                    deregisterScrollHandler: function(handler) {
                      return window.removeEventListener("scroll", handler);
                    },
                    registerResizeHandler: function(handler) {
                      return window.addEventListener("resize", handler);
                    },
                    deregisterResizeHandler: function(handler) {
                      return window.removeEventListener("resize", handler);
                    },
                    getViewportWidth: function() {
                      return window.innerWidth;
                    },
                    getViewportScrollY: function() {
                      return window.pageYOffset;
                    },
                    getOffsetHeight: function() {
                      return _this135.root_.offsetHeight;
                    },
                    getFirstRowElementOffsetHeight: function() {
                      return _this135.firstRowElement_.offsetHeight;
                    },
                    notifyChange: function(evtData) {
                      return _this135.emit(
                        __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                          .CHANGE_EVENT,
                        evtData
                      );
                    },
                    setStyle: function(property, value) {
                      return _this135.root_.style.setProperty(property, value);
                    },
                    setStyleForTitleElement: function(property, value) {
                      return _this135.titleElement_.style.setProperty(
                        property,
                        value
                      );
                    },
                    setStyleForFlexibleRowElement: function(property, value) {
                      return _this135.firstRowElement_.style.setProperty(
                        property,
                        value
                      );
                    },
                    setStyleForFixedAdjustElement: function(property, value) {
                      _this135.fixedAdjustElement &&
                        _this135.fixedAdjustElement.style.setProperty(
                          property,
                          value
                        );
                    }
                  });
                }
              },
              {
                key: "firstRowElement_",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                      .FIRST_ROW_SELECTOR
                  );
                }
              },
              {
                key: "titleElement_",
                get: function() {
                  return this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_2__foundation__.a.strings
                      .TITLE_SELECTOR
                  );
                }
              },
              {
                key: "fixedAdjustElement",
                set: function(fixedAdjustElement) {
                  (this.fixedAdjustElement_ = fixedAdjustElement),
                    this.foundation_.updateAdjustElementStyles();
                },
                get: function() {
                  return this.fixedAdjustElement_;
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCToolbar(root);
                }
              }
            ]
          ),
          MDCToolbar
        );
      })();
      __webpack_exports__.MDCToolbar = MDCToolbar;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__ = __webpack_require__(
          0
        ),
        __WEBPACK_IMPORTED_MODULE_1__constants__ = __webpack_require__(114),
        MDCToolbarFoundation = (function(_WEBPACK_IMPORTED_MO60) {
          function MDCToolbarFoundation(adapter) {
            _classCallCheck(this, MDCToolbarFoundation);
            var _this136 = _possibleConstructorReturn(
              this,
              (
                MDCToolbarFoundation.__proto__ ||
                Object.getPrototypeOf(MDCToolbarFoundation)
              ).call(
                this,
                Object.assign(MDCToolbarFoundation.defaultAdapter, adapter)
              )
            );
            return (
              (_this136.resizeHandler_ = function() {
                return _this136.checkRowHeight_();
              }),
              (_this136.scrollHandler_ = function() {
                return _this136.updateToolbarStyles_();
              }),
              (_this136.checkRowHeightFrame_ = 0),
              (_this136.scrollFrame_ = 0),
              (_this136.executedLastChange_ = !1),
              (_this136.calculations_ = {
                toolbarRowHeight: 0,
                toolbarRatio: 0,
                flexibleExpansionRatio: 0,
                maxTranslateYRatio: 0,
                scrollThresholdRatio: 0,
                toolbarHeight: 0,
                flexibleExpansionHeight: 0,
                maxTranslateYDistance: 0,
                scrollThreshold: 0
              }),
              (_this136.fixed_ = !1),
              (_this136.fixedLastrow_ = !1),
              (_this136.hasFlexibleRow_ = !1),
              (_this136.useFlexDefaultBehavior_ = !1),
              _this136
            );
          }
          return (
            _inherits(
              MDCToolbarFoundation,
              __WEBPACK_IMPORTED_MODULE_0__material_base_foundation__["a"]
            ),
            _createClass(MDCToolbarFoundation, null, [
              {
                key: "cssClasses",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.a;
                }
              },
              {
                key: "strings",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.c;
                }
              },
              {
                key: "numbers",
                get: function() {
                  return __WEBPACK_IMPORTED_MODULE_1__constants__.b;
                }
              },
              {
                key: "defaultAdapter",
                get: function() {
                  return {
                    hasClass: function() {
                      return !1;
                    },
                    addClass: function() {},
                    removeClass: function() {},
                    registerScrollHandler: function() {},
                    deregisterScrollHandler: function() {},
                    registerResizeHandler: function() {},
                    deregisterResizeHandler: function() {},
                    getViewportWidth: function() {
                      return 0;
                    },
                    getViewportScrollY: function() {
                      return 0;
                    },
                    getOffsetHeight: function() {
                      return 0;
                    },
                    getFirstRowElementOffsetHeight: function() {
                      return 0;
                    },
                    notifyChange: function() {},
                    setStyle: function() {},
                    setStyleForTitleElement: function() {},
                    setStyleForFlexibleRowElement: function() {},
                    setStyleForFixedAdjustElement: function() {}
                  };
                }
              }
            ]),
            _createClass(MDCToolbarFoundation, [
              {
                key: "init",
                value: function() {
                  (this.fixed_ = this.adapter_.hasClass(
                    MDCToolbarFoundation.cssClasses.FIXED
                  )),
                    (this.fixedLastrow_ =
                      this.adapter_.hasClass(
                        MDCToolbarFoundation.cssClasses.FIXED_LASTROW
                      ) & this.fixed_),
                    (this.hasFlexibleRow_ = this.adapter_.hasClass(
                      MDCToolbarFoundation.cssClasses.TOOLBAR_ROW_FLEXIBLE
                    )),
                    this.hasFlexibleRow_ &&
                      (this.useFlexDefaultBehavior_ = this.adapter_.hasClass(
                        MDCToolbarFoundation.cssClasses
                          .FLEXIBLE_DEFAULT_BEHAVIOR
                      )),
                    this.initKeyRatio_(),
                    this.setKeyHeights_(),
                    this.adapter_.registerResizeHandler(this.resizeHandler_),
                    this.adapter_.registerScrollHandler(this.scrollHandler_);
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.adapter_.deregisterResizeHandler(this.resizeHandler_),
                    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
                }
              },
              {
                key: "updateAdjustElementStyles",
                value: function() {
                  this.fixed_ &&
                    this.adapter_.setStyleForFixedAdjustElement(
                      "margin-top",
                      this.calculations_.toolbarHeight + "px"
                    );
                }
              },
              {
                key: "getFlexibleExpansionRatio_",
                value: function(scrollTop) {
                  return Math.max(
                    0,
                    1 -
                      scrollTop /
                        (this.calculations_.flexibleExpansionHeight + 1e-4)
                  );
                }
              },
              {
                key: "checkRowHeight_",
                value: function() {
                  var _this137 = this;
                  cancelAnimationFrame(this.checkRowHeightFrame_),
                    (this.checkRowHeightFrame_ = requestAnimationFrame(
                      function() {
                        return _this137.setKeyHeights_();
                      }
                    ));
                }
              },
              {
                key: "setKeyHeights_",
                value: function() {
                  var newToolbarRowHeight = this.getRowHeight_();
                  newToolbarRowHeight !== this.calculations_.toolbarRowHeight &&
                    ((this.calculations_.toolbarRowHeight = newToolbarRowHeight),
                    (this.calculations_.toolbarHeight =
                      this.calculations_.toolbarRatio *
                      this.calculations_.toolbarRowHeight),
                    (this.calculations_.flexibleExpansionHeight =
                      this.calculations_.flexibleExpansionRatio *
                      this.calculations_.toolbarRowHeight),
                    (this.calculations_.maxTranslateYDistance =
                      this.calculations_.maxTranslateYRatio *
                      this.calculations_.toolbarRowHeight),
                    (this.calculations_.scrollThreshold =
                      this.calculations_.scrollThresholdRatio *
                      this.calculations_.toolbarRowHeight),
                    this.updateAdjustElementStyles(),
                    this.updateToolbarStyles_());
                }
              },
              {
                key: "updateToolbarStyles_",
                value: function() {
                  var _this138 = this;
                  cancelAnimationFrame(this.scrollFrame_),
                    (this.scrollFrame_ = requestAnimationFrame(function() {
                      var scrollTop = _this138.adapter_.getViewportScrollY(),
                        hasScrolledOutOfThreshold = _this138.scrolledOutOfThreshold_(
                          scrollTop
                        );
                      if (
                        !hasScrolledOutOfThreshold ||
                        !_this138.executedLastChange_
                      ) {
                        var flexibleExpansionRatio = _this138.getFlexibleExpansionRatio_(
                          scrollTop
                        );
                        _this138.updateToolbarFlexibleState_(
                          flexibleExpansionRatio
                        ),
                          _this138.fixedLastrow_ &&
                            _this138.updateToolbarFixedState_(scrollTop),
                          _this138.hasFlexibleRow_ &&
                            _this138.updateFlexibleRowElementStyles_(
                              flexibleExpansionRatio
                            ),
                          (_this138.executedLastChange_ = hasScrolledOutOfThreshold),
                          _this138.adapter_.notifyChange({
                            flexibleExpansionRatio: flexibleExpansionRatio
                          });
                      }
                    }));
                }
              },
              {
                key: "scrolledOutOfThreshold_",
                value: function(scrollTop) {
                  return scrollTop > this.calculations_.scrollThreshold;
                }
              },
              {
                key: "initKeyRatio_",
                value: function() {
                  var toolbarRowHeight = this.getRowHeight_(),
                    firstRowMaxRatio =
                      this.adapter_.getFirstRowElementOffsetHeight() /
                      toolbarRowHeight;
                  (this.calculations_.toolbarRatio =
                    this.adapter_.getOffsetHeight() / toolbarRowHeight),
                    (this.calculations_.flexibleExpansionRatio =
                      firstRowMaxRatio - 1),
                    (this.calculations_.maxTranslateYRatio = this.fixedLastrow_
                      ? this.calculations_.toolbarRatio - firstRowMaxRatio
                      : 0),
                    (this.calculations_.scrollThresholdRatio =
                      (this.fixedLastrow_
                        ? this.calculations_.toolbarRatio
                        : firstRowMaxRatio) - 1);
                }
              },
              {
                key: "getRowHeight_",
                value: function() {
                  var breakpoint =
                    MDCToolbarFoundation.numbers.TOOLBAR_MOBILE_BREAKPOINT;
                  return this.adapter_.getViewportWidth() < breakpoint
                    ? MDCToolbarFoundation.numbers.TOOLBAR_ROW_MOBILE_HEIGHT
                    : MDCToolbarFoundation.numbers.TOOLBAR_ROW_HEIGHT;
                }
              },
              {
                key: "updateToolbarFlexibleState_",
                value: function(flexibleExpansionRatio) {
                  this.adapter_.removeClass(
                    MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX
                  ),
                    this.adapter_.removeClass(
                      MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN
                    ),
                    1 === flexibleExpansionRatio
                      ? this.adapter_.addClass(
                          MDCToolbarFoundation.cssClasses.FLEXIBLE_MAX
                        )
                      : 0 === flexibleExpansionRatio &&
                        this.adapter_.addClass(
                          MDCToolbarFoundation.cssClasses.FLEXIBLE_MIN
                        );
                }
              },
              {
                key: "updateToolbarFixedState_",
                value: function(scrollTop) {
                  var translateDistance = Math.max(
                    0,
                    Math.min(
                      scrollTop - this.calculations_.flexibleExpansionHeight,
                      this.calculations_.maxTranslateYDistance
                    )
                  );
                  this.adapter_.setStyle(
                    "transform",
                    "translateY(" + -translateDistance + "px)"
                  ),
                    translateDistance ===
                    this.calculations_.maxTranslateYDistance
                      ? this.adapter_.addClass(
                          MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW
                        )
                      : this.adapter_.removeClass(
                          MDCToolbarFoundation.cssClasses.FIXED_AT_LAST_ROW
                        );
                }
              },
              {
                key: "updateFlexibleRowElementStyles_",
                value: function(flexibleExpansionRatio) {
                  if (this.fixed_) {
                    var height =
                      this.calculations_.flexibleExpansionHeight *
                      flexibleExpansionRatio;
                    this.adapter_.setStyleForFlexibleRowElement(
                      "height",
                      height + this.calculations_.toolbarRowHeight + "px"
                    );
                  }
                  this.useFlexDefaultBehavior_ &&
                    this.updateElementStylesDefaultBehavior_(
                      flexibleExpansionRatio
                    );
                }
              },
              {
                key: "updateElementStylesDefaultBehavior_",
                value: function(flexibleExpansionRatio) {
                  var maxTitleSize =
                      MDCToolbarFoundation.numbers.MAX_TITLE_SIZE,
                    minTitleSize = MDCToolbarFoundation.numbers.MIN_TITLE_SIZE,
                    currentTitleSize =
                      (maxTitleSize - minTitleSize) * flexibleExpansionRatio +
                      minTitleSize;
                  this.adapter_.setStyleForTitleElement(
                    "font-size",
                    currentTitleSize + "rem"
                  );
                }
              }
            ]),
            MDCToolbarFoundation
          );
        })();
      __webpack_exports__.a = MDCToolbarFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var cssClasses = {
        FIXED: "mdc-toolbar--fixed",
        FIXED_LASTROW: "mdc-toolbar--fixed-lastrow-only",
        FIXED_AT_LAST_ROW: "mdc-toolbar--fixed-at-last-row",
        TOOLBAR_ROW_FLEXIBLE: "mdc-toolbar--flexible",
        FLEXIBLE_DEFAULT_BEHAVIOR: "mdc-toolbar--flexible-default-behavior",
        FLEXIBLE_MAX: "mdc-toolbar--flexible-space-maximized",
        FLEXIBLE_MIN: "mdc-toolbar--flexible-space-minimized"
      };
      __webpack_exports__.a = cssClasses;
      var strings = {
        TITLE_SELECTOR: ".mdc-toolbar__title",
        ICON_SELECTOR: ".mdc-toolbar__icon",
        FIRST_ROW_SELECTOR: ".mdc-toolbar__row:first-child",
        CHANGE_EVENT: "MDCToolbar:change"
      };
      __webpack_exports__.c = strings;
      var numbers = {
        MAX_TITLE_SIZE: 2.125,
        MIN_TITLE_SIZE: 1.25,
        TOOLBAR_ROW_HEIGHT: 64,
        TOOLBAR_ROW_MOBILE_HEIGHT: 56,
        TOOLBAR_MOBILE_BREAKPOINT: 600
      };
      __webpack_exports__.b = numbers;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      Object.defineProperty(__webpack_exports__, "__esModule", { value: !0 }),
        __webpack_require__.d(__webpack_exports__, "MDCTopAppBar", function() {
          return MDCTopAppBar;
        });
      __webpack_require__(6);
      var __WEBPACK_IMPORTED_MODULE_1__material_base_component__ = __webpack_require__(
          1
        ),
        __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__ = __webpack_require__(
          3
        ),
        __WEBPACK_IMPORTED_MODULE_3__constants__ = __webpack_require__(7),
        __WEBPACK_IMPORTED_MODULE_4__foundation__ = __webpack_require__(10),
        __WEBPACK_IMPORTED_MODULE_5__fixed_foundation__ = __webpack_require__(
          116
        ),
        __WEBPACK_IMPORTED_MODULE_6__short_foundation__ = __webpack_require__(
          117
        ),
        __WEBPACK_IMPORTED_MODULE_7__standard_foundation__ = __webpack_require__(
          118
        );
      __webpack_require__.d(
        __webpack_exports__,
        "MDCTopAppBarBaseFoundation",
        function() {
          return __WEBPACK_IMPORTED_MODULE_4__foundation__.a;
        }
      ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCTopAppBarFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_7__standard_foundation__.a;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCFixedTopAppBarFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_5__fixed_foundation__.a;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          "MDCShortTopAppBarFoundation",
          function() {
            return __WEBPACK_IMPORTED_MODULE_6__short_foundation__.a;
          }
        );
      var MDCTopAppBar = (function(_WEBPACK_IMPORTED_MO61) {
        function MDCTopAppBar() {
          var _ref19;
          _classCallCheck(this, MDCTopAppBar);
          for (
            var _len13 = arguments.length, args = Array(_len13), _key13 = 0;
            _key13 < _len13;
            _key13++
          )
            args[_key13] = arguments[_key13];
          var _this139 = _possibleConstructorReturn(
            this,
            (_ref19 =
              MDCTopAppBar.__proto__ ||
              Object.getPrototypeOf(MDCTopAppBar)).call.apply(
              _ref19,
              [this].concat(args)
            )
          );
          return _this139.navIcon_, _this139.iconRipples_, _this139;
        }
        return (
          _inherits(
            MDCTopAppBar,
            __WEBPACK_IMPORTED_MODULE_1__material_base_component__["a"]
          ),
          _createClass(
            MDCTopAppBar,
            [
              {
                key: "initialize",
                value: function() {
                  var rippleFactory =
                    arguments.length > 0 && void 0 !== arguments[0]
                      ? arguments[0]
                      : function(el) {
                          return __WEBPACK_IMPORTED_MODULE_2__material_ripple_index__.MDCRipple.attachTo(
                            el
                          );
                        };
                  this.navIcon_ = this.root_.querySelector(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.c
                      .NAVIGATION_ICON_SELECTOR
                  );
                  var icons = [].slice.call(
                    this.root_.querySelectorAll(
                      __WEBPACK_IMPORTED_MODULE_3__constants__.c
                        .ACTION_ITEM_SELECTOR
                    )
                  );
                  this.navIcon_ && icons.push(this.navIcon_),
                    (this.iconRipples_ = icons.map(function(icon) {
                      var ripple = rippleFactory(icon);
                      return (ripple.unbounded = !0), ripple;
                    }));
                }
              },
              {
                key: "destroy",
                value: function() {
                  this.iconRipples_.forEach(function(iconRipple) {
                    return iconRipple.destroy();
                  }),
                    _get(
                      MDCTopAppBar.prototype.__proto__ ||
                        Object.getPrototypeOf(MDCTopAppBar.prototype),
                      "destroy",
                      this
                    ).call(this);
                }
              },
              {
                key: "getDefaultFoundation",
                value: function() {
                  var _this140 = this,
                    adapter = Object.assign({
                      hasClass: function(className) {
                        return _this140.root_.classList.contains(className);
                      },
                      addClass: function(className) {
                        return _this140.root_.classList.add(className);
                      },
                      removeClass: function(className) {
                        return _this140.root_.classList.remove(className);
                      },
                      setStyle: function(property, value) {
                        return _this140.root_.style.setProperty(
                          property,
                          value
                        );
                      },
                      getTopAppBarHeight: function() {
                        return _this140.root_.clientHeight;
                      },
                      registerNavigationIconInteractionHandler: function(
                        evtType,
                        handler
                      ) {
                        _this140.navIcon_ &&
                          _this140.navIcon_.addEventListener(evtType, handler);
                      },
                      deregisterNavigationIconInteractionHandler: function(
                        evtType,
                        handler
                      ) {
                        _this140.navIcon_ &&
                          _this140.navIcon_.removeEventListener(
                            evtType,
                            handler
                          );
                      },
                      notifyNavigationIconClicked: function() {
                        _this140.emit(
                          __WEBPACK_IMPORTED_MODULE_3__constants__.c
                            .NAVIGATION_EVENT,
                          {}
                        );
                      },
                      registerScrollHandler: function(handler) {
                        return window.addEventListener("scroll", handler);
                      },
                      deregisterScrollHandler: function(handler) {
                        return window.removeEventListener("scroll", handler);
                      },
                      registerResizeHandler: function(handler) {
                        return window.addEventListener("resize", handler);
                      },
                      deregisterResizeHandler: function(handler) {
                        return window.removeEventListener("resize", handler);
                      },
                      getViewportScrollY: function() {
                        return window.pageYOffset;
                      },
                      getTotalActionItems: function() {
                        return _this140.root_.querySelectorAll(
                          __WEBPACK_IMPORTED_MODULE_3__constants__.c
                            .ACTION_ITEM_SELECTOR
                        ).length;
                      }
                    });
                  return this.root_.classList.contains(
                    __WEBPACK_IMPORTED_MODULE_3__constants__.a.SHORT_CLASS
                  )
                    ? new __WEBPACK_IMPORTED_MODULE_6__short_foundation__.a(
                        adapter
                      )
                    : this.root_.classList.contains(
                        __WEBPACK_IMPORTED_MODULE_3__constants__.a.FIXED_CLASS
                      )
                      ? new __WEBPACK_IMPORTED_MODULE_5__fixed_foundation__.a(
                          adapter
                        )
                      : new __WEBPACK_IMPORTED_MODULE_7__standard_foundation__.a(
                          adapter
                        );
                }
              }
            ],
            [
              {
                key: "attachTo",
                value: function(root) {
                  return new MDCTopAppBar(root);
                }
              }
            ]
          ),
          MDCTopAppBar
        );
      })();
    },
    function(module, __webpack_exports__, __webpack_require__) {
      var __WEBPACK_IMPORTED_MODULE_0__constants__ = __webpack_require__(7),
        __WEBPACK_IMPORTED_MODULE_2__foundation__ = (__webpack_require__(6),
        __webpack_require__(10)),
        MDCFixedTopAppBarFoundation = (function(_WEBPACK_IMPORTED_MO62) {
          function MDCFixedTopAppBarFoundation(adapter) {
            _classCallCheck(this, MDCFixedTopAppBarFoundation);
            var _this141 = _possibleConstructorReturn(
              this,
              (
                MDCFixedTopAppBarFoundation.__proto__ ||
                Object.getPrototypeOf(MDCFixedTopAppBarFoundation)
              ).call(this, adapter)
            );
            return (
              (_this141.wasScrolled_ = !1),
              (_this141.scrollHandler_ = function() {
                return _this141.fixedScrollHandler_();
              }),
              _this141
            );
          }
          return (
            _inherits(
              MDCFixedTopAppBarFoundation,
              __WEBPACK_IMPORTED_MODULE_2__foundation__["a"]
            ),
            _createClass(MDCFixedTopAppBarFoundation, [
              {
                key: "init",
                value: function() {
                  _get(
                    MDCFixedTopAppBarFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCFixedTopAppBarFoundation.prototype
                      ),
                    "init",
                    this
                  ).call(this),
                    this.adapter_.registerScrollHandler(this.scrollHandler_);
                }
              },
              {
                key: "destroy",
                value: function() {
                  _get(
                    MDCFixedTopAppBarFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCFixedTopAppBarFoundation.prototype
                      ),
                    "destroy",
                    this
                  ).call(this),
                    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
                }
              },
              {
                key: "fixedScrollHandler_",
                value: function() {
                  this.adapter_.getViewportScrollY() <= 0
                    ? this.wasScrolled_ &&
                      (this.adapter_.removeClass(
                        __WEBPACK_IMPORTED_MODULE_0__constants__.a
                          .FIXED_SCROLLED_CLASS
                      ),
                      (this.wasScrolled_ = !1))
                    : this.wasScrolled_ ||
                      (this.adapter_.addClass(
                        __WEBPACK_IMPORTED_MODULE_0__constants__.a
                          .FIXED_SCROLLED_CLASS
                      ),
                      (this.wasScrolled_ = !0));
                }
              }
            ]),
            MDCFixedTopAppBarFoundation
          );
        })();
      __webpack_exports__.a = MDCFixedTopAppBarFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__(6);
      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(10),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(7),
        MDCShortTopAppBarFoundation = (function(_WEBPACK_IMPORTED_MO63) {
          function MDCShortTopAppBarFoundation(adapter) {
            _classCallCheck(this, MDCShortTopAppBarFoundation);
            var _this142 = _possibleConstructorReturn(
              this,
              (
                MDCShortTopAppBarFoundation.__proto__ ||
                Object.getPrototypeOf(MDCShortTopAppBarFoundation)
              ).call(this, adapter)
            );
            return (
              (_this142.isCollapsed = !1),
              (_this142.scrollHandler_ = function() {
                return _this142.shortAppBarScrollHandler_();
              }),
              _this142
            );
          }
          return (
            _inherits(
              MDCShortTopAppBarFoundation,
              __WEBPACK_IMPORTED_MODULE_1__foundation__["a"]
            ),
            _createClass(MDCShortTopAppBarFoundation, [
              {
                key: "init",
                value: function() {
                  _get(
                    MDCShortTopAppBarFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCShortTopAppBarFoundation.prototype
                      ),
                    "init",
                    this
                  ).call(this);
                  var isAlwaysCollapsed = this.adapter_.hasClass(
                    __WEBPACK_IMPORTED_MODULE_2__constants__.a
                      .SHORT_COLLAPSED_CLASS
                  );
                  this.adapter_.getTotalActionItems() > 0 &&
                    this.adapter_.addClass(
                      __WEBPACK_IMPORTED_MODULE_2__constants__.a
                        .SHORT_HAS_ACTION_ITEM_CLASS
                    ),
                    isAlwaysCollapsed ||
                      (this.adapter_.registerScrollHandler(this.scrollHandler_),
                      this.shortAppBarScrollHandler_());
                }
              },
              {
                key: "destroy",
                value: function() {
                  _get(
                    MDCShortTopAppBarFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(
                        MDCShortTopAppBarFoundation.prototype
                      ),
                    "destroy",
                    this
                  ).call(this),
                    this.adapter_.deregisterScrollHandler(this.scrollHandler_);
                }
              },
              {
                key: "shortAppBarScrollHandler_",
                value: function() {
                  this.adapter_.getViewportScrollY() <= 0
                    ? this.isCollapsed &&
                      (this.adapter_.removeClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .SHORT_COLLAPSED_CLASS
                      ),
                      (this.isCollapsed = !1))
                    : this.isCollapsed ||
                      (this.adapter_.addClass(
                        __WEBPACK_IMPORTED_MODULE_2__constants__.a
                          .SHORT_COLLAPSED_CLASS
                      ),
                      (this.isCollapsed = !0));
                }
              }
            ]),
            MDCShortTopAppBarFoundation
          );
        })();
      __webpack_exports__.a = MDCShortTopAppBarFoundation;
    },
    function(module, __webpack_exports__, __webpack_require__) {
      __webpack_require__(6);
      var __WEBPACK_IMPORTED_MODULE_1__foundation__ = __webpack_require__(10),
        __WEBPACK_IMPORTED_MODULE_2__constants__ = __webpack_require__(7),
        INITIAL_VALUE = 0,
        MDCTopAppBarFoundation = (function(_WEBPACK_IMPORTED_MO64) {
          function MDCTopAppBarFoundation(adapter) {
            _classCallCheck(this, MDCTopAppBarFoundation);
            var _this143 = _possibleConstructorReturn(
              this,
              (
                MDCTopAppBarFoundation.__proto__ ||
                Object.getPrototypeOf(MDCTopAppBarFoundation)
              ).call(this, adapter)
            );
            return (
              (_this143.lastScrollPosition_ = _this143.adapter_.getViewportScrollY()),
              (_this143.topAppBarHeight_ = _this143.adapter_.getTopAppBarHeight()),
              (_this143.wasDocked_ = !0),
              (_this143.isDockedShowing_ = !0),
              (_this143.currentAppBarOffsetTop_ = 0),
              (_this143.isCurrentlyBeingResized_ = !1),
              (_this143.resizeThrottleId_ = INITIAL_VALUE),
              (_this143.resizeDebounceId_ = INITIAL_VALUE),
              (_this143.scrollHandler_ = function() {
                return _this143.topAppBarScrollHandler_();
              }),
              (_this143.resizeHandler_ = function() {
                return _this143.topAppBarResizeHandler_();
              }),
              _this143
            );
          }
          return (
            _inherits(
              MDCTopAppBarFoundation,
              __WEBPACK_IMPORTED_MODULE_1__foundation__["a"]
            ),
            _createClass(MDCTopAppBarFoundation, [
              {
                key: "init",
                value: function() {
                  _get(
                    MDCTopAppBarFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(MDCTopAppBarFoundation.prototype),
                    "init",
                    this
                  ).call(this),
                    this.adapter_.registerScrollHandler(this.scrollHandler_),
                    this.adapter_.registerResizeHandler(this.resizeHandler_);
                }
              },
              {
                key: "destroy",
                value: function() {
                  _get(
                    MDCTopAppBarFoundation.prototype.__proto__ ||
                      Object.getPrototypeOf(MDCTopAppBarFoundation.prototype),
                    "destroy",
                    this
                  ).call(this),
                    this.adapter_.deregisterScrollHandler(this.scrollHandler_),
                    this.adapter_.deregisterResizeHandler(this.resizeHandler_),
                    this.adapter_.setStyle("top", "");
                }
              },
              {
                key: "checkForUpdate_",
                value: function() {
                  var offscreenBoundaryTop = -this.topAppBarHeight_,
                    hasAnyPixelsOffscreen = this.currentAppBarOffsetTop_ < 0,
                    hasAnyPixelsOnscreen =
                      this.currentAppBarOffsetTop_ > offscreenBoundaryTop,
                    partiallyShowing =
                      hasAnyPixelsOffscreen && hasAnyPixelsOnscreen;
                  if (partiallyShowing) this.wasDocked_ = !1;
                  else {
                    if (!this.wasDocked_) return (this.wasDocked_ = !0), !0;
                    if (this.isDockedShowing_ !== hasAnyPixelsOnscreen)
                      return (this.isDockedShowing_ = hasAnyPixelsOnscreen), !0;
                  }
                  return partiallyShowing;
                }
              },
              {
                key: "moveTopAppBar_",
                value: function() {
                  if (this.checkForUpdate_()) {
                    var offset = this.currentAppBarOffsetTop_;
                    Math.abs(offset) >= this.topAppBarHeight_ &&
                      (offset = -__WEBPACK_IMPORTED_MODULE_2__constants__.b
                        .MAX_TOP_APP_BAR_HEIGHT),
                      this.adapter_.setStyle("top", offset + "px");
                  }
                }
              },
              {
                key: "topAppBarScrollHandler_",
                value: function() {
                  var currentScrollPosition = Math.max(
                      this.adapter_.getViewportScrollY(),
                      0
                    ),
                    diff = currentScrollPosition - this.lastScrollPosition_;
                  (this.lastScrollPosition_ = currentScrollPosition),
                    this.isCurrentlyBeingResized_ ||
                      ((this.currentAppBarOffsetTop_ -= diff),
                      this.currentAppBarOffsetTop_ > 0
                        ? (this.currentAppBarOffsetTop_ = 0)
                        : Math.abs(this.currentAppBarOffsetTop_) >
                            this.topAppBarHeight_ &&
                          (this.currentAppBarOffsetTop_ = -this
                            .topAppBarHeight_),
                      this.moveTopAppBar_());
                }
              },
              {
                key: "topAppBarResizeHandler_",
                value: function() {
                  var _this144 = this;
                  this.resizeThrottleId_ ||
                    (this.resizeThrottleId_ = setTimeout(function() {
                      (_this144.resizeThrottleId_ = INITIAL_VALUE),
                        _this144.throttledResizeHandler_();
                    }, __WEBPACK_IMPORTED_MODULE_2__constants__
                      .b.DEBOUNCE_THROTTLE_RESIZE_TIME_MS)),
                    (this.isCurrentlyBeingResized_ = !0),
                    this.resizeDebounceId_ &&
                      clearTimeout(this.resizeDebounceId_),
                    (this.resizeDebounceId_ = setTimeout(function() {
                      _this144.topAppBarScrollHandler_(),
                        (_this144.isCurrentlyBeingResized_ = !1),
                        (_this144.resizeDebounceId_ = INITIAL_VALUE);
                    }, __WEBPACK_IMPORTED_MODULE_2__constants__
                      .b.DEBOUNCE_THROTTLE_RESIZE_TIME_MS));
                }
              },
              {
                key: "throttledResizeHandler_",
                value: function() {
                  var currentHeight = this.adapter_.getTopAppBarHeight();
                  this.topAppBarHeight_ !== currentHeight &&
                    ((this.wasDocked_ = !1),
                    (this.currentAppBarOffsetTop_ -=
                      this.topAppBarHeight_ - currentHeight),
                    (this.topAppBarHeight_ = currentHeight)),
                    this.topAppBarScrollHandler_();
                }
              }
            ]),
            MDCTopAppBarFoundation
          );
        })();
      __webpack_exports__.a = MDCTopAppBarFoundation;
    }
  ]);
